{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/youtube/YoutubeSafeUrlPipe.ts","webpack:///./src/app/services/youtube/comment.model.ts","webpack:///./src/app/services/youtube/index.ts","webpack:///./src/app/services/youtube/video.model.ts","webpack:///./src/app/services/youtube/youtube-api.service.ts","webpack:///./src/app/services/youtube/youtube-data-converter.ts","webpack:///./src/app/youtube-list/youtube-expandable-table-data.provider.ts","webpack:///./src/app/youtube-list/youtube-list.component.html","webpack:///./src/app/youtube-list/youtube-list.component.scss","webpack:///./src/app/youtube-list/youtube-list.component.ts","webpack:///./src/app/youtube-player/modal/youtube-player-dialog/youtube-player-dialog.component.css","webpack:///./src/app/youtube-player/modal/youtube-player-dialog/youtube-player-dialog.component.html","webpack:///./src/app/youtube-player/modal/youtube-player-dialog/youtube-player-dialog.component.ts","webpack:///./src/app/youtube-player/player/youtube-player.component.html","webpack:///./src/app/youtube-player/player/youtube-player.component.scss","webpack:///./src/app/youtube-player/player/youtube-player.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-youtube-list></app-youtube-list>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngx-dynamic-table';\n}\n","import { DynamicExpandableTableModule, DynamicExpandableTableDataProvider, DynamicTableDataProvider } from 'ngx-dynamic-material-table';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { YoutubeAPIService } from './services/youtube';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { YoutubeListComponent } from './youtube-list/youtube-list.component';\nimport { YoutubeExpandableTableDataProvider } from './youtube-list/youtube-expandable-table-data.provider';\nimport { YoutubePlayerComponent } from './youtube-player/player/youtube-player.component';\nimport { YoutubePlayerDialogComponent } from './youtube-player/modal/youtube-player-dialog/youtube-player-dialog.component';\nimport { YoutubeSafeUrlPipe } from './services/youtube/YoutubeSafeUrlPipe';\nimport { MatToolbarModule, MatCardModule, MatDialogModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        YoutubeListComponent,\n        YoutubePlayerComponent,\n        YoutubePlayerDialogComponent,\n        YoutubeSafeUrlPipe\n    ],\n    entryComponents: [YoutubePlayerDialogComponent],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        DynamicExpandableTableModule,\n        DynamicExpandableTableModule.forRoot(),\n        MatToolbarModule,\n        MatCardModule,\n        MatDialogModule,\n        FlexLayoutModule\n    ],\n    providers: [\n        YoutubeAPIService,\n        YoutubeSafeUrlPipe,\n        YoutubeExpandableTableDataProvider,\n        { provide: DynamicTableDataProvider, useExisting: YoutubeExpandableTableDataProvider },\n        { provide: DynamicExpandableTableDataProvider, useExisting: YoutubeExpandableTableDataProvider },\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'youtubeSafeUrl'\n})\nexport class YoutubeSafeUrlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(videoId: string): SafeResourceUrl {\n    const videoUrl = 'https://www.youtube.com/embed/' + videoId + '?autoplay=1';\n    return this.sanitizer.bypassSecurityTrustResourceUrl(videoUrl);\n  }\n\n}\n","export class Comment {\n\n  constructor(public commentId: string,\n              public videoId: string,\n              public authorDisplayName: string,\n              public authorProfileImageUrl: string,\n              public authorChannelId: string,\n              public textDisplay: string,\n              public textOriginal: string,\n              public publishedAt: string,\n              public likeCount: string,\n              public replies: Comment[]) {\n    this.videoId = videoId;\n    this.commentId = commentId;\n    this.authorDisplayName = authorDisplayName;\n    this.authorProfileImageUrl = authorProfileImageUrl;\n    this.authorChannelId = authorChannelId;\n    this.textDisplay = textDisplay;\n    this.textOriginal = textOriginal;\n    this.publishedAt = publishedAt;\n    this.likeCount = likeCount;\n    this.replies = replies;\n  }\n}\n","/**\n * Created by gokhansari on 02.09.17.\n */\n\nexport * from './video.model';\nexport * from './youtube-api.service';\n","/**\n * Created by gokhansari on 02.09.17.\n */\n\nexport class Video {\n\n  constructor(public videoId: string,\n              public title: string,\n              public thumbnailUrlMedium: string,\n              public thumbnailUrlHigh: string,\n              public channelTitle: string,\n              public channelId: string,\n              public publishedAt: string,\n              public description: string,\n              public statisticViewCount: string,\n              public duration: string) {\n    this.videoId = videoId;\n    this.title = title;\n    this.thumbnailUrlMedium = thumbnailUrlMedium;\n    this.thumbnailUrlHigh = thumbnailUrlHigh;\n    this.channelTitle = channelTitle;\n    this.channelId = channelId;\n    this.publishedAt = publishedAt;\n    this.description = description;\n    this.statisticViewCount = statisticViewCount;\n    this.duration = duration;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Video } from './video.model';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class YoutubeAPIService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  private extractData(response: Response) {\n    return response.json();\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server Error');\n  }\n\n  public searchVideos(query: string): Observable<Video[]> {\n    return this.http.get<Video[]>(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}` +\n      '&maxResults=50' +\n      '&type=video' +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8')\n      .pipe(\n        map(resultobject => {\n          const results = [];\n          for (const item of resultobject['items']) {\n            results.push(item);\n          }\n          return results;\n        })\n      );\n  }\n\n  public getCommentsByVideoId(videoId: string) {\n    return this.http.get(`https://www.googleapis.com/youtube/v3/commentThreads?part=snippet,replies&videoId=${videoId}` +\n      '&maxResults=50' +\n      '&order=relevance' +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8');\n  }\n\n  public getVideoById(videoId: string) {\n    return this.http.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics&id=${videoId}` +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8');\n  }\n\n  public getVideoCategories(regionCode: string) {\n    return this.http.get(`https://www.googleapis.com/youtube/v3/videoCategories?part=snippet&regionCode=${regionCode}` +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8')\n      .pipe(\n        map(this.extractData)\n      );\n  }\n\n  public getVideosByCategory(regionCode: string, videoCategoryId: string) {\n    return this.http.get(\n      `https://www.googleapis.com/youtube/v3/videos?chart=mostPopular&part=snippet,contentDetails,statistics&regionCode=${regionCode}` +\n      `&videoCategoryId=${videoCategoryId}` +\n      '&maxResults=6' +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8')\n      .pipe(\n        map(this.extractData)\n      );\n  }\n\n  public searchLiveVideos(query: string) {\n    return this.http.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}` +\n      '&maxResults=25' +\n      '&type=video' +\n      '&eventType=live' +\n      '&key=AIzaSyAW5x6wXJMsd6dXt_tBrWZHWDI7oK9Qhl8')\n  }\n\n  public getI18nLanguages(lang: string) {\n    lang = (lang != null) ? lang : 'en_US';\n    return this.http.get(`https://www.googleapis.com/youtube/v3/i18nLanguages?part=snippet&hl=${lang}`);\n  }\n\n\n}\n","import { Video } from './video.model';\nimport { Comment } from './comment.model';\n/**\n * Created by gokhansari on 03.09.17.\n */\n\nexport class YoutubeDataConverter {\n\n\n  public static convertVideo(data): Video {\n    return data.items.map(item => {\n      return new Video(\n        item.id,\n        item.snippet.title,\n        item.snippet.thumbnails.medium.url,\n        item.snippet.thumbnails.high.url,\n        item.snippet.channelTitle,\n        item.snippet.channelId,\n        item.snippet.publishedAt,\n        item.snippet.description,\n        item.statistics.viewCount,\n        item.contentDetails.duration\n      );\n    });\n  }\n\n  private static convertReplies(item): Comment[] {\n    if (!item.replies) { return []; }\n    return item.replies.comments.map(reply => {\n      return new Comment(\n        reply.id,\n        reply.snippet.videoId,\n        reply.snippet.authorDisplayName,\n        reply.snippet.authorProfileImageUrl,\n        reply.snippet.authorChannelId.value,\n        reply.snippet.textDisplay,\n        reply.snippet.textOriginal,\n        reply.snippet.publishedAt,\n        reply.snippet.likeCount,\n        null\n      );\n    });\n  }\n\n  public static convertComments(data): Comment[] {\n    return data.items.map(item => {\n      return new Comment(\n        item.id,\n        item.snippet.videoId,\n        item.snippet.topLevelComment.snippet.authorDisplayName,\n        item.snippet.topLevelComment.snippet.authorProfileImageUrl,\n        item.snippet.topLevelComment.snippet.authorChannelId.value,\n        item.snippet.topLevelComment.snippet.textDisplay,\n        item.snippet.topLevelComment.snippet.textOriginal,\n        item.snippet.topLevelComment.snippet.publishedAt,\n        item.snippet.topLevelComment.snippet.likeCount,\n        this.convertReplies(item)\n      );\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n    DynamicTableColumnInterace,\n    DynamicExpandableTableColumnDefinitionConstants,\n    DynamicExpandableTableOptionInterface,\n    AbstractDynamicExpandableTableDataProvider,\n    DynamicExpandableTableExpandedItemColumnInterace,\n    DynamicTableUIUtils\n} from 'ngx-dynamic-material-table';\nimport { Observable, of } from 'rxjs';\nimport { YoutubeAPIService } from '../services/youtube';\n\n@Injectable()\nexport class YoutubeExpandableTableDataProvider extends AbstractDynamicExpandableTableDataProvider<Object> {\n\n    private expandedItemTableData: Object[] = this.createExpandedItemData();\n    protected expandableColumn: any = {\n        columns: [DynamicExpandableTableColumnDefinitionConstants.EXPANDABLE_COLUMN], names: ['Expand/Collapse'], backgroundColor: '#FC0012'\n    };\n\n    constructor(private youtubeAPIService: YoutubeAPIService) {\n        super();\n    }\n\n    getColumns(): DynamicTableColumnInterace[] {\n        return [\n            this.expandableColumn,\n            {\n                columns: [DynamicExpandableTableColumnDefinitionConstants.ADDITIONAL_INFO],\n                names: ['Video Pic'],\n                backgroundColor: '#f7f7f7'\n            },\n            {\n                columns: [DynamicExpandableTableColumnDefinitionConstants.TITLE],\n                names: ['Video Title'],\n                backgroundColor: '#f7f7f7'\n            },\n            {\n                columns: [DynamicExpandableTableColumnDefinitionConstants.DESCRIPTION],\n                names: ['Channel Title'],\n                backgroundColor: '#f7f7f7'\n            },\n            {\n                columns: [DynamicExpandableTableColumnDefinitionConstants.HTML_ACTIONS],\n                names: ['Actions'],\n                backgroundColor: '#f7f7f7'\n            },\n        ];\n    }\n\n    getData(sort: string, order: string, page: number): Observable<Object[]> {\n        return this.youtubeAPIService.searchVideos('google');\n    }\n\n    getTitle(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return item['snippet']['title'];\n    }\n\n    getAdditionalInfo(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return '<img src=\"' + item['snippet']['thumbnails']['default']['url'] + '\" />';\n    }\n\n    getHTMLAction(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return '<button mat-raised-button color=\"warn\" '\n            + '(click)=\"' + DynamicTableUIUtils.createHTMLAction('do something', item) + '\">'\n            + '<mat-icon>play_arrow</mat-icon> Play</button>';\n    }\n\n    getDescription(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return item['snippet']['channelTitle'];\n    }\n\n    getOtherTextBased(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        throw new Error('Method not implemented.');\n    }\n\n    getExpandedItemTableColumns(expandedItem: Object): DynamicExpandableTableExpandedItemColumnInterace[] {\n        return [\n            this.createExpandedItemColumn('videodesc', 'Video Description', '#8F010A', '#ffffff', ''),\n            this.createExpandedItemColumn('published', 'Published Date', '#8F010A', '#ffffff', ''),\n        ];\n    }\n\n    private createExpandedItemData(): Object[] {\n        return [\n            {\n                'videodesc': '',\n                'published': '',\n            }\n        ];\n    }\n\n    getExpandedItemTableData(expandedItem: Object): Observable<Object[]> {\n        const itemDetails: Object = this.expandedItemTableData[0];\n        itemDetails['videodesc'] = expandedItem['snippet']['description'];\n        itemDetails['published'] = expandedItem['snippet']['publishedAt'];\n        return of(this.expandedItemTableData);\n    }\n\n    getOptions(): DynamicExpandableTableOptionInterface[] {\n        const options = [];\n        const expandableColumnOption = Object.assign({}, this.expandableColumn);\n        expandableColumnOption['hoverBackgroundColor'] = '#494949';\n        expandableColumnOption['backgroundColor'] = '#FC0012';\n        const table1Options: DynamicExpandableTableOptionInterface = {\n            groupName: 'NGX-DYNAMIC-MATERIAL-TABLE',\n            groupExpressions: [],\n            groupItemRowColor: '',\n            hideColumns: false,\n            hideColumnsOfExpandedItems: false,\n            hideColumnsOfExpandedItemDetails: true,\n            columnOptions: []\n        };\n        options.push(table1Options);\n        return options;\n    }\n\n    //////////////////////////////////////////// UNSUED FUNCTIONS ////////////////////////////////////////////\n    getExpandedItemDetailsTableColumns(expandedItemDetails: Object, expandedItem: Object)\n        : DynamicExpandableTableExpandedItemColumnInterace[] {\n        return null;\n    }\n    getExpandedItemDetailsTableData(expandedItemDetails: Object, expandedItem: Object): Observable<Object[]> {\n        return of([]);\n    }\n\n    getIndicatorColor(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        throw new Error('Method not implemented.');\n    }\n\n    getIndicatorSign(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        throw new Error('Method not implemented.');\n    }\n\n    getHTMLIcon(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        throw new Error('Method not implemented.');\n    }\n\n    getHTMLContentSummary(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        throw new Error('Method not implemented.');\n    }\n\n\n\n}\n","module.exports = \"<dynamic-expandable-table [showFilter]=\\\"false\\\"></dynamic-expandable-table>\\n\"","module.exports = \".pal-table-container {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n  height: 94vh;\\n  padding-bottom: 130px;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch; }\\n\\n.pal-table-header {\\n  min-height: 65px;\\n  height: 65px;\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  padding-left: 24px;\\n  padding-right: 24px;\\n  padding-top: 12px; }\\n\\n.pal-table {\\n  overflow: auto;\\n  height: 100%;\\n  font-size: 1.5vw; }\\n\\n.pal-table-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.1);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.pal-table-message {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #980000;\\n  max-width: 360px;\\n  text-align: center; }\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n  color: black; }\\n\\n.mat-row {\\n  min-height: 130px;\\n  padding: 0 7px; }\\n\\n.mat-cell {\\n  font-size: 1.57vw;\\n  min-height: 130px; }\\n\\n.flex-column, .color-column, .icon-column, .title-column, .description-column, .html-content-summary-column, .additional-info-column, .actions-column, .other-text-based-column, .selected-row-column, .expanded-item-columns, :host ::ng-deep .expanded-item-column-videodesc, :host ::ng-deep .expanded-item-column-published {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row;\\n  flex: 1; }\\n\\n.color-column {\\n  font-size: 1.85vw;\\n  width: 40px;\\n  min-width: 40px;\\n  max-width: 40px; }\\n\\n.icon-column {\\n  width: 5%;\\n  min-width: 5%;\\n  max-width: 5%; }\\n\\n.no-data-found-icon {\\n  height: 128px;\\n  width: 128px; }\\n\\n.no-data-found-text {\\n  font-size: 24px;\\n  color: gray;\\n  font-weight: 700; }\\n\\n.no-header-columns {\\n  display: none; }\\n\\n.current-selected-row {\\n  background-color: #f5fcfd; }\\n\\n.selected-row-icon {\\n  font-size: 12px;\\n  color: #1EBAE4; }\\n\\n.selected-row-column {\\n  justify-content: flex-start;\\n  width: 12px;\\n  min-width: 12px;\\n  max-width: 12px; }\\n\\n.speed-dial-container {\\n  position: fixed;\\n  bottom: 32px;\\n  right: 32px; }\\n\\n.speed-dial-option-icon {\\n  color: #ffffff; }\\n\\n.toolbar-buttons {\\n  width: 50%; }\\n\\n.toolbar-button {\\n  margin: 5px; }\\n\\n.mat-form-field-label-wrapper {\\n  top: -3px;\\n  padding-top: -3px; }\\n\\n.mat-toolbar {\\n  background-color: #494949; }\\n\\n.pal-table-grouped-container {\\n  width: 100%; }\\n\\n.pal-table-grouped {\\n  width: 100%; }\\n\\n.text-color, :host ::ng-deep .mat-cell {\\n  color: #494949; }\\n\\n:host ::ng-deep .mat-toolbar {\\n  min-height: 100px;\\n  height: 100px;\\n  color: #ffffff;\\n  font-size: 26px !important;\\n  background-color: #8F010A !important; }\\n\\n:host ::ng-deep .mat-row {\\n  overflow: hidden; }\\n\\n:host ::ng-deep .mat-cell:first-child {\\n  padding-left: 0px !important; }\\n\\n.cell, :host ::ng-deep .expandable-row-column, :host ::ng-deep .title-column, :host ::ng-deep .additional-info-column, :host ::ng-deep .actions-column, :host ::ng-deep .description-column {\\n  justify-content: center;\\n  font-size: 20px !important; }\\n\\n:host ::ng-deep .expandable-row-column-header {\\n  background-color: #FC0012; }\\n\\n:host ::ng-deep .expandable-row-column {\\n  cursor: pointer;\\n  width: 5%;\\n  min-width: 5%;\\n  max-width: 5%; }\\n\\n:host ::ng-deep .title-column-header {\\n  background-color: #FC0012; }\\n\\n:host ::ng-deep .title-column {\\n  justify-content: flex-start;\\n  padding-left: 5px; }\\n\\n:host ::ng-deep .additional-info-column-header {\\n  background-color: #FC0012; }\\n\\n:host ::ng-deep .additional-info-column {\\n  width: 10% !important;\\n  min-width: 10% !important;\\n  max-width: 10% !important; }\\n\\n:host ::ng-deep .actions-column-header {\\n  background-color: #FC0012; }\\n\\n:host ::ng-deep .actions-column {\\n  justify-content: flex-end;\\n  min-width: 15%;\\n  max-width: 15%; }\\n\\n:host ::ng-deep .description-column-header {\\n  background-color: #FC0012; }\\n\\n:host ::ng-deep .description-column {\\n  justify-content: flex-start;\\n  padding-left: 5px;\\n  width: 15%;\\n  min-width: 15%;\\n  max-width: 15%; }\\n\\n:host ::ng-deep .pal-expandable-table-grouped-container {\\n  padding-bottom: 150px; }\\n\\n:host ::ng-deep .pal-expandable-table-grouped {\\n  margin-top: 1vh; }\\n\\n.expanded-item-columns, :host ::ng-deep .expanded-item-column-videodesc, :host ::ng-deep .expanded-item-column-published {\\n  color: #ffffff;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 16px; }\\n\\n:host ::ng-deep .expanded-item-column-videodesc {\\n  justify-content: center;\\n  background-color: #e9e9e9;\\n  color: #000000; }\\n\\n:host ::ng-deep .expanded-item-column-published {\\n  justify-content: center;\\n  background-color: #e9e9e9;\\n  color: #000000; }\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UsingDynamicTableComponent, DynamicTableActionMessageService } from 'ngx-dynamic-material-table';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material';\nimport { YoutubePlayerDialogComponent } from '../youtube-player/modal/youtube-player-dialog/youtube-player-dialog.component';\n\n@Component({\n  selector: 'app-youtube-list',\n  templateUrl: './youtube-list.component.html',\n  styleUrls: ['./youtube-list.component.scss']\n})\nexport class YoutubeListComponent implements AfterViewInit, UsingDynamicTableComponent<Object> {\n\n  constructor(private palTableActionMessage: DynamicTableActionMessageService<object>, public dialog: MatDialog) { }\n\n  ngAfterViewInit(): void {\n    this.handleDynamicTableActions(this.palTableActionMessage.getPubisher());\n  }\n\n  playVideoInDialog(videoId: string): void {\n    const dialogRef = this.dialog.open(YoutubePlayerDialogComponent, {\n      width: '60%',\n      height: '60%',\n      data: { videoId: videoId }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\nhandleDynamicTableActions(publisher: Observable<Object>): void {\n  if(publisher != null) {\n  publisher.subscribe(\n    (actionMessage: DynamicTableActionMessageService<object>) => {\n      switch (actionMessage.getAction()) {\n        case 'do something':\n          const item = actionMessage.getItem();\n          this.playVideoInDialog(item['id']['videoId']);\n          break;\n      }\n    }\n  );\n}\n  }\n\nhandleDynamicTableMouseOverEvents(publisher: Observable<object>): void {\n  throw new Error('Method not implemented.');\n}\n\n  handleDynamicTableMouseOutEvents(publisher: Observable<object>): void {\n    throw new Error('Method not implemented.');\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<app-youtube-player [videoId]=\\\"videoId\\\"></app-youtube-player>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-youtube-player-dialog',\n  templateUrl: './youtube-player-dialog.component.html',\n  styleUrls: ['./youtube-player-dialog.component.css']\n})\nexport class YoutubePlayerDialogComponent implements OnInit {\n\n  public videoId: string;\n\n  constructor(public dialogRef: MatDialogRef<YoutubePlayerDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: Object) {\n    this.videoId = data['videoId'];\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void { }\n\n}\n","module.exports = \"<!--\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex class=\\\"embed-container\\\">\\n    <iframe *ngIf=\\\"video\\\" width=\\\"90%\\\" height=\\\"80%\\\" frameborder=\\\"0\\\" allowfullscreen [src]=\\\"video?.videoId | youtubeSafeUrl\\\"></iframe>\\n  </div>\\n  <div fxFlex>\\n    <mat-card *ngIf=\\\"video\\\">\\n      <mat-card-header>\\n        <img md-card-avatar [src]=\\\"video.thumbnailUrlMedium\\\">\\n        <mat-card-title>{{video.title}}</mat-card-title>\\n        <mat-card-subtitle>{{video.description}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>\\n          Views: {{video.statisticViewCount}} | Duration: {{video.duration}}\\n        </p>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n\\n</div>\\n\\n-->\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxLayoutGap=\\\"10\\\">\\n  <!-- VIDEO PLAYER-->\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\" fxLayoutGap=\\\"10\\\">\\n    <div fxFlex=\\\"70\\\">\\n      <div class=\\\"embed-container\\\">\\n        <iframe *ngIf=\\\"video\\\" width=\\\"90%\\\" height=\\\"100%\\\" frameborder=\\\"0\\\" allowfullscreen [src]=\\\"video?.videoId | youtubeSafeUrl\\\"></iframe>\\n      </div>\\n    </div>\\n    <div fxFlex=\\\"30\\\">\\n      <mat-card *ngIf=\\\"video\\\" class=\\\"video-description\\\">\\n        <mat-card-header>\\n          <img mat-card-avatar [src]=\\\"video.thumbnailUrlMedium\\\">\\n          <mat-card-title>{{video.title}}</mat-card-title>\\n          <mat-card-subtitle>Views: {{video.statisticViewCount}} | Duration: {{video.duration}}</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n          {{video.description}}\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n  <!-- COMMENTS TABLE -->\\n  <div>\\n    <mat-toolbar>Comments</mat-toolbar>\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n      <div class=\\\"comments\\\">\\n        <mat-card *ngFor=\\\"let comment of comments\\\" class=\\\"comment\\\">\\n          <mat-card-header>\\n            <img mat-card-avatar [src]=\\\"comment.authorProfileImageUrl\\\">\\n            <mat-card-title class=\\\"comment-title\\\">{{comment.authorDisplayName}}</mat-card-title>\\n            <mat-card-subtitle>Likes: {{comment.likeCount}}</mat-card-subtitle>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div [innerHTML]=\\\"comment.textDisplay\\\"></div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<!--\\n<div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"stretch\\\" class=\\\"content\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start stretch\\\">\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"70\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n        <div fxLayout=\\\"row\\\" fxFlex=\\\"65\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"embed-container\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start stretch\\\">\\n            <div *ngIf=\\\"video\\\">\\n              <iframe *ngIf=\\\"video\\\" width=\\\"90%\\\" height=\\\"80%\\\" frameborder=\\\"0\\\" allowfullscreen [src]=\\\"video?.videoId | youtubeSafeUrl\\\"></iframe>\\n            </div>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxFlex=\\\"35\\\" fxLayoutAlign=\\\"start start\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n            <mat-card *ngIf=\\\"video\\\">\\n              <mat-card-header>\\n                <img mat-card-avatar [src]=\\\"video.thumbnailUrlMedium\\\">\\n                <mat-card-title>{{video.title}}</mat-card-title>\\n                <mat-card-subtitle>{{video.description}}</mat-card-subtitle>\\n              </mat-card-header>\\n              <mat-card-content>\\n                <p>\\n                  Views: {{video.statisticViewCount}} | Duration: {{video.duration}}\\n                </p>\\n              </mat-card-content>\\n            </mat-card>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" fxLayoutAlign=\\\"start stretch\\\">\\n      <mat-toolbar>Comments</mat-toolbar>\\n      <div class=\\\"comments\\\">\\n        <mat-card *ngFor=\\\"let comment of comments\\\" class=\\\"comment\\\">\\n          <mat-card-header>\\n            <img mat-card-avatar [src]=\\\"comment.authorProfileImageUrl\\\">\\n            <mat-card-title class=\\\"comment-title\\\">{{comment.authorDisplayName}}</mat-card-title>\\n            <mat-card-subtitle>Likes: {{comment.likeCount}}</mat-card-subtitle>\\n          </mat-card-header>\\n          <mat-card-content>\\n            <div [innerHTML]=\\\"comment.textDisplay\\\"></div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n-->\\n\"","module.exports = \".embed-container {\\n  position: relative;\\n  height: 0; }\\n\\n.embed-container iframe {\\n  width: 100%;\\n  height: 45vh; }\\n\\n.comments {\\n  height: calc(80vh - 64px); }\\n\\n.comment {\\n  margin: 5px; }\\n\\n.comment-title {\\n  font-weight: 700; }\\n\\n.video-description {\\n  height: calc(45vh - 5vh);\\n  overflow: scroll; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Video } from '../../services/youtube/video.model';\nimport { Comment } from '../../services/youtube/comment.model';\nimport { YoutubeAPIService } from '../../services/youtube';\nimport { YoutubeDataConverter } from '../../services/youtube/youtube-data-converter';\n\n@Component({\n  selector: 'app-youtube-player',\n  templateUrl: './youtube-player.component.html',\n  styleUrls: ['./youtube-player.component.scss']\n})\nexport class YoutubePlayerComponent implements OnInit {\n\n  @Input() public videoId: string;\n  public video: Video;\n  public comments: Comment[];\n\n  constructor(private youtubeAPIService: YoutubeAPIService) { }\n\n  ngOnInit() {\n    this.youtubeAPIService.getVideoById(this.videoId)\n      .subscribe(data => {\n        this.video = YoutubeDataConverter.convertVideo(data)[0];\n        this.youtubeAPIService.getCommentsByVideoId(this.video.videoId)\n          .subscribe(results => {\n            this.comments = YoutubeDataConverter.convertComments(results);\n          });\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}