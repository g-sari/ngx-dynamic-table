var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDynamicBaseService.html",[0,0.196,1,2.567]],["body/classes/AbstractDynamicBaseService.html",[0,0.343,1,3.783,2,0.188,3,0.188,4,0.127,5,4.291,6,1.073,7,3.85,8,0.6,9,3.465,10,3.783,11,3.783,12,4.291,13,3.381,14,2.517,15,1.247,16,3.101,17,3.924,18,0.472,19,3.85,20,0.848,21,0.025,22,0.555,23,0.394,24,0.6,25,0.432,26,5.288,27,3.264,28,2.126,29,0.85,30,0.157,31,3.783,32,3.246,33,3.85,34,3.85,35,2.359,36,2.359,37,1.639,38,5.061,39,5.654,40,1.123,41,1.168,42,4.793,43,3.85,44,1.989,45,3.85,46,2.731,47,5.061,48,3.85,49,2.359,50,3.85,51,3.264,52,2.168,53,5.061,54,3.85,55,3.85,56,3.85,57,3.264,58,3.85,59,3.783,60,3.85,61,3.85,62,3.85,63,2.878,64,2.878,65,3.85,66,3.85,67,3.85,68,3.85,69,3.85,70,3.85,71,3.85,72,3.85,73,0.018,74,0.018]],["title/classes/AbstractWebLibraryComponent.html",[0,0.196,75,2.567]],["body/classes/AbstractWebLibraryComponent.html",[0,0.291,2,0.19,3,0.19,4,0.128,5,4.32,8,0.606,9,3.482,10,3.809,14,2.46,15,1.26,16,3.123,17,3.935,18,0.477,20,0.652,21,0.025,22,0.561,23,0.255,24,0.606,25,0.572,29,0.859,30,0.159,31,4.248,32,2.024,35,3.123,40,0.7,41,1.174,63,2.908,73,0.018,74,0.018,75,3.809,76,3.809,77,3.89,78,4.507,79,3.123,80,4.817,81,5.682,82,4.817,83,3.89,84,5.096,85,5.682,86,4.32,87,2.908,88,2.617,89,2.908,90,3.89,91,3.298,92,3.89,93,3.89,94,3.89,95,3.89,96,3.298,97,3.298,98,5.682,99,5.682,100,6.029,101,6.029,102,2.19,103,3.89,104,4.32,105,3.427,106,5.096,107,3.102,108,3.298,109,3.89,110,3.298,111,3.89,112,3.298,113,3.89,114,5.096,115,5.682,116,2.617,117,3.298,118,3.89,119,3.89,120,2.908,121,3.89,122,3.89]],["title/classes/DynamicExpandableTableColumnDefinitionConstants.html",[0,0.196,123,2.567]],["body/classes/DynamicExpandableTableColumnDefinitionConstants.html",[0,0.258,2,0.159,3,0.159,4,0.107,6,0.544,8,0.872,18,0.824,21,0.025,23,0.438,25,0.365,30,0.132,40,0.812,41,0.671,73,0.016,74,0.016,123,3.371,124,0.386,125,2.558,126,2.705,127,0.367,128,2.519,129,2.752,130,2.029,131,4.551,132,0.213,133,2.761,134,4.305,135,6.246,136,4.393,137,4.393,138,4.393,139,4.393,140,4.393,141,4.393,142,4.393,143,4.393,144,4.393,145,3.431,146,3.823,147,0.787,148,3.473,149,3.003,150,4.51,151,2.752,152,2.427,153,4.946,154,3.246,155,3.246,156,2.752,157,3.246,158,2.752,159,3.246,160,2.752,161,3.246,162,2.427,163,3.246,164,2.752,165,3.246,166,2.752,167,3.246,168,2.752,169,3.246,170,2.752,171,3.246,172,3.246,173,3.246,174,2.752,175,3.246,176,0.717,177,3.246]],["title/components/DynamicExpandableTableComponent.html",[14,1.35,178,2.105]],["body/components/DynamicExpandableTableComponent.html",[0,0.159,2,0.136,3,0.136,4,0.092,6,1.062,14,2.275,15,0.901,16,2.476,17,3.4,18,0.787,20,0.466,21,0.025,22,0.753,23,0.38,24,0.433,25,0.65,29,0.614,30,0.113,31,3.021,40,0.728,41,0.835,49,2.476,64,3.557,73,0.014,74,0.014,86,3.426,87,2.079,88,1.871,91,2.358,96,2.358,97,2.358,107,2.523,120,2.079,124,0.301,125,2.774,127,0.343,130,1.818,132,0.183,133,1.588,134,2.476,147,0.454,148,2.887,149,2.496,153,4.735,176,1.458,178,3.201,179,1.871,180,2.358,181,2.358,182,3.201,183,2.358,184,4.046,185,1.169,186,2.431,187,3.021,188,2.782,189,4.041,190,3.426,191,3.021,192,3.426,193,4.035,194,4.035,195,4.035,196,4.035,197,4.035,198,3.557,199,4.035,200,1.309,201,4.035,202,4.035,203,2.194,204,3.426,205,2.782,206,2.079,207,2.782,208,2.782,209,3.557,210,3.426,211,1.871,212,2.782,213,2.358,214,2.358,215,3.021,216,2.782,217,2.476,218,2.079,219,2.782,220,2.782,221,2.782,222,2.275,223,2.782,224,2.103,225,2.782,226,3.426,227,2.358,228,2.358,229,2.782,230,4.041,231,1.871,232,2.782,233,3.201,234,2.782,235,3.426,236,2.358,237,1.566,238,1.871,239,2.079,240,2.079,241,2.358,242,2.782,243,2.782,244,3.426,245,3.426,246,2.782,247,3.426,248,2.782,249,2.782,250,2.782,251,2.782,252,2.782,253,2.782,254,2.782,255,2.782,256,2.782,257,2.782,258,1.871,259,2.782,260,2.079,261,2.782,262,2.782,263,2.358,264,2.782,265,2.358,266,2.358,267,2.782,268,2.358,269,1.448,270,2.782,271,2.782,272,2.782,273,2.275,274,3.426,275,1.705,276,1.588,277,3.021,278,0.892,279,4.428,280,2.358,281,3.426,282,1.871,283,2.358,284,1.871,285,1.566,286,2.358,287,1.566,288,2.358,289,1.566,290,2.358,291,1.566,292,2.358,293,1.566,294,2.358,295,1.566,296,2.358,297,1.566,298,2.358,299,1.566,300,2.079,301,2.358]],["title/interfaces/DynamicExpandableTableDataInterface.html",[302,0.576,303,2.567]],["body/interfaces/DynamicExpandableTableDataInterface.html",[2,0.189,3,0.189,4,0.128,6,0.951,18,0.766,20,1.009,21,0.025,22,0.869,23,0.395,24,0.938,25,0.676,30,0.158,41,1.291,73,0.018,74,0.018,124,0.477,125,2.925,127,0.44,130,2.288,132,0.254,200,1.647,224,2.646,302,0.852,303,3.8,304,2.407,305,2.898,306,4.24,307,4.31,308,4.31,309,4.31,310,4.31,311,4.05,312,3.8,313,4.728,314,4.958,315,3.287,316,4.31,317,3.52,318,3.8,319,3.287,320,3.02,321,3.8,322,3.287,323,3.8,324,3.287,325,3.287,326,1.744,327,2.376,328,2.376,329,1.427,330,2.183,331,3.287]],["title/injectables/DynamicExpandableTableDataProvider.html",[237,1.934,332,0.809]],["body/injectables/DynamicExpandableTableDataProvider.html",[0,0.142,2,0.121,3,0.121,4,0.082,6,0.623,18,0.649,20,0.829,21,0.025,22,0.713,23,0.325,24,0.865,25,0.647,29,0.549,30,0.101,41,1.274,46,2.152,73,0.013,74,0.013,79,1.523,102,1.399,124,0.413,125,2.761,126,2.783,127,0.348,128,2.977,130,1.118,132,0.163,147,0.279,149,1.118,198,1.858,200,1.205,206,3.331,222,2.094,237,2.094,258,1.671,269,3.512,303,2.78,304,0.915,307,3.152,308,3.152,309,3.152,310,3.152,311,3.327,312,2.78,314,4.428,316,3.152,317,3.243,318,2.78,320,2.558,321,2.78,323,2.78,326,1.118,327,3.245,328,1.523,329,0.915,330,1.399,331,2.107,332,1.05,333,2.485,334,3.766,335,2.485,336,2.485,337,2.485,338,2.485,339,2.485,340,2.73,341,1.118,342,2.094,343,1.858,344,2.997,345,2.485,346,4.45,347,2.107,348,2.107,349,4.054,350,2.107,351,4.45,352,2.107,353,3.152,354,3.152,355,3.718,356,3.718,357,3.152,358,3.152,359,2.78,360,3.718,361,3.152,362,3.152,363,3.152,364,3.718,365,3.152,366,3.152,367,3.152,368,3.152,369,3.152,370,2.485,371,2.485,372,2.485,373,2.485,374,2.485,375,2.485,376,2.485,377,2.485,378,2.485,379,2.485,380,2.485,381,3.718,382,2.485,383,3.718,384,2.107,385,2.107,386,1.858,387,1.858,388,2.501,389,1.671,390,2.107,391,1.858,392,1.399,393,2.107,394,2.107,395,2.107,396,2.107,397,2.107,398,2.485]],["title/interfaces/DynamicExpandableTableExpandedItemColumnInterace.html",[302,0.576,317,1.934]],["body/interfaces/DynamicExpandableTableExpandedItemColumnInterace.html",[2,0.231,3,0.231,4,0.156,6,0.795,8,0.738,21,0.024,23,0.436,30,0.193,40,1.039,73,0.02,74,0.02,124,0.353,125,2.616,127,0.379,128,2.915,132,0.311,147,0.799,269,3.372,302,0.968,304,1.745,317,3.25,329,1.745,346,4.358,349,3.971,351,4.358,399,4.018,400,1.991,401,1.991]],["title/modules/DynamicExpandableTableModule.html",[44,1.35,402,2.105]],["body/modules/DynamicExpandableTableModule.html",[0,0.213,2,0.182,3,0.182,4,0.163,6,1.035,8,0.581,13,2.099,21,0.025,25,0.738,29,0.823,30,0.242,41,0.77,44,1.947,46,1.801,73,0.017,74,0.017,124,0.277,125,2.666,127,0.365,133,1.465,178,4.183,182,3.332,237,3.573,238,2.508,239,2.787,240,2.787,275,2.285,282,4.591,341,2.668,400,1.566,401,1.566,402,4.278,403,1.94,404,3.133,405,2.787,406,3.161,407,3.161,408,3.161,409,3.161,410,3.161,411,3.703,412,3.703,413,2.787,414,1.94,415,4.2,416,2.787,417,2.787,418,2.787,419,2.787,420,2.787,421,2.787,422,3.161,423,3.161,424,2.787,425,3.743,426,4.717,427,3.703,428,2.508,429,3.728,430,3.161,431,3.728,432,4.2,433,2.787,434,3.728,435,3.728]],["title/interfaces/DynamicExpandableTableOptionInterface.html",[302,0.576,327,2.105]],["body/interfaces/DynamicExpandableTableOptionInterface.html",[2,0.243,3,0.243,4,0.164,6,0.835,21,0.024,23,0.39,25,0.56,30,0.203,40,1.071,73,0.021,74,0.021,124,0.371,125,2.5,127,0.39,130,2.677,132,0.327,302,0.997,304,2.191,327,3.646,328,3.054,395,5.586,396,5.586,436,4.224,437,3.582,438,5.794]],["title/classes/DynamicExpandableTableUtils.html",[0,0.196,439,2.912]],["body/classes/DynamicExpandableTableUtils.html",[0,0.328,2,0.23,3,0.23,4,0.155,18,0.577,20,0.79,21,0.025,22,0.679,23,0.309,24,0.733,25,0.529,30,0.192,41,1.188,46,2.778,52,2.652,73,0.02,74,0.02,124,0.428,125,2.834,126,2.778,127,0.309,128,2.793,132,0.309,133,2.44,147,0.697,176,1.04,200,1.863,224,3.231,317,2.652,329,1.734,330,2.652,340,2.886,439,4.875,440,3.993,441,4.875,442,4.875,443,4.71,444,4.875,445,4.71,446,4.71]],["title/injectables/DynamicTableActionMessageService.html",[332,0.809,447,2.105]],["body/injectables/DynamicTableActionMessageService.html",[0,0.216,2,0.185,3,0.185,4,0.125,18,0.781,20,0.94,21,0.025,22,0.809,23,0.368,24,0.873,25,0.562,29,0.836,30,0.154,41,1.379,73,0.017,74,0.017,107,2.997,124,0.484,127,0.427,132,0.248,147,0.716,176,1.548,200,1.621,313,4.287,320,2.997,326,1.703,329,2.064,332,1.321,344,3.771,447,3.067,448,5.511,449,3.257,450,3.209,451,5.965,452,5.057,453,5.057,454,5.004,455,4.242,456,4.242,457,3.209,458,3.209,459,3.209,460,5.004,461,3.209,462,4.242,463,3.209,464,4.242,465,3.209,466,3.157,467,5.004,468,4.242,469,4.242]],["title/directives/DynamicTableActionsContainerDirective.html",[278,0.758,285,1.934]],["body/directives/DynamicTableActionsContainerDirective.html",[0,0.255,2,0.218,3,0.218,4,0.147,8,0.695,15,1.446,18,0.743,20,0.749,21,0.025,22,0.874,23,0.398,24,0.695,25,0.501,28,2.928,29,0.986,30,0.182,37,1.803,40,1.002,73,0.019,74,0.019,124,0.472,127,0.417,132,0.293,147,0.625,176,1.228,185,1.876,186,2.049,203,2.547,276,2.187,278,1.338,285,3.133,332,1.311,449,3.066,470,3.066,471,2.514,472,2.688,473,2.338,474,6.529,475,2.157,476,3.133,477,2.514,478,2.514,479,4.465,480,2.324]],["title/classes/DynamicTableColumnDefinitionConstants.html",[0,0.196,131,2.31]],["body/classes/DynamicTableColumnDefinitionConstants.html",[0,0.216,2,0.124,3,0.124,4,0.084,6,0.427,8,0.966,18,0.833,21,0.025,23,0.413,30,0.104,40,0.682,41,1.3,73,0.013,74,0.013,124,0.507,126,3.295,127,0.449,128,3.069,129,2.16,131,2.548,132,0.167,133,2.744,134,4.278,136,4.924,137,4.924,138,4.924,139,4.924,140,4.924,141,4.924,142,4.924,143,4.924,144,4.924,145,3.736,146,3.211,147,0.763,148,3.276,149,2.833,151,2.16,152,2.831,156,3.211,158,3.211,160,3.211,162,2.831,164,3.211,166,3.211,168,3.211,170,3.211,174,2.16,176,1.39,400,1.07,401,1.07,481,1.561,482,2.547,483,2.547,484,2.547,485,2.547,486,2.547,487,2.547,488,2.547,489,2.547,490,2.547,491,2.547,492,2.547,493,2.547,494,2.547,495,2.16,496,2.547,497,2.547,498,2.547,499,2.16,500,2.547,501,2.547,502,2.547,503,2.547,504,2.547,505,2.547,506,2.547,507,2.547,508,2.547,509,2.547,510,2.547,511,2.547,512,2.547,513,2.547,514,2.16,515,2.16,516,2.547,517,2.547,518,2.16,519,2.16,520,2.547,521,2.547,522,2.547,523,2.547]],["title/interfaces/DynamicTableColumnInterace.html",[302,0.576,524,1.934]],["body/interfaces/DynamicTableColumnInterace.html",[2,0.243,3,0.243,4,0.164,6,0.833,8,0.774,21,0.024,22,0.95,23,0.417,30,0.203,40,1.07,73,0.021,74,0.021,124,0.37,127,0.39,128,2.963,132,0.326,147,0.787,302,0.996,304,1.83,349,4.035,399,4.215,400,2.089,401,2.089,524,3.346]],["title/directives/DynamicTableColumnsContainerDirective.html",[278,0.758,287,1.934]],["body/directives/DynamicTableColumnsContainerDirective.html",[0,0.257,2,0.219,3,0.219,4,0.148,8,0.699,15,1.809,18,0.745,20,0.753,21,0.025,22,0.877,23,0.399,24,0.699,25,0.504,28,2.93,29,0.992,30,0.183,37,1.809,40,1.006,73,0.019,74,0.019,124,0.473,127,0.417,132,0.295,147,0.627,176,1.342,185,1.887,186,2.056,203,2.554,276,2.195,278,1.342,287,3.145,332,1.316,470,3.072,472,2.698,473,2.347,475,2.17,525,4.492,526,6.541,527,5.586,528,4.492,529,4.492]],["title/components/DynamicTableComponent.html",[14,1.35,184,2.105]],["body/components/DynamicTableComponent.html",[0,0.143,2,0.122,3,0.122,4,0.082,6,1.016,8,0.389,9,1.53,14,2.331,15,0.809,16,2.286,17,3.251,18,0.786,20,0.418,21,0.025,22,0.715,23,0.365,24,0.581,25,0.666,29,0.551,30,0.102,32,2.579,37,1.606,40,0.672,41,1.024,49,3.038,64,3.966,73,0.013,74,0.013,75,3.339,76,1.866,102,2.515,107,2.865,120,3.339,124,0.472,125,1.567,127,0.421,130,1.679,132,0.164,133,1.756,134,2.738,147,0.419,148,2.761,149,2.505,176,1.502,178,1.53,179,1.679,180,2.116,181,2.116,182,4.269,183,2.116,184,3.038,185,1.049,186,2.404,187,3.339,190,3.163,191,3.339,192,3.163,193,4.202,194,4.202,195,4.202,196,4.202,197,4.202,198,3.705,199,4.202,200,1.209,201,4.202,202,4.202,203,2.547,204,3.787,206,2.789,209,4.533,210,4.498,211,2.509,213,3.163,214,3.163,215,3.966,217,2.286,218,2.789,222,2.791,224,2.325,226,4.202,227,2.116,228,3.163,235,3.163,238,1.679,241,2.116,260,1.866,263,2.116,265,2.116,266,2.116,273,2.101,274,3.163,275,1.53,276,1.466,277,2.789,278,0.824,279,4.202,280,2.116,281,3.163,282,1.679,283,2.116,284,1.679,285,1.405,286,2.116,287,1.405,288,2.116,289,2.101,290,2.116,291,1.405,292,2.116,293,1.405,294,2.116,295,1.405,296,2.116,297,1.405,298,2.116,299,1.405,300,1.866,301,2.116,326,1.123,328,1.53,332,0.588,340,1.53,341,2.01,437,1.405,447,1.53,449,1.206,481,1.53,530,3.731,531,3.163,532,2.496,533,3.731,534,2.496,535,2.496,536,2.496,537,2.496,538,2.496,539,2.496,540,2.496,541,2.496,542,2.496,543,2.496,544,2.116,545,2.116,546,3.163,547,3.163,548,1.53,549,1.405,550,1.206,551,2.116,552,2.496,553,2.496,554,2.496,555,2.496,556,2.496,557,2.496,558,3.731]],["title/directives/DynamicTableContainerDirective.html",[278,0.758,289,1.934]],["body/directives/DynamicTableContainerDirective.html",[0,0.259,2,0.222,3,0.222,4,0.149,8,0.707,15,1.47,18,0.748,20,0.761,21,0.025,22,0.881,23,0.401,24,0.707,25,0.51,28,2.934,29,1.002,30,0.185,37,1.821,40,1.012,73,0.02,74,0.02,124,0.475,132,0.298,147,0.631,176,1.241,185,1.906,186,2.069,203,2.565,276,2.209,278,1.348,289,3.165,332,1.325,470,3.083,472,2.715,473,2.361,475,2.192,478,2.555,480,2.361,559,4.538,560,6.56,561,5.621,562,4.538,563,4.538]],["title/directives/DynamicTableContentSummaryContainerDirective.html",[278,0.758,291,1.934]],["body/directives/DynamicTableContentSummaryContainerDirective.html",[0,0.253,2,0.216,3,0.216,4,0.146,8,0.69,15,1.435,18,0.74,20,0.743,21,0.025,22,0.871,23,0.396,24,0.69,25,0.497,28,2.924,29,0.978,30,0.181,37,1.794,40,0.997,73,0.019,74,0.019,124,0.471,127,0.415,132,0.291,147,0.622,176,1.222,185,1.861,186,2.039,203,2.538,276,2.176,278,1.333,291,3.118,332,1.305,470,3.057,471,2.494,472,2.675,473,2.326,475,2.14,476,3.118,477,2.494,478,2.494,480,2.305,564,4.73,565,4.73,566,6.514,567,4.43]],["title/interfaces/DynamicTableDataInterface.html",[302,0.576,306,2.567]],["body/interfaces/DynamicTableDataInterface.html",[2,0.205,3,0.205,4,0.139,6,0.989,18,0.786,20,0.705,21,0.025,22,0.607,23,0.276,24,0.655,25,0.697,30,0.171,41,1.325,73,0.019,74,0.019,124,0.488,127,0.443,130,2.411,132,0.276,147,0.757,200,1.736,217,3.614,224,3.231,302,0.898,304,2.414,305,3.143,306,4.005,311,4.177,315,3.565,319,3.565,320,3.098,322,3.565,324,3.565,325,3.565,326,1.892,328,2.577,330,2.368,437,2.368,524,2.368,568,4.408,569,5.264,570,6.209,571,5.358,572,6.209,573,4.542,574,4.999,575,4.999,576,4.205,577,4.205]],["title/directives/DynamicTableDescriptionContainerDirective.html",[278,0.758,293,1.934]],["body/directives/DynamicTableDescriptionContainerDirective.html",[0,0.256,2,0.219,3,0.219,4,0.147,8,1.017,15,1.449,18,0.744,20,0.75,21,0.025,22,0.875,23,0.398,24,0.697,25,0.502,28,2.929,29,0.988,30,0.182,37,1.805,40,1.003,73,0.019,74,0.019,124,0.472,127,0.417,132,0.294,147,0.626,176,1.23,185,1.88,186,2.051,203,2.549,276,2.19,278,1.339,293,3.137,332,1.313,470,3.068,471,2.519,472,2.692,473,2.341,475,2.161,476,3.137,477,2.519,480,2.328,578,6.533,579,4.474]],["title/injectables/DynamicTableDynamicCellBuilder.html",[332,0.809,580,2.31]],["body/injectables/DynamicTableDynamicCellBuilder.html",[0,0.28,1,3.131,2,0.143,3,0.143,4,0.096,6,0.948,8,0.881,9,1.792,13,2.358,14,2.313,15,1.357,16,1.792,17,3.607,18,0.513,20,0.82,21,0.025,22,0.604,23,0.275,24,0.652,25,0.635,26,3.551,27,2.479,28,2.245,29,0.645,30,0.119,32,3.374,36,1.792,37,1.585,40,1.019,41,1.216,42,4.531,44,1.149,46,1.412,52,1.646,73,0.015,74,0.015,79,1.792,80,3.551,107,2.582,108,2.479,124,0.364,126,2.364,127,0.321,128,1.885,130,1.316,132,0.192,147,0.709,148,1.521,149,1.316,176,1.08,179,1.967,186,1.076,200,1.357,231,1.967,233,1.967,260,2.185,269,1.521,273,2.358,320,1.412,329,2.167,332,1.153,334,2.756,341,1.316,351,2.817,404,1.646,414,1.521,425,2.817,427,3.131,428,1.967,449,2.023,466,2.756,549,2.358,550,2.023,580,2.817,581,4.4,582,2.479,583,4.189,584,2.924,585,4.189,586,5.657,587,5.345,588,2.924,589,3.551,590,3.551,591,4.189,592,4.189,593,3.551,594,2.924,595,2.479,596,4.189,597,2.924,598,2.924,599,2.924,600,2.924,601,2.924,602,2.924,603,2.924,604,2.924,605,3.131,606,2.924,607,4.189,608,4.189,609,4.189,610,4.189,611,2.924,612,2.924,613,2.924,614,2.924,615,2.924,616,2.924,617,2.924,618,2.924,619,2.924,620,4.189,621,2.924,622,2.924,623,2.924,624,2.924,625,2.924,626,2.924,627,2.924,628,2.924,629,4.894,630,4.894,631,2.924,632,2.924,633,2.924,634,2.924,635,2.185,636,3.551,637,2.924,638,4.189,639,4.189,640,4.189,641,2.924,642,4.189,643,2.924,644,2.924,645,2.924,646,2.924,647,2.924,648,2.924]],["title/interfaces/DynamicTableEventDataInterface.html",[302,0.576,649,2.912]],["body/interfaces/DynamicTableEventDataInterface.html",[2,0.247,3,0.247,4,0.167,6,0.849,8,0.788,21,0.024,23,0.394,30,0.206,40,1.081,73,0.021,74,0.021,124,0.377,127,0.394,132,0.332,147,0.719,302,1.007,304,1.864,305,3.784,329,2.439,334,3.606,400,2.127,401,2.127,550,3.267,649,5.092]],["title/classes/DynamicTableExpressionBuilder.html",[0,0.196,650,2.31]],["body/classes/DynamicTableExpressionBuilder.html",[0,0.251,2,0.153,3,0.153,4,0.103,8,0.685,18,0.676,20,0.737,21,0.025,22,0.733,23,0.289,24,0.685,25,0.494,30,0.128,32,2.289,36,2.696,41,1.277,46,2.909,49,1.92,73,0.015,74,0.015,89,2.342,124,0.378,126,2.456,127,0.381,132,0.206,133,2.366,147,0.709,149,2.613,176,0.971,200,1.425,258,2.107,273,2.477,329,2.03,340,2.696,342,2.477,343,2.342,359,3.288,386,3.8,387,3.8,388,2.959,391,4.121,392,3.27,582,2.656,650,2.959,651,4.372,652,5.513,653,4.399,654,4.16,655,3.133,656,4.674,657,4.399,658,3.133,659,4.05,660,2.656,661,6.837,662,3.133,663,3.133,664,3.133,665,3.133,666,3.133,667,2.656,668,5.105,669,5.105,670,5.513,671,4.399,672,3.133,673,3.133,674,3.133,675,2.656,676,3.133,677,2.656,678,3.133]],["title/interfaces/DynamicTableGroupExpressionInterface.html",[302,0.576,654,2.31]],["body/interfaces/DynamicTableGroupExpressionInterface.html",[2,0.247,3,0.247,4,0.166,6,0.847,21,0.024,23,0.394,25,0.567,30,0.206,40,1.08,73,0.021,74,0.021,124,0.376,127,0.394,132,0.331,147,0.718,302,1.005,304,1.859,342,3.726,343,3.775,388,4.452,392,3.805,654,4.034,679,5.05]],["title/interfaces/DynamicTableGroupInterface.html",[302,0.576,342,1.934]],["body/interfaces/DynamicTableGroupInterface.html",[2,0.243,3,0.243,4,0.164,6,0.833,8,0.774,21,0.024,23,0.417,30,0.203,40,1.07,73,0.021,74,0.021,124,0.37,127,0.39,132,0.326,147,0.767,302,0.996,304,1.83,334,3.578,342,3.346,384,5.582,386,4.922,387,4.922,400,2.089,401,2.089,680,4.972]],["title/directives/DynamicTableIconContainerDirective.html",[278,0.758,295,1.934]],["body/directives/DynamicTableIconContainerDirective.html",[0,0.255,2,0.218,3,0.218,4,0.147,8,0.695,15,1.446,18,0.743,20,0.749,21,0.025,22,0.874,23,0.398,24,0.695,25,0.501,28,2.928,29,0.986,30,0.182,37,1.803,40,1.002,73,0.019,74,0.019,124,0.472,127,0.417,132,0.293,147,0.625,176,1.228,185,1.876,186,2.049,203,2.547,269,3.302,276,2.187,278,1.338,295,3.133,332,1.311,470,3.066,471,2.514,472,2.688,473,2.338,475,2.157,476,3.133,477,2.514,478,2.514,480,2.324,681,6.529,682,4.465]],["title/interfaces/DynamicTableInterface.html",[302,0.576,568,2.567]],["body/interfaces/DynamicTableInterface.html",[2,0.141,3,0.141,4,0.095,6,0.485,8,0.451,18,0.772,20,1.056,21,0.024,22,0.908,23,0.413,24,0.981,30,0.118,41,1.301,73,0.014,74,0.014,124,0.475,127,0.19,132,0.19,147,0.801,200,1.347,217,4.398,302,0.697,304,2.353,313,4.696,329,2.318,389,4.696,400,1.216,401,1.216,495,3.525,499,3.525,568,3.108,683,2.893,684,4.157,685,4.157,686,4.157,687,4.157,688,4.157,689,4.157,690,4.157,691,3.525,692,5.919,693,5.919,694,2.893,695,3.525,696,2.893,697,3.525,698,2.893,699,3.525,700,2.893,701,3.525,702,2.893,703,3.525,704,2.893,705,3.525,706,2.893,707,3.525,708,2.893,709,3.525,710,2.893]],["title/modules/DynamicTableModule.html",[44,1.35,411,1.934]],["body/modules/DynamicTableModule.html",[0,0.14,2,0.18,3,0.12,4,0.162,6,0.928,8,0.689,11,3.309,13,1.384,14,1.449,18,0.452,21,0.025,25,0.757,29,0.543,30,0.241,37,1.593,41,0.508,44,2.32,73,0.013,74,0.013,102,1.384,105,1.653,116,2.48,124,0.183,127,0.427,133,0.966,145,1.506,182,1.653,184,3.877,222,3.116,231,1.653,238,2.48,240,1.837,269,1.279,275,1.506,284,4.255,285,3.562,287,3.116,289,3.562,291,3.562,293,3.562,295,3.562,297,3.562,299,3.562,341,2.582,400,1.033,401,1.033,403,1.279,404,2.492,405,1.837,411,3.963,412,2.757,413,1.837,414,1.279,415,2.084,416,1.837,417,1.837,418,1.837,419,1.837,420,1.837,421,1.837,422,2.084,423,2.084,424,1.837,425,2.977,426,3.126,427,2.757,428,1.653,430,2.084,433,1.837,447,2.26,449,1.782,544,5.005,545,2.084,546,3.126,547,3.126,548,2.26,549,1.384,550,1.187,551,2.084,564,1.837,565,1.837,580,3.722,581,1.837,589,3.752,590,3.752,593,3.752,659,3.308,711,2.084,712,2.084,713,2.084,714,2.084,715,3.126,716,3.688,717,3.688,718,3.688,719,3.126,720,3.688,721,3.126,722,3.688,723,3.688,724,3.688,725,3.126,726,3.688,727,4.426,728,4.426,729,4.426,730,2.084,731,4.426,732,4.426,733,4.426,734,4.426,735,4.426,736,4.426,737,4.426,738,4.426,739,4.426,740,5.534,741,2.458,742,1.837,743,2.458,744,2.458]],["title/injectables/DynamicTableMouseEventMessageService.html",[332,0.809,548,2.105]],["body/injectables/DynamicTableMouseEventMessageService.html",[0,0.214,2,0.183,3,0.183,4,0.123,18,0.779,20,0.934,21,0.025,22,0.804,23,0.366,24,0.868,25,0.558,29,0.826,30,0.153,41,1.376,73,0.017,74,0.017,107,2.985,124,0.482,127,0.425,132,0.246,147,0.713,176,1.546,200,1.608,313,4.272,320,2.985,326,1.683,329,2.052,332,1.313,344,3.749,448,5.495,450,3.171,452,5.034,453,5.034,455,4.21,456,4.21,457,3.171,458,3.171,459,3.171,461,3.171,462,4.21,463,3.171,464,4.21,465,3.171,466,3.138,468,4.21,469,4.21,548,3.043,549,3.649,550,3.131,636,4.725,745,5.937,746,4.965,747,4.965,748,4.965]],["title/interfaces/DynamicTableOptionInterface.html",[302,0.576,437,1.934]],["body/interfaces/DynamicTableOptionInterface.html",[2,0.229,3,0.229,4,0.154,6,0.962,21,0.025,23,0.435,25,0.644,30,0.191,40,1.033,73,0.02,74,0.02,124,0.349,127,0.407,132,0.308,147,0.757,302,0.962,304,1.727,330,2.641,389,4.342,391,4.826,392,2.641,393,5.473,394,5.473,397,5.473,436,3.976,437,3.23,438,5.253,524,3.635,654,4.342,660,3.976]],["title/directives/DynamicTableTitleContainerDirective.html",[278,0.758,297,1.934]],["body/directives/DynamicTableTitleContainerDirective.html",[0,0.255,2,0.218,3,0.218,4,0.147,8,0.695,15,1.446,18,0.743,20,0.749,21,0.025,22,0.874,23,0.398,24,0.695,25,0.501,28,2.928,29,0.986,30,0.182,37,1.803,40,1.002,73,0.019,74,0.019,124,0.472,127,0.417,132,0.293,145,3.889,147,0.625,176,1.228,185,1.876,186,2.049,203,2.547,276,2.187,278,1.338,297,3.133,332,1.311,470,3.066,471,2.514,472,2.688,473,2.338,475,2.157,476,3.133,477,2.514,478,2.514,480,2.324,749,6.529,750,4.465]],["title/classes/DynamicTableUIUtils.html",[0,0.196,751,2.31]],["body/classes/DynamicTableUIUtils.html",[0,0.215,2,0.124,3,0.124,4,0.083,6,0.999,8,0.928,13,3.264,18,0.711,20,0.972,21,0.025,22,0.836,23,0.38,24,0.903,30,0.103,32,3.407,35,2.762,41,1.398,52,2.124,73,0.013,74,0.013,124,0.443,126,2.878,127,0.433,132,0.166,133,2.659,147,0.802,148,1.318,149,2.518,176,1.28,200,1.222,211,1.704,329,2.555,334,3.757,349,3.06,400,1.064,401,1.064,414,1.963,449,2.8,481,1.552,549,2.811,550,2.412,605,1.893,635,2.819,751,2.537,752,2.533,753,3.772,754,3.772,755,3.772,756,3.772,757,3.772,758,3.772,759,3.772,760,3.772,761,2.533,762,3.772,763,2.533,764,5.338,765,3.772,766,2.533,767,5.338,768,3.772,769,2.533,770,3.772,771,2.533,772,3.772,773,3.772,774,2.533,775,3.772,776,2.533,777,4.333,778,2.533,779,2.533,780,2.533,781,2.533,782,2.533,783,2.533,784,2.533,785,2.533,786,2.533,787,2.147,788,4.506]],["title/classes/DynamicTableUtils.html",[0,0.196,789,2.912]],["body/classes/DynamicTableUtils.html",[0,0.263,2,0.164,3,0.164,4,0.11,6,0.562,8,0.884,18,0.696,20,0.952,21,0.025,22,0.909,23,0.373,24,0.884,25,0.377,30,0.137,32,2.954,36,2.055,37,1.086,41,1.345,46,3.101,52,3.197,73,0.016,74,0.016,124,0.443,126,2.876,127,0.303,128,3.163,132,0.22,133,2.616,147,0.78,176,1.164,200,1.494,224,3.464,273,2.597,330,1.888,340,2.055,346,4.137,440,2.843,441,3.91,442,3.91,444,3.91,481,2.055,524,3.197,659,2.256,789,3.91,790,4.612,791,4.612,792,4.612,793,3.353,794,4.612,795,3.353,796,3.353,797,3.353,798,4.612,799,3.353,800,2.843,801,3.353,802,4.612,803,3.91,804,2.843,805,5.677,806,3.353,807,3.353,808,3.353,809,3.353,810,2.843]],["title/directives/PalTableAdditionalInfoContainerDirective.html",[278,0.758,299,1.934]],["body/directives/PalTableAdditionalInfoContainerDirective.html",[0,0.253,2,0.318,3,0.216,4,0.146,8,0.69,15,1.435,18,0.74,20,0.743,21,0.025,22,0.871,23,0.396,24,0.69,25,0.497,28,2.924,29,0.978,30,0.181,37,1.794,40,0.997,73,0.019,74,0.019,105,4.256,124,0.471,127,0.415,132,0.291,147,0.622,176,1.222,185,1.861,186,2.039,203,2.538,276,2.176,278,1.333,299,3.118,300,4.869,332,1.305,470,3.057,471,2.494,472,2.675,473,2.326,475,2.14,476,3.118,477,2.494,478,2.494,480,2.305,811,4.43]],["title/interfaces/UsingDynamicTableComponent.html",[302,0.576,812,2.567]],["body/interfaces/UsingDynamicTableComponent.html",[2,0.224,3,0.224,4,0.151,18,0.752,20,1.028,21,0.024,22,0.885,23,0.403,24,0.955,25,0.515,30,0.187,41,1.267,73,0.02,74,0.02,107,3.237,124,0.477,127,0.42,132,0.301,200,1.832,302,0.948,304,2.358,320,3.361,326,2.063,466,3.454,812,4.228,813,4.584,814,5.656,815,5.656,816,5.656,817,4.795,818,4.584,819,4.795,820,4.584,821,4.795,822,4.584]],["title/changelog.html",[823,1.758,824,1.758,825,2.431]],["body/changelog.html",[0,0.255,4,0.215,6,0.749,14,1.755,21,0.019,35,2.736,44,1.755,59,4.532,73,0.019,74,0.019,78,3.338,79,2.736,102,2.514,127,0.398,132,0.293,233,3.003,341,2.009,392,2.514,403,2.324,404,2.514,473,2.547,650,3.003,651,3.003,742,3.338,751,3.003,777,3.338,826,3.786,827,5.725,828,4.718,829,3.786,830,3.786,831,3.338,832,3.786,833,3.786,834,3.786,835,3.786,836,4.718,837,3.786,838,4.718,839,3.786,840,3.786,841,3.786,842,3.338,843,3.786,844,3.338,845,3.786,846,3.786,847,3.786,848,3.786,849,4.718,850,5.14,851,5.14,852,5.14,853,3.786,854,3.786,855,3.786,856,3.786,857,3.786,858,3.786,859,3.786,860,3.786,861,4.718,862,3.786,863,3.786,864,3.786,865,3.338,866,3.786,867,4.718,868,3.786,869,3.786,870,3.786,871,3.786,872,3.786,873,3.786,874,3.786,875,3.786]],["title/contributing.html",[823,1.758,824,1.758,876,2.868]],["body/contributing.html",[21,0.022,73,0.022,74,0.022,419,4.13,420,4.13,877,4.684,878,5.525,879,5.525]],["title/dependencies.html",[403,2.15,844,2.144]],["body/dependencies.html",[6,0.843,21,0.025,29,1.11,73,0.021,74,0.021,87,4.471,88,4.023,231,3.382,236,4.262,326,2.262,403,2.616,428,3.382,730,4.262,880,5.028,881,7.017,882,5.028,883,5.028,884,5.028,885,5.028,886,4.262,887,5.028,888,5.028,889,5.028,890,5.028,891,5.028]],["title/index.html",[132,0.188,823,1.758,824,1.758]],["body/index.html",[0,0.238,2,0.05,3,0.027,4,0.12,6,0.892,8,0.451,9,0.628,10,1.586,11,1.346,12,1.799,13,2.204,14,2.073,15,0.332,18,0.51,21,0.025,22,0.631,23,0.067,24,0.588,25,0.612,29,0.588,30,0.127,35,1.633,36,0.338,37,0.178,40,0.099,41,1.134,44,0.708,46,2.415,49,2.225,51,0.467,52,2.779,57,0.467,59,2.164,63,1.075,73,0.004,74,0.004,76,0.412,78,1.991,79,2.02,82,1.527,89,0.412,102,3.092,104,2.455,105,1.427,107,0.87,110,0.869,112,0.869,116,2.217,117,1.799,123,0.412,125,2.592,127,0.409,128,2.962,130,2.471,131,0.371,132,0.036,133,1.364,134,2.127,145,1.104,147,0.636,148,0.287,149,1.397,152,0.412,153,0.767,162,0.412,176,0.531,179,0.967,186,0.663,187,1.346,191,1.346,209,0.412,211,0.371,217,3.411,218,1.8,222,0.81,224,0.748,233,2.217,237,0.81,239,0.412,244,2.794,245,0.869,247,3.619,258,1.947,269,1.616,273,1.355,276,0.565,277,0.412,278,0.226,302,0.172,311,0.69,312,0.412,314,0.767,317,0.81,318,0.412,320,1.677,321,0.412,323,0.412,326,0.461,327,0.881,329,2.203,332,0.567,334,2.912,341,1.871,342,1.355,344,2.633,346,0.371,347,1.219,348,0.467,349,2.127,350,3.706,351,3.319,352,3.787,353,1.799,354,0.869,357,1.527,358,0.869,359,0.412,361,0.869,362,1.799,363,0.467,365,4.995,366,1.527,367,0.869,368,1.527,369,0.869,385,0.869,388,2.542,389,3.122,390,0.869,392,2.881,400,1.458,401,1.95,402,0.338,403,0.287,404,1.355,411,1.195,414,0.534,416,0.412,417,1.346,425,1.619,432,0.869,433,0.412,437,0.577,447,1.774,449,2.202,466,2.204,473,1.587,481,2.477,514,0.467,515,0.467,518,0.467,519,0.467,524,1.014,531,0.467,548,0.628,549,1.355,550,1.287,564,3.339,565,0.412,569,0.869,573,0.869,574,0.869,575,1.219,581,2.321,595,0.869,605,0.767,635,1.075,650,0.371,651,0.69,656,0.869,659,1.211,667,1.527,668,2.455,669,2.041,675,1.527,677,0.467,691,0.869,692,3.426,693,3.935,695,0.869,697,0.869,699,0.869,701,0.869,703,0.869,705,0.869,707,0.869,709,0.869,715,0.869,719,0.467,721,3.526,725,0.467,742,0.412,751,1.211,777,0.412,787,0.467,800,0.467,803,3.526,804,0.467,810,4.127,812,1.8,817,0.869,819,0.467,821,0.467,823,0.628,824,1.475,825,0.869,826,0.467,827,2.258,828,1.799,829,1.219,830,0.467,831,0.412,832,0.869,833,0.467,834,0.869,835,0.467,836,1.219,837,0.869,838,0.869,839,0.467,840,2.258,841,1.219,842,0.412,843,0.467,844,1.346,845,4.952,846,0.467,847,0.467,848,0.467,849,0.869,850,1.219,851,2.455,852,1.219,853,0.467,854,0.467,855,0.467,856,0.467,857,0.467,858,0.467,859,0.467,860,0.467,861,0.869,862,0.467,863,0.467,864,0.467,865,0.412,866,0.869,867,0.869,868,0.467,869,0.467,870,0.467,871,0.467,872,0.467,873,0.467,874,0.467,875,0.467,877,0.467,886,0.467,892,1.025,893,0.551,894,0.551,895,1.025,896,0.869,897,0.551,898,0.551,899,0.551,900,0.551,901,1.025,902,1.025,903,0.551,904,1.025,905,1.025,906,1.438,907,0.551,908,3.779,909,0.551,910,2.407,911,4.269,912,4.868,913,3.631,914,0.551,915,1.438,916,1.025,917,1.438,918,0.551,919,1.801,920,0.551,921,0.551,922,0.551,923,0.551,924,1.025,925,2.664,926,0.467,927,3.296,928,0.551,929,1.438,930,1.025,931,0.551,932,5.636,933,2.122,934,0.551,935,1.025,936,1.438,937,3.296,938,0.551,939,0.551,940,0.551,941,3.779,942,1.438,943,2.632,944,0.551,945,1.438,946,0.551,947,0.551,948,3.471,949,3.935,950,4.642,951,1.801,952,2.407,953,2.122,954,1.801,955,1.025,956,1.025,957,1.801,958,1.438,959,1.801,960,1.025,961,2.122,962,0.551,963,0.551,964,0.551,965,0.551,966,0.551,967,0.551,968,1.025,969,1.025,970,1.025,971,0.551,972,0.551,973,0.551,974,0.551,975,3.296,976,1.438,977,0.551,978,1.025,979,0.551,980,0.551,981,0.551,982,0.551,983,3.526,984,0.551,985,0.551,986,1.438,987,0.551,988,0.551,989,0.551,990,0.551,991,4.269,992,2.122,993,4.467,994,0.551,995,0.551,996,1.025,997,0.551,998,0.551,999,0.551,1000,0.551,1001,0.551,1002,1.025,1003,1.025,1004,2.122,1005,1.025,1006,2.258,1007,0.551,1008,0.551,1009,1.025,1010,0.551,1011,0.551,1012,2.895,1013,0.551,1014,0.551,1015,1.438,1016,1.025,1017,1.025,1018,1.025,1019,0.551,1020,1.025,1021,0.551,1022,0.551,1023,0.551,1024,0.551,1025,0.551,1026,1.438,1027,0.551,1028,1.025,1029,1.801,1030,1.025,1031,1.025,1032,0.551,1033,0.551,1034,0.551,1035,0.551,1036,0.551,1037,0.551,1038,0.551,1039,0.551,1040,2.122,1041,1.801,1042,0.551,1043,3.296,1044,0.551,1045,0.551,1046,0.551,1047,0.551,1048,0.551,1049,0.551,1050,0.551,1051,0.551,1052,1.438,1053,0.551,1054,1.025,1055,0.551,1056,0.551,1057,0.551,1058,0.551,1059,0.551,1060,1.025,1061,1.025,1062,1.438,1063,0.551,1064,1.025,1065,0.551,1066,0.551,1067,0.551,1068,0.551,1069,0.551,1070,0.551,1071,0.551,1072,0.551,1073,0.551,1074,0.551,1075,0.551,1076,1.025,1077,1.025,1078,1.801,1079,0.551,1080,1.025,1081,0.551,1082,0.551,1083,0.551,1084,0.551,1085,1.438,1086,0.551,1087,1.025,1088,1.438,1089,1.025,1090,1.025,1091,0.551,1092,0.551,1093,0.551,1094,0.551,1095,0.551,1096,0.551,1097,0.551,1098,0.551,1099,1.801,1100,1.025,1101,0.551,1102,0.551,1103,0.551,1104,0.551,1105,0.551,1106,0.551,1107,2.122,1108,0.551,1109,0.551,1110,0.551,1111,0.551,1112,0.467,1113,0.551,1114,0.551,1115,1.025,1116,1.025,1117,0.551,1118,0.551,1119,1.801,1120,1.438,1121,0.551,1122,0.551,1123,3.105,1124,1.025,1125,0.551,1126,1.025,1127,1.025,1128,1.025,1129,0.551,1130,0.551,1131,1.025,1132,0.551,1133,1.025,1134,0.551,1135,1.025,1136,1.025,1137,1.025,1138,1.025,1139,0.551,1140,0.551,1141,1.025,1142,0.551,1143,1.025,1144,0.551,1145,0.551,1146,1.025,1147,1.025,1148,0.551,1149,1.025,1150,1.025,1151,1.025,1152,1.025,1153,1.025,1154,1.025,1155,0.551,1156,0.551,1157,0.551,1158,0.551,1159,0.551,1160,0.551,1161,0.551,1162,0.551,1163,0.551,1164,1.025,1165,0.551,1166,1.438,1167,0.551,1168,0.551,1169,0.551,1170,0.551,1171,0.551,1172,0.551,1173,0.551,1174,0.551,1175,0.551,1176,1.025,1177,0.551,1178,0.551,1179,0.551,1180,0.551,1181,0.551,1182,0.551,1183,0.551,1184,0.551,1185,0.551,1186,0.551,1187,0.551,1188,0.551,1189,0.551,1190,2.122,1191,1.801,1192,1.801,1193,1.025,1194,1.025,1195,0.551,1196,1.527,1197,0.551,1198,1.025,1199,1.025,1200,1.025,1201,0.551,1202,3.471,1203,1.025,1204,3.915,1205,1.025,1206,3.471,1207,1.025,1208,2.122,1209,5.602,1210,2.122,1211,0.551,1212,4.371,1213,1.801,1214,0.551,1215,0.551,1216,0.551,1217,0.467,1218,0.551,1219,0.551,1220,0.551,1221,0.551,1222,0.551,1223,1.801,1224,5.961,1225,4.159,1226,1.438,1227,2.407,1228,3.105,1229,3.526,1230,4.159,1231,2.664,1232,1.801,1233,2.664,1234,1.801,1235,2.407,1236,1.025,1237,1.801,1238,1.438,1239,1.025,1240,0.551,1241,0.551,1242,0.551,1243,1.025,1244,1.025,1245,1.025,1246,1.025,1247,0.551,1248,0.551,1249,0.551,1250,1.025,1251,1.025,1252,1.025,1253,0.551,1254,1.438,1255,0.551,1256,1.025,1257,0.551,1258,1.025,1259,0.551,1260,0.551,1261,1.025,1262,1.219,1263,0.551,1264,0.551,1265,0.551,1266,0.551,1267,1.025,1268,1.025,1269,1.025,1270,0.551,1271,0.551,1272,0.551,1273,0.551,1274,0.551,1275,0.551,1276,0.551,1277,0.551,1278,0.551,1279,1.438,1280,2.122,1281,2.895,1282,0.551,1283,1.438,1284,1.438,1285,0.551,1286,0.869,1287,0.551,1288,1.438,1289,0.551,1290,1.025,1291,0.551,1292,0.551,1293,0.551,1294,0.551,1295,0.551,1296,1.025,1297,1.438,1298,3.105,1299,0.551,1300,0.551,1301,0.551,1302,1.438,1303,0.551,1304,1.025,1305,0.467,1306,1.025,1307,0.551,1308,1.025,1309,0.551,1310,1.025,1311,0.551,1312,0.551,1313,0.551,1314,0.551,1315,0.551,1316,0.551,1317,0.551,1318,0.551,1319,2.122,1320,0.551,1321,0.551,1322,1.025,1323,0.551,1324,0.551,1325,0.551,1326,0.551]],["title/license.html",[823,1.758,824,1.758,1327,2.431]],["body/license.html",[4,0.15,21,0.02,73,0.02,74,0.02,116,3.79,215,3.406,341,2.05,414,2.371,418,3.406,421,4.573,424,3.406,449,2.201,466,2.565,550,2.201,651,3.065,831,3.406,865,3.406,896,5.186,943,3.863,949,4.777,1196,4.777,1217,3.863,1262,3.863,1286,3.863,1305,5.419,1327,3.863,1328,4.556,1329,4.556,1330,5.635,1331,4.556,1332,4.556,1333,4.556,1334,4.556,1335,4.556,1336,6.907,1337,4.556,1338,5.635,1339,4.556,1340,6.118,1341,5.635,1342,4.556,1343,4.556,1344,4.556,1345,4.556,1346,4.556,1347,4.556,1348,4.556,1349,5.635,1350,4.556,1351,4.556,1352,5.635,1353,4.556,1354,4.556,1355,4.556,1356,4.556,1357,4.556,1358,4.556,1359,4.556,1360,4.556,1361,4.556,1362,4.556,1363,4.556,1364,4.556,1365,4.556,1366,4.556,1367,4.556,1368,4.556,1369,4.556,1370,4.556]],["title/modules.html",[44,1.843]],["body/modules.html",[21,0.022,44,2.14,73,0.022,74,0.022,88,4.215,268,5.313,402,3.336,411,3.065,842,4.684,1371,6.267]],["title/overview.html",[1372,3.975]],["body/overview.html",[0,0.213,14,1.463,21,0.025,30,0.152,44,1.945,73,0.017,74,0.017,178,3.967,184,3.967,222,3.13,237,3.13,275,2.281,278,0.822,282,4.354,284,4.354,285,3.645,287,3.13,289,3.645,291,3.645,293,3.645,295,3.645,297,3.645,299,3.645,302,0.624,332,0.877,341,1.675,402,4.227,403,1.937,404,2.096,405,2.782,406,3.155,407,3.155,408,3.155,409,3.155,410,3.155,411,4.049,412,3.699,413,2.782,414,1.937,580,3.74,711,3.155,712,3.155,713,3.155,714,3.155,926,3.155,983,3.155,1006,3.155,1112,3.155,1229,3.155,1372,3.155,1373,3.722]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":273,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["0.0",{"_index":256,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["0.1.0",{"_index":874,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.1",{"_index":870,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.2",{"_index":868,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.3",{"_index":864,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.4",{"_index":862,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.5",{"_index":859,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.6",{"_index":856,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.7",{"_index":855,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.8",{"_index":854,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.1.9",{"_index":853,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2",{"_index":257,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["0.2.0",{"_index":848,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.1",{"_index":843,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.2",{"_index":839,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.3",{"_index":835,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.4",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.5",{"_index":826,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.2.6",{"_index":1324,"title":{},"body":{"index.html":{}}}],["0.5px",{"_index":1218,"title":{},"body":{"index.html":{}}}],["0.8.26",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["000000",{"_index":1248,"title":{},"body":{"index.html":{}}}],["0px",{"_index":245,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"index.html":{}}}],["1",{"_index":258,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["10",{"_index":983,"title":{},"body":{"index.html":{},"overview.html":{}}}],["10px",{"_index":618,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["11",{"_index":1373,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":1244,"title":{},"body":{"index.html":{}}}],["15",{"_index":1228,"title":{},"body":{"index.html":{}}}],["16px",{"_index":1245,"title":{},"body":{"index.html":{}}}],["18px",{"_index":1232,"title":{},"body":{"index.html":{}}}],["19px",{"_index":1255,"title":{},"body":{"index.html":{}}}],["1vw",{"_index":1253,"title":{},"body":{"index.html":{}}}],["2",{"_index":1006,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.7",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":424,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"license.html":{}}}],["21px",{"_index":1258,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1236,"title":{},"body":{"index.html":{}}}],["25px",{"_index":1242,"title":{},"body":{"index.html":{}}}],["3",{"_index":218,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["30",{"_index":1227,"title":{},"body":{"index.html":{}}}],["300",{"_index":1254,"title":{},"body":{"index.html":{}}}],["333",{"_index":619,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["4",{"_index":1112,"title":{},"body":{"index.html":{},"overview.html":{}}}],["400",{"_index":1234,"title":{},"body":{"index.html":{}}}],["40c4ff",{"_index":1246,"title":{},"body":{"index.html":{}}}],["494949",{"_index":350,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["4ac3fc",{"_index":1078,"title":{},"body":{"index.html":{}}}],["5",{"_index":1229,"title":{},"body":{"index.html":{},"overview.html":{}}}],["500",{"_index":1256,"title":{},"body":{"index.html":{}}}],["50px",{"_index":1213,"title":{},"body":{"index.html":{}}}],["5d5d5d",{"_index":1243,"title":{},"body":{"index.html":{}}}],["5px",{"_index":1226,"title":{},"body":{"index.html":{}}}],["6.1.9",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":926,"title":{},"body":{"index.html":{},"overview.html":{}}}],["80px",{"_index":1201,"title":{},"body":{"index.html":{}}}],["85",{"_index":1240,"title":{},"body":{"index.html":{}}}],["_theming.scss",{"_index":1300,"title":{},"body":{"index.html":{}}}],["abov",{"_index":1262,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"index.html":{}}}],["abstractdynamicbaseservic",{"_index":1,"title":{"classes/AbstractDynamicBaseService.html":{}},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["abstractdynamicexpandabletabledataprovid",{"_index":1041,"title":{},"body":{"index.html":{}}}],["abstractdynamictabledataprovid",{"_index":957,"title":{},"body":{"index.html":{}}}],["abstractweblibrarycompon",{"_index":75,"title":{"classes/AbstractWebLibraryComponent.html":{}},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicTableComponent.html":{}}}],["accessor",{"_index":146,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["action",{"_index":449,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{},"license.html":{}}}],["action_deactivate_pati",{"_index":964,"title":{},"body":{"index.html":{}}}],["action_edit_drug",{"_index":1048,"title":{},"body":{"index.html":{}}}],["action_select_pati",{"_index":962,"title":{},"body":{"index.html":{}}}],["action_show_patient_color",{"_index":966,"title":{},"body":{"index.html":{}}}],["actionmessag",{"_index":1030,"title":{},"body":{"index.html":{}}}],["actionmessage.getact",{"_index":1031,"title":{},"body":{"index.html":{}}}],["actionscolumnopt",{"_index":1124,"title":{},"body":{"index.html":{}}}],["actionscolumnoption['backgroundcolor",{"_index":1125,"title":{},"body":{"index.html":{}}}],["actionssubject",{"_index":193,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["activ",{"_index":1052,"title":{},"body":{"index.html":{}}}],["actual",{"_index":900,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":301,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["ad",{"_index":827,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["adapt",{"_index":869,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["add",{"_index":910,"title":{},"body":{"index.html":{}}}],["addit",{"_index":105,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"modules/DynamicTableModule.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["addition",{"_index":724,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["additional_info",{"_index":136,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["additionalinfo",{"_index":152,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["administr",{"_index":366,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["afterviewinit",{"_index":82,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["ag",{"_index":423,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["align",{"_index":1205,"title":{},"body":{"index.html":{}}}],["align:center;lin",{"_index":614,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["alreadi",{"_index":906,"title":{},"body":{"index.html":{}}}],["alway",{"_index":901,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1344,"title":{},"body":{"license.html":{}}}],["angular",{"_index":35,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicTableUIUtils.html":{},"changelog.html":{},"index.html":{}}}],["angular/anim",{"_index":236,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":428,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":730,"title":{},"body":{"modules/DynamicTableModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":231,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":87,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":235,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["animate('225m",{"_index":253,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["applic",{"_index":1308,"title":{},"body":{"index.html":{}}}],["approv",{"_index":385,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["argument",{"_index":676,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["aris",{"_index":1369,"title":{},"body":{"license.html":{}}}],["arpag",{"_index":422,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["array",{"_index":224,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["art",{"_index":358,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["articl",{"_index":357,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["assign",{"_index":57,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"index.html":{}}}],["associ",{"_index":1337,"title":{},"body":{"license.html":{}}}],["async",{"_index":45,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["atc",{"_index":1064,"title":{},"body":{"index.html":{}}}],["author",{"_index":418,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"license.html":{}}}],["automat",{"_index":930,"title":{},"body":{"index.html":{}}}],["background",{"_index":1123,"title":{},"body":{"index.html":{}}}],["backgroundcolor",{"_index":349,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicTableColumnInterace.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["badg",{"_index":620,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge);font",{"_index":612,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge]:after,.badg",{"_index":608,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge]:after{content:attr(data",{"_index":611,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge]:after{position:absolute;background:#ff0",{"_index":626,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge]:after{position:absolute;background:green}.badg",{"_index":622,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["badge]:after{position:absolute;background:red}.badg",{"_index":624,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["bar",{"_index":1260,"title":{},"body":{"index.html":{}}}],["base",{"_index":10,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["base.servic",{"_index":594,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["base.service.t",{"_index":7,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["base.service.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["basic",{"_index":947,"title":{},"body":{"index.html":{}}}],["belong",{"_index":1023,"title":{},"body":{"index.html":{}}}],["below",{"_index":941,"title":{},"body":{"index.html":{}}}],["bemerkung",{"_index":369,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["bezier(0.4",{"_index":255,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["bi",{"_index":1167,"title":{},"body":{"index.html":{}}}],["big{height:70px}.badg",{"_index":606,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["big{width:64px;height:64px;font",{"_index":601,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["bold",{"_index":1257,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":438,"title":{},"body":{"interfaces/DynamicExpandableTableOptionInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["bootstrap",{"_index":405,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["border",{"_index":1216,"title":{},"body":{"index.html":{}}}],["bound",{"_index":103,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["break",{"_index":669,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["brows",{"_index":1371,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":88,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":656,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["builder",{"_index":742,"title":{},"body":{"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{}}}],["builder.t",{"_index":582,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{}}}],["builder.ts:15",{"_index":584,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["builder.ts:19",{"_index":655,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["builder.ts:30",{"_index":588,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["builder.ts:82",{"_index":658,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["buildgroupexpress",{"_index":652,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["buildgroupexpression(groupexpress",{"_index":653,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["buildgroupexpressions(groupexpress",{"_index":657,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["bundl",{"_index":1281,"title":{},"body":{"index.html":{}}}],["bundle.config.json",{"_index":1287,"title":{},"body":{"index.html":{}}}],["bundled.scss",{"_index":1291,"title":{},"body":{"index.html":{}}}],["button",{"_index":605,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["c",{"_index":1329,"title":{},"body":{"license.html":{}}}],["call",{"_index":100,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["caller",{"_index":630,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["capabl",{"_index":720,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["case",{"_index":668,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["cd",{"_index":1299,"title":{},"body":{"index.html":{}}}],["cell",{"_index":581,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["cell:first",{"_index":1221,"title":{},"body":{"index.html":{}}}],["cells/column",{"_index":928,"title":{},"body":{"index.html":{}}}],["center",{"_index":1206,"title":{},"body":{"index.html":{}}}],["chang",{"_index":59,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"changelog.html":{},"index.html":{}}}],["changedetectorref",{"_index":85,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["changelog",{"_index":825,"title":{"changelog.html":{}},"body":{"index.html":{}}}],["charg",{"_index":1334,"title":{},"body":{"license.html":{}}}],["child",{"_index":1222,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1362,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{}},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":118,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["cli",{"_index":847,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["click",{"_index":211,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["cluster_dynamicexpandabletablemodul",{"_index":406,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"overview.html":{}}}],["cluster_dynamicexpandabletablemodule_declar",{"_index":407,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"overview.html":{}}}],["cluster_dynamicexpandabletablemodule_export",{"_index":409,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"overview.html":{}}}],["cluster_dynamicexpandabletablemodule_import",{"_index":408,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"overview.html":{}}}],["cluster_dynamicexpandabletablemodule_provid",{"_index":410,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"overview.html":{}}}],["cluster_dynamictablemodul",{"_index":711,"title":{},"body":{"modules/DynamicTableModule.html":{},"overview.html":{}}}],["cluster_dynamictablemodule_declar",{"_index":712,"title":{},"body":{"modules/DynamicTableModule.html":{},"overview.html":{}}}],["cluster_dynamictablemodule_export",{"_index":713,"title":{},"body":{"modules/DynamicTableModule.html":{},"overview.html":{}}}],["cluster_dynamictablemodule_provid",{"_index":714,"title":{},"body":{"modules/DynamicTableModule.html":{},"overview.html":{}}}],["code",{"_index":721,"title":{},"body":{"modules/DynamicTableModule.html":{},"index.html":{}}}],["collaps",{"_index":252,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["color",{"_index":351,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"index.html":{}}}],["colordescript",{"_index":988,"title":{},"body":{"index.html":{}}}],["colorid",{"_index":981,"title":{},"body":{"index.html":{}}}],["colorshelperservic",{"_index":968,"title":{},"body":{"index.html":{}}}],["column",{"_index":128,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["column.interfac",{"_index":330,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"classes/DynamicTableUtils.html":{}}}],["column.interface.t",{"_index":399,"title":{},"body":{"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicTableColumnInterace.html":{}}}],["columnid",{"_index":346,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["columnids.push(column",{"_index":807,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["columnindex",{"_index":1107,"title":{},"body":{"index.html":{}}}],["columnnam",{"_index":444,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["columnnames.push(nam",{"_index":809,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["columnnames.push(palexpandabletableexpandeditemcolumn.columnid",{"_index":446,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{}}}],["columnopt",{"_index":397,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["columns.direct",{"_index":741,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["columns.directive.t",{"_index":525,"title":{},"body":{"directives/DynamicTableColumnsContainerDirective.html":{}}}],["columns.directive.ts:16",{"_index":527,"title":{},"body":{"directives/DynamicTableColumnsContainerDirective.html":{}}}],["columns.directive.ts:19",{"_index":528,"title":{},"body":{"directives/DynamicTableColumnsContainerDirective.html":{}}}],["columns/cel",{"_index":1003,"title":{},"body":{"index.html":{}}}],["columnsstyleurl",{"_index":587,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["combin",{"_index":674,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["command",{"_index":1313,"title":{},"body":{"index.html":{}}}],["comment",{"_index":368,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["common",{"_index":800,"title":{},"body":{"classes/DynamicTableUtils.html":{},"index.html":{}}}],["commonmodul",{"_index":427,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{}}}],["commun",{"_index":931,"title":{},"body":{"index.html":{}}}],["comp.componenttyp",{"_index":55,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["compil",{"_index":26,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["compiledmodul",{"_index":47,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["compiledmodule.componentfactories.find((comp",{"_index":54,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["complex",{"_index":417,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["compon",{"_index":14,"title":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":110,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["component(componentopt",{"_index":628,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["component.changedetectorref.detectchang",{"_index":66,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["component.interface.t",{"_index":813,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["component.interface.ts:12",{"_index":818,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["component.interface.ts:14",{"_index":822,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["component.interface.ts:16",{"_index":820,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["component_templ",{"_index":280,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["componentopt",{"_index":596,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["componentref",{"_index":27,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["components/html",{"_index":923,"title":{},"body":{"index.html":{}}}],["componenttocr",{"_index":39,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["concat(paltablemodulewithproviders.provid",{"_index":435,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{}}}],["condit",{"_index":1348,"title":{},"body":{"license.html":{}}}],["config",{"_index":863,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["conform",{"_index":777,"title":{},"body":{"classes/DynamicTableUIUtils.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":1370,"title":{},"body":{"license.html":{}}}],["console.log('abstractweblibrarycomponent:ngafterviewinit",{"_index":113,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["console.log('compon",{"_index":122,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["const",{"_index":46,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["constructor(injector",{"_index":16,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["constructor(priv",{"_index":595,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"index.html":{}}}],["constructor(publ",{"_index":480,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["constructor(viewcontainerref",{"_index":475,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["contain",{"_index":37,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["container.createcomponent(factori",{"_index":56,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["container.direct",{"_index":740,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["container.directive.t",{"_index":471,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["container.directive.ts:16",{"_index":476,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["container.directive.ts:18",{"_index":477,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["container.length",{"_index":644,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["content",{"_index":564,"title":{},"body":{"directives/DynamicTableContentSummaryContainerDirective.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["contract",{"_index":1366,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":876,"title":{"contributing.html":{}},"body":{}}],["control",{"_index":530,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["convert",{"_index":802,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["converttocolumnid",{"_index":441,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["converttocolumnids(column",{"_index":442,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["converttocolumnnam",{"_index":790,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["converttocolumnnames(column",{"_index":794,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["copi",{"_index":1305,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":421,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"license.html":{}}}],["core",{"_index":886,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cours",{"_index":909,"title":{},"body":{"index.html":{}}}],["creat",{"_index":13,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["createangularact",{"_index":753,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createangularaction(act",{"_index":760,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createangularmouseoutev",{"_index":754,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createangularmouseoutevent(mouseoutev",{"_index":762,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createangularmouseoverev",{"_index":755,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createangularmouseoverevent(mouseoverev",{"_index":765,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createcolumn",{"_index":583,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["createcolumn(contain",{"_index":585,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["createdynamiccompon",{"_index":43,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["createexpandeditemdata",{"_index":1189,"title":{},"body":{"index.html":{}}}],["createhtmlact",{"_index":756,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createhtmlaction(act",{"_index":768,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createminifabbutton",{"_index":757,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createminifabbutton(matcolor",{"_index":770,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createmouseoutev",{"_index":758,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createmouseoutevent(mouseoutev",{"_index":773,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createmouseoverev",{"_index":759,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["createmouseoverevent(mouseoverev",{"_index":775,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["creation",{"_index":833,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["css",{"_index":935,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":254,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["current",{"_index":1301,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":1237,"title":{},"body":{"index.html":{}}}],["custom",{"_index":117,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["damag",{"_index":1363,"title":{},"body":{"license.html":{}}}],["data",{"_index":102,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{}}}],["data.interfac",{"_index":331,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.interface.t",{"_index":305,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableEventDataInterface.html":{}}}],["data.interface.ts:15",{"_index":325,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["data.interface.ts:17",{"_index":322,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["data.interface.ts:19",{"_index":324,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["data.interface.ts:21",{"_index":315,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["data.interface.ts:23",{"_index":319,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["data.provid",{"_index":239,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"index.html":{}}}],["data.provider.t",{"_index":333,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.provider.ts:42",{"_index":337,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.provider.ts:46",{"_index":338,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.provider.ts:50",{"_index":335,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.provider.ts:54",{"_index":336,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["data.provider.ts:58",{"_index":339,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["date",{"_index":359,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["daterang",{"_index":1191,"title":{},"body":{"index.html":{}}}],["deactivate/delet",{"_index":1000,"title":{},"body":{"index.html":{}}}],["deactivatepati",{"_index":965,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1338,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1311,"title":{},"body":{"index.html":{}}}],["declar",{"_index":404,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":227,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["dedic",{"_index":716,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["deep",{"_index":1209,"title":{},"body":{"index.html":{}}}],["default",{"_index":148,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["defer",{"_index":903,"title":{},"body":{"index.html":{}}}],["defin",{"_index":18,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["definition.const",{"_index":175,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["definition.constants.t",{"_index":129,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:10",{"_index":486,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:11",{"_index":485,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:12",{"_index":151,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:13",{"_index":482,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:14",{"_index":174,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:15",{"_index":484,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:16",{"_index":483,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:17",{"_index":487,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:18",{"_index":488,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:19",{"_index":489,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:20",{"_index":490,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:22",{"_index":492,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:26",{"_index":494,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:30",{"_index":496,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:34",{"_index":498,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:38",{"_index":500,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:42",{"_index":502,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:46",{"_index":504,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:50",{"_index":506,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:54",{"_index":508,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:58",{"_index":510,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["definition.constants.ts:62",{"_index":512,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["defocuss",{"_index":214,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["delet",{"_index":1303,"title":{},"body":{"index.html":{}}}],["depend",{"_index":403,"title":{"dependencies.html":{}},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":8,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["design",{"_index":904,"title":{},"body":{"index.html":{}}}],["dest",{"_index":1290,"title":{},"body":{"index.html":{}}}],["destin",{"_index":1293,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":115,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["detail",{"_index":993,"title":{},"body":{"index.html":{}}}],["detect",{"_index":62,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["develop",{"_index":1279,"title":{},"body":{"index.html":{}}}],["dialog/mod",{"_index":997,"title":{},"body":{"index.html":{}}}],["differ",{"_index":917,"title":{},"body":{"index.html":{}}}],["direct",{"_index":278,"title":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{},"overview.html":{}}}],["directives/dynam",{"_index":544,"title":{},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["display",{"_index":247,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"index.html":{}}}],["dist/ngx",{"_index":1306,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1342,"title":{},"body":{"license.html":{}}}],["document",{"_index":831,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":180,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["domain",{"_index":717,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["domsanit",{"_index":86,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{}}}],["don't",{"_index":1014,"title":{},"body":{"index.html":{}}}],["done",{"_index":1015,"title":{},"body":{"index.html":{}}}],["draft",{"_index":875,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["drug",{"_index":365,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["drug'",{"_index":1085,"title":{},"body":{"index.html":{}}}],["drugapprovalconstants.approv",{"_index":1134,"title":{},"body":{"index.html":{}}}],["drugapprovalconstants.pend",{"_index":1128,"title":{},"body":{"index.html":{}}}],["drugsexpandabletabledataprovid",{"_index":1043,"title":{},"body":{"index.html":{}}}],["drugsexpandabletabledataprovider.action_edit_drug",{"_index":1265,"title":{},"body":{"index.html":{}}}],["drugsexpandabletabledataprovider.mouse_out_event_hide_drug_packag",{"_index":1276,"title":{},"body":{"index.html":{}}}],["drugsexpandabletabledataprovider.mouse_over_event_show_drug_packag",{"_index":1270,"title":{},"body":{"index.html":{}}}],["drugslistcompon",{"_index":1040,"title":{},"body":{"index.html":{}}}],["drugslistdataprovider.group_name_1",{"_index":1117,"title":{},"body":{"index.html":{}}}],["drugsservic",{"_index":1060,"title":{},"body":{"index.html":{}}}],["drugsutils.getatcdescriptionbycode(this.atccod",{"_index":1101,"title":{},"body":{"index.html":{}}}],["drugusageconstants.reserv",{"_index":1137,"title":{},"body":{"index.html":{}}}],["duplic",{"_index":899,"title":{},"body":{"index.html":{}}}],["durch",{"_index":1153,"title":{},"body":{"index.html":{}}}],["dure",{"_index":72,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["durg",{"_index":1180,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":6,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"interfaces/DynamicTableOptionInterface.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconst",{"_index":123,"title":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.descript",{"_index":1063,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.expandable_column",{"_index":177,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.html_act",{"_index":1077,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.html_content_summari",{"_index":1065,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.html_icon",{"_index":1066,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.other_text_based1",{"_index":1067,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.other_text_based2",{"_index":1068,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.other_text_based3",{"_index":1069,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.other_text_based4",{"_index":1070,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecolumndefinitionconstants.titl",{"_index":1075,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletablecompon",{"_index":178,"title":{"components/DynamicExpandableTableComponent.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"overview.html":{}}}],["dynamicexpandabletabledatainterfac",{"_index":303,"title":{"interfaces/DynamicExpandableTableDataInterface.html":{}},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["dynamicexpandabletabledataprovid",{"_index":237,"title":{"injectables/DynamicExpandableTableDataProvider.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"index.html":{},"overview.html":{}}}],["dynamicexpandabletableexpandeditemcolumninterac",{"_index":317,"title":{"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{}},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"classes/DynamicExpandableTableUtils.html":{},"index.html":{}}}],["dynamicexpandabletablemodul",{"_index":402,"title":{"modules/DynamicExpandableTableModule.html":{}},"body":{"modules/DynamicExpandableTableModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["dynamicexpandabletablemodule.forroot",{"_index":1197,"title":{},"body":{"index.html":{}}}],["dynamicexpandabletableoptioninterfac",{"_index":327,"title":{"interfaces/DynamicExpandableTableOptionInterface.html":{}},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"index.html":{}}}],["dynamicexpandabletableutil",{"_index":439,"title":{"classes/DynamicExpandableTableUtils.html":{}},"body":{"classes/DynamicExpandableTableUtils.html":{}}}],["dynamictableactionmessageservic",{"_index":447,"title":{"injectables/DynamicTableActionMessageService.html":{}},"body":{"injectables/DynamicTableActionMessageService.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["dynamictableactionscontainerdirect",{"_index":285,"title":{"directives/DynamicTableActionsContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictablecolumndefinitionconst",{"_index":131,"title":{"classes/DynamicTableColumnDefinitionConstants.html":{}},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamictablecolumndefinitionconstants.additional_info",{"_index":516,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.descript",{"_index":517,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.html_act",{"_index":519,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamictablecolumndefinitionconstants.html_content_summari",{"_index":518,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamictablecolumndefinitionconstants.html_icon",{"_index":514,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamictablecolumndefinitionconstants.indicator_color",{"_index":513,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.other_text_based1",{"_index":520,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.other_text_based2",{"_index":521,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.other_text_based3",{"_index":522,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.other_text_based4",{"_index":523,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants.titl",{"_index":515,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["dynamictablecolumndefinitionconstants:10",{"_index":163,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:11",{"_index":161,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:12",{"_index":172,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:13",{"_index":154,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:14",{"_index":155,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:15",{"_index":159,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:16",{"_index":157,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:17",{"_index":165,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:18",{"_index":167,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:19",{"_index":169,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumndefinitionconstants:20",{"_index":171,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["dynamictablecolumninterac",{"_index":524,"title":{"interfaces/DynamicTableColumnInterace.html":{}},"body":{"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["dynamictablecolumnscontainerdirect",{"_index":287,"title":{"directives/DynamicTableColumnsContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictablecompon",{"_index":184,"title":{"components/DynamicTableComponent.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictablecomponent:37",{"_index":219,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:38",{"_index":220,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:39",{"_index":225,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:40",{"_index":223,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:41",{"_index":216,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:42",{"_index":221,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:43",{"_index":229,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:44",{"_index":207,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:59",{"_index":208,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecomponent:67",{"_index":212,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["dynamictablecontainerdirect",{"_index":289,"title":{"directives/DynamicTableContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictablecontentsummarycontainerdirect",{"_index":291,"title":{"directives/DynamicTableContentSummaryContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictabledatainterfac",{"_index":306,"title":{"interfaces/DynamicTableDataInterface.html":{}},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["dynamictabledataprovid",{"_index":222,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"index.html":{},"overview.html":{}}}],["dynamictabledescriptioncontainerdirect",{"_index":293,"title":{"directives/DynamicTableDescriptionContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictabledynamiccellbuild",{"_index":580,"title":{"injectables/DynamicTableDynamicCellBuilder.html":{}},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictableeventdatainterfac",{"_index":649,"title":{"interfaces/DynamicTableEventDataInterface.html":{}},"body":{"interfaces/DynamicTableEventDataInterface.html":{}}}],["dynamictableexpressionbuild",{"_index":650,"title":{"classes/DynamicTableExpressionBuilder.html":{}},"body":{"classes/DynamicTableExpressionBuilder.html":{},"changelog.html":{},"index.html":{}}}],["dynamictablegroupexpressioninterfac",{"_index":654,"title":{"interfaces/DynamicTableGroupExpressionInterface.html":{}},"body":{"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["dynamictablegroupinterfac",{"_index":342,"title":{"interfaces/DynamicTableGroupInterface.html":{}},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"index.html":{}}}],["dynamictableiconcontainerdirect",{"_index":295,"title":{"directives/DynamicTableIconContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["dynamictableinterfac",{"_index":568,"title":{"interfaces/DynamicTableInterface.html":{}},"body":{"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableInterface.html":{}}}],["dynamictablemodul",{"_index":411,"title":{"modules/DynamicTableModule.html":{}},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["dynamictablemodule.forroot",{"_index":432,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"index.html":{}}}],["dynamictablemouseeventmessageservic",{"_index":548,"title":{"injectables/DynamicTableMouseEventMessageService.html":{}},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"index.html":{}}}],["dynamictableoptioninterfac",{"_index":437,"title":{"interfaces/DynamicTableOptionInterface.html":{}},"body":{"interfaces/DynamicExpandableTableOptionInterface.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"index.html":{}}}],["dynamictabletitlecontainerdirect",{"_index":297,"title":{"directives/DynamicTableTitleContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"overview.html":{}}}],["dynamictableuiutil",{"_index":751,"title":{"classes/DynamicTableUIUtils.html":{}},"body":{"classes/DynamicTableUIUtils.html":{},"changelog.html":{},"index.html":{}}}],["dynamictableutil",{"_index":789,"title":{"classes/DynamicTableUtils.html":{}},"body":{"classes/DynamicTableUtils.html":{}}}],["e0e0e0",{"_index":1220,"title":{},"body":{"index.html":{}}}],["each",{"_index":911,"title":{},"body":{"index.html":{}}}],["eaeaea",{"_index":1247,"title":{},"body":{"index.html":{}}}],["easi",{"_index":920,"title":{},"body":{"index.html":{}}}],["easili",{"_index":832,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["edit",{"_index":1261,"title":{},"body":{"index.html":{}}}],["editselecteddrug",{"_index":1049,"title":{},"body":{"index.html":{}}}],["eight8",{"_index":379,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["einheit",{"_index":354,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["einheitstyp",{"_index":1177,"title":{},"body":{"index.html":{}}}],["element",{"_index":277,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["emedisexpandabletabledataprovider.group_name_1",{"_index":1081,"title":{},"body":{"index.html":{}}}],["emedisexpandabletabledataprovider.group_name_2",{"_index":1082,"title":{},"body":{"index.html":{}}}],["emedisexpandabletabledataprovider.group_name_3",{"_index":1083,"title":{},"body":{"index.html":{}}}],["emedisexpandabletabledataprovider.group_name_4",{"_index":1084,"title":{},"body":{"index.html":{}}}],["emedisutils.convertsubstancestostring(subst",{"_index":1106,"title":{},"body":{"index.html":{}}}],["empti",{"_index":643,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["end",{"_index":959,"title":{},"body":{"index.html":{}}}],["enhanc",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["enter",{"_index":553,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["entri",{"_index":1288,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":743,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["enumer",{"_index":1005,"title":{},"body":{"index.html":{}}}],["error(\"method",{"_index":1194,"title":{},"body":{"index.html":{}}}],["error('someth",{"_index":69,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["especi",{"_index":1016,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1007,"title":{},"body":{"index.html":{}}}],["even",{"_index":1073,"title":{},"body":{"index.html":{}}}],["event",{"_index":550,"title":{},"body":{"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{},"license.html":{}}}],["exampl",{"_index":481,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["exclud",{"_index":860,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["expand",{"_index":125,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["expandable_column",{"_index":135,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["expandablecolumn",{"_index":150,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["expandablecolumnopt",{"_index":1119,"title":{},"body":{"index.html":{}}}],["expandablecolumnoption['hoverbackgroundcolor",{"_index":1121,"title":{},"body":{"index.html":{}}}],["expandabletableinstancecompon",{"_index":282,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"overview.html":{}}}],["expandeddatasourc",{"_index":371,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["expandeditem",{"_index":314,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["expandeditem['com",{"_index":1173,"title":{},"body":{"index.html":{}}}],["expandeditem['d",{"_index":1166,"title":{},"body":{"index.html":{}}}],["expandeditem['medinfo']['_form",{"_index":1161,"title":{},"body":{"index.html":{}}}],["expandeditem['medinfo']['_qti",{"_index":1158,"title":{},"body":{"index.html":{}}}],["expandeditem['medinfo']['_qtyu",{"_index":1159,"title":{},"body":{"index.html":{}}}],["expandeditem['physician",{"_index":1171,"title":{},"body":{"index.html":{}}}],["expandeditemdetail",{"_index":316,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["expandeditemdetailstablecolumn",{"_index":370,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["expandeditemexpandablecolumn",{"_index":347,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["expandeditemtablecolumn",{"_index":345,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["expandeditemtabledata",{"_index":1058,"title":{},"body":{"index.html":{}}}],["expir",{"_index":1057,"title":{},"body":{"index.html":{}}}],["explan",{"_index":1042,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":651,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["expression.interfac",{"_index":660,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["expression.interface.t",{"_index":679,"title":{},"body":{"interfaces/DynamicTableGroupExpressionInterface.html":{}}}],["extend",{"_index":130,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"index.html":{}}}],["f2e70a",{"_index":1130,"title":{},"body":{"index.html":{}}}],["fab",{"_index":787,"title":{},"body":{"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["face",{"_index":907,"title":{},"body":{"index.html":{}}}],["factori",{"_index":53,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["famili",{"_index":1250,"title":{},"body":{"index.html":{}}}],["fanci",{"_index":416,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["featur",{"_index":921,"title":{},"body":{"index.html":{}}}],["ffffff",{"_index":352,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["field",{"_index":210,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["fieldtyp",{"_index":386,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupInterface.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":209,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["filter_min_valu",{"_index":194,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["filterhint",{"_index":195,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["final",{"_index":1019,"title":{},"body":{"index.html":{}}}],["find",{"_index":1323,"title":{},"body":{"index.html":{}}}],["finish",{"_index":647,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["first",{"_index":675,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["fit",{"_index":1356,"title":{},"body":{"license.html":{}}}],["five5",{"_index":376,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["fix",{"_index":836,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":976,"title":{},"body":{"index.html":{}}}],["flagid",{"_index":980,"title":{},"body":{"index.html":{}}}],["flags.split",{"_index":979,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1202,"title":{},"body":{"index.html":{}}}],["folder",{"_index":851,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["follow",{"_index":943,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":1230,"title":{},"body":{"index.html":{}}}],["form",{"_index":1148,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":728,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["forroot",{"_index":433,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["found",{"_index":871,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["four4",{"_index":375,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["free",{"_index":1333,"title":{},"body":{"license.html":{}}}],["fulli",{"_index":109,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["function",{"_index":659,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["function('item",{"_index":678,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["furnish",{"_index":1347,"title":{},"body":{"license.html":{}}}],["further",{"_index":849,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["g",{"_index":877,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["gener",{"_index":473,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"changelog.html":{},"index.html":{}}}],["get",{"_index":823,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getact",{"_index":451,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{}}}],["getadditional_info",{"_index":497,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getadditionalinfo",{"_index":684,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["getadditionalinfo(item",{"_index":691,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["getcolumn",{"_index":569,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{},"index.html":{}}}],["getcolumnbyid",{"_index":791,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["getcolumnbyid(columnid",{"_index":796,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["getcolumnnamebyid",{"_index":792,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["getcolumnnamebyid(columnid",{"_index":798,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["getcolumnsstyleurl",{"_index":570,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{}}}],["getdata",{"_index":571,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{}}}],["getdata(sort",{"_index":573,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{},"index.html":{}}}],["getdescript",{"_index":499,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableInterface.html":{}}}],["getdescription(item",{"_index":695,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["geteventpublish",{"_index":572,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{}}}],["getexpandable_column",{"_index":173,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{}}}],["getexpandeditemdetailstablecolumn",{"_index":307,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["getexpandeditemdetailstablecolumns(expandeditemdetail",{"_index":312,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["getexpandeditemdetailstabledata",{"_index":308,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["getexpandeditemdetailstabledata(expandeditemdetail",{"_index":318,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["getexpandeditemtablecolumn",{"_index":309,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["getexpandeditemtablecolumns(expandeditem",{"_index":321,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["getexpandeditemtabledata",{"_index":310,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{}}}],["getexpandeditemtabledata(expandeditem",{"_index":323,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["gethtml_act",{"_index":503,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["gethtml_content_summari",{"_index":501,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["gethtml_icon",{"_index":493,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["gethtmlact",{"_index":685,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["gethtmlaction(item",{"_index":697,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["gethtmlcontentsummari",{"_index":686,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["gethtmlcontentsummary(item",{"_index":699,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["gethtmlicon",{"_index":687,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["gethtmlicon(item",{"_index":701,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["getindicator_color",{"_index":491,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getindicatorcolor",{"_index":688,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["getindicatorcolor(item",{"_index":703,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["getindicatorsign",{"_index":689,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["getindicatorsign(item",{"_index":705,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["getitem",{"_index":452,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["getmouseev",{"_index":745,"title":{},"body":{"injectables/DynamicTableMouseEventMessageService.html":{}}}],["getopt",{"_index":311,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableDataInterface.html":{},"index.html":{}}}],["getother_text_based1",{"_index":505,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getother_text_based2",{"_index":507,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getother_text_based3",{"_index":509,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getother_text_based4",{"_index":511,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["getothertextbas",{"_index":690,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["getothertextbased(item",{"_index":707,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["getpubish",{"_index":453,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["gettim",{"_index":671,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["gettitl",{"_index":495,"title":{},"body":{"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableInterface.html":{}}}],["gettitle(item",{"_index":709,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["given",{"_index":36,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["global",{"_index":1285,"title":{},"body":{"index.html":{}}}],["go",{"_index":948,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1332,"title":{},"body":{"license.html":{}}}],["green[data",{"_index":607,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["green{position:relative}.badg",{"_index":621,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["grey{color:#929292}.icon",{"_index":603,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["group",{"_index":392,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"changelog.html":{},"index.html":{}}}],["group.fieldtyp",{"_index":664,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["group.groupbyfield",{"_index":670,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["group.interfac",{"_index":343,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{}}}],["group.interface.t",{"_index":680,"title":{},"body":{"interfaces/DynamicTableGroupInterface.html":{}}}],["group.rul",{"_index":663,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["group_name_1",{"_index":1050,"title":{},"body":{"index.html":{}}}],["group_name_2",{"_index":1051,"title":{},"body":{"index.html":{}}}],["group_name_3",{"_index":1053,"title":{},"body":{"index.html":{}}}],["group_name_4",{"_index":1055,"title":{},"body":{"index.html":{}}}],["group_name_5",{"_index":1056,"title":{},"body":{"index.html":{}}}],["groupbi",{"_index":383,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["groupbyapprov",{"_index":1133,"title":{},"body":{"index.html":{}}}],["groupbyd",{"_index":1138,"title":{},"body":{"index.html":{}}}],["groupbyfield",{"_index":384,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableGroupInterface.html":{}}}],["groupbyrequest",{"_index":1126,"title":{},"body":{"index.html":{}}}],["groupbyreserv",{"_index":1143,"title":{},"body":{"index.html":{}}}],["groupbywithoutreserv",{"_index":1135,"title":{},"body":{"index.html":{}}}],["groupexpress",{"_index":391,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["groupexpression.group",{"_index":662,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["groupexpression.oper",{"_index":673,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["groupexpressions.length",{"_index":672,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["groupindex",{"_index":693,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["groupitemrowcolor",{"_index":393,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["groupnam",{"_index":389,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"index.html":{}}}],["grund",{"_index":363,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["gökhan",{"_index":419,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"contributing.html":{}}}],["handl",{"_index":104,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["handledynamictableact",{"_index":814,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["handledynamictableactions(publish",{"_index":817,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["handledynamictablemouseoutev",{"_index":815,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["handledynamictablemouseoutevents(publish",{"_index":819,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["handledynamictablemouseoverev",{"_index":816,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{}}}],["handledynamictablemouseoverevents(publish",{"_index":821,"title":{},"body":{"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["happen",{"_index":1022,"title":{},"body":{"index.html":{}}}],["have",{"_index":897,"title":{},"body":{"index.html":{}}}],["height",{"_index":244,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"index.html":{}}}],["height:38px;bord",{"_index":615,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["henc",{"_index":1024,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":1331,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1215,"title":{},"body":{"index.html":{}}}],["hide",{"_index":1198,"title":{},"body":{"index.html":{}}}],["hidecolumn",{"_index":394,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["hidecolumnsofexpandeditem",{"_index":395,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{}}}],["hidecolumnsofexpandeditemdetail",{"_index":396,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{}}}],["hidedrugpackageonmouseout",{"_index":1047,"title":{},"body":{"index.html":{}}}],["histori",{"_index":1176,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1360,"title":{},"body":{"license.html":{}}}],["hook",{"_index":99,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["host",{"_index":932,"title":{},"body":{"index.html":{}}}],["hover",{"_index":1122,"title":{},"body":{"index.html":{}}}],["html",{"_index":276,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["html_action",{"_index":137,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["html_content_summari",{"_index":138,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["html_icon",{"_index":139,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["htmlaction",{"_index":156,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["htmlcontentsummari",{"_index":158,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["htmlicon",{"_index":160,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["htmltemplat",{"_index":586,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["i.",{"_index":950,"title":{},"body":{"index.html":{}}}],["icon",{"_index":269,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["icon.svg",{"_index":272,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["iconregistri",{"_index":259,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["id",{"_index":804,"title":{},"body":{"classes/DynamicTableUtils.html":{},"index.html":{}}}],["imag",{"_index":1087,"title":{},"body":{"index.html":{}}}],["imageheight",{"_index":1275,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":1272,"title":{},"body":{"index.html":{}}}],["imagewidth",{"_index":1274,"title":{},"body":{"index.html":{}}}],["implement",{"_index":79,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"changelog.html":{},"index.html":{}}}],["impli",{"_index":1354,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["incl",{"_index":1013,"title":{},"body":{"index.html":{}}}],["includ",{"_index":1340,"title":{},"body":{"license.html":{}}}],["increas",{"_index":1320,"title":{},"body":{"index.html":{}}}],["index",{"_index":132,"title":{"index.html":{}},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"index.html":{}}}],["index.t",{"_index":867,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indic",{"_index":472,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["indicator_color",{"_index":140,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["indicatorcolor",{"_index":162,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"index.html":{}}}],["indicatorsign",{"_index":1008,"title":{},"body":{"index.html":{}}}],["indik",{"_index":1178,"title":{},"body":{"index.html":{}}}],["individu",{"_index":1080,"title":{},"body":{"index.html":{}}}],["infekt",{"_index":1169,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["inform",{"_index":1096,"title":{},"body":{"index.html":{}}}],["ingredi",{"_index":1249,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":153,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"index.html":{}}}],["inheritdoc",{"_index":556,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["initi",{"_index":101,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["inject",{"_index":332,"title":{"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{},"overview.html":{}}}],["injector",{"_index":17,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["injector.get(changedetectorref",{"_index":95,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["injector.get(compil",{"_index":34,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["injector.get(domsanit",{"_index":97,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{}}}],["injector.get(dynamicexpandabletabledataprovid",{"_index":264,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["injector.get(dynamictabledataprovid",{"_index":557,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["injector.get(maticonregistri",{"_index":262,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["injector.get(ngzon",{"_index":93,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["inlin",{"_index":250,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["input",{"_index":203,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["input('paldynamictablecolumnscontain",{"_index":529,"title":{},"body":{"directives/DynamicTableColumnsContainerDirective.html":{}}}],["input('paltableactionscontain",{"_index":479,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{}}}],["input('paltableadditionalinfocontain",{"_index":811,"title":{},"body":{"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["input('paltablecontain",{"_index":563,"title":{},"body":{"directives/DynamicTableContainerDirective.html":{}}}],["input('paltablecontentsummarycontain",{"_index":567,"title":{},"body":{"directives/DynamicTableContentSummaryContainerDirective.html":{}}}],["input('paltabledescriptioncontain",{"_index":579,"title":{},"body":{"directives/DynamicTableDescriptionContainerDirective.html":{}}}],["input('paltableiconcontain",{"_index":682,"title":{},"body":{"directives/DynamicTableIconContainerDirective.html":{}}}],["input('paltabletitlecontain",{"_index":750,"title":{},"body":{"directives/DynamicTableTitleContainerDirective.html":{}}}],["insid",{"_index":908,"title":{},"body":{"index.html":{}}}],["instal",{"_index":936,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":120,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["instance'},{'nam",{"_index":283,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["instance.compon",{"_index":430,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["instance.component.scss",{"_index":190,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["intak",{"_index":1091,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":302,"title":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"interfaces/UsingDynamicTableComponent.html":{}},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{},"overview.html":{}}}],["interfaces/dynam",{"_index":340,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"components/DynamicTableComponent.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUtils.html":{}}}],["issu",{"_index":1325,"title":{},"body":{"index.html":{}}}],["it'",{"_index":915,"title":{},"body":{"index.html":{}}}],["it?featuresinstallationsetuptutorialsdevelop",{"_index":894,"title":{},"body":{"index.html":{}}}],["item",{"_index":329,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["item['_even",{"_index":1111,"title":{},"body":{"index.html":{}}}],["item['_medicationadministrationdescript",{"_index":1098,"title":{},"body":{"index.html":{}}}],["item['_morn",{"_index":1109,"title":{},"body":{"index.html":{}}}],["item['_night",{"_index":1113,"title":{},"body":{"index.html":{}}}],["item['_noon",{"_index":1110,"title":{},"body":{"index.html":{}}}],["item['firstnam",{"_index":974,"title":{},"body":{"index.html":{}}}],["item['flag",{"_index":977,"title":{},"body":{"index.html":{}}}],["item['lastnam",{"_index":973,"title":{},"body":{"index.html":{}}}],["item['medinfo']['_atc",{"_index":1102,"title":{},"body":{"index.html":{}}}],["item['medinfo']['_qtyu",{"_index":1108,"title":{},"body":{"index.html":{}}}],["item['medinfo']['dscr",{"_index":1103,"title":{},"body":{"index.html":{}}}],["item['medinfo']['subst",{"_index":1104,"title":{},"body":{"index.html":{}}}],["itemdetail",{"_index":1155,"title":{},"body":{"index.html":{}}}],["itemdetails['articl",{"_index":1162,"title":{},"body":{"index.html":{}}}],["itemdetails['com",{"_index":1172,"title":{},"body":{"index.html":{}}}],["itemdetails['daterang",{"_index":1164,"title":{},"body":{"index.html":{}}}],["itemdetails['physiciandrugadministr",{"_index":1170,"title":{},"body":{"index.html":{}}}],["itemdetails['reason",{"_index":1168,"title":{},"body":{"index.html":{}}}],["itemdetails['unit",{"_index":1157,"title":{},"body":{"index.html":{}}}],["itemdetails['unittyp",{"_index":1160,"title":{},"body":{"index.html":{}}}],["itemn",{"_index":1114,"title":{},"body":{"index.html":{}}}],["js",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["justifi",{"_index":1204,"title":{},"body":{"index.html":{}}}],["key",{"_index":1188,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1353,"title":{},"body":{"license.html":{}}}],["large{width:48px;height:48px;font",{"_index":599,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["lastnam",{"_index":972,"title":{},"body":{"index.html":{}}}],["later",{"_index":60,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["layout",{"_index":1326,"title":{},"body":{"index.html":{}}}],["learn",{"_index":944,"title":{},"body":{"index.html":{}}}],["left",{"_index":1208,"title":{},"body":{"index.html":{}}}],["legend",{"_index":275,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["letter",{"_index":1010,"title":{},"body":{"index.html":{}}}],["level",{"_index":925,"title":{},"body":{"index.html":{}}}],["liabil",{"_index":1364,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1361,"title":{},"body":{"license.html":{}}}],["librari",{"_index":78,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"changelog.html":{},"index.html":{}}}],["libraries/ngx",{"_index":1297,"title":{},"body":{"index.html":{}}}],["library.compon",{"_index":543,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["library.component.t",{"_index":77,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["library.component.ts:19",{"_index":83,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["licens",{"_index":1327,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":98,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["limit",{"_index":1341,"title":{},"body":{"license.html":{}}}],["line",{"_index":1235,"title":{},"body":{"index.html":{}}}],["list",{"_index":803,"title":{},"body":{"classes/DynamicTableUtils.html":{},"index.html":{}}}],["list.component.html",{"_index":952,"title":{},"body":{"index.html":{}}}],["list.component.scss",{"_index":953,"title":{},"body":{"index.html":{}}}],["load",{"_index":837,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loaddrughistory(drugelementid",{"_index":1181,"title":{},"body":{"index.html":{}}}],["logic",{"_index":954,"title":{},"body":{"index.html":{}}}],["login",{"_index":1322,"title":{},"body":{"index.html":{}}}],["look",{"_index":960,"title":{},"body":{"index.html":{}}}],["lot",{"_index":1039,"title":{},"body":{"index.html":{}}}],["main",{"_index":1292,"title":{},"body":{"index.html":{}}}],["make",{"_index":1283,"title":{},"body":{"index.html":{}}}],["manual",{"_index":65,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["map",{"_index":1312,"title":{},"body":{"index.html":{}}}],["map((drugel",{"_index":1186,"title":{},"body":{"index.html":{}}}],["mappedcolor",{"_index":984,"title":{},"body":{"index.html":{}}}],["margin",{"_index":1207,"title":{},"body":{"index.html":{}}}],["mat",{"_index":1210,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":589,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{}}}],["matcardmodul",{"_index":738,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["match",{"_index":74,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matcolor",{"_index":772,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["matdividermodul",{"_index":591,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["materi",{"_index":401,"title":{},"body":{"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":732,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["maticonmodul",{"_index":590,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{}}}],["maticonregistri",{"_index":230,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["matinputmodul",{"_index":733,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["matpaginatormodul",{"_index":735,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["matprogressbarmodul",{"_index":737,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["matprogressspinnermodul",{"_index":734,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["matslidetogglemodul",{"_index":593,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{}}}],["matsortmodul",{"_index":736,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["mattablemodul",{"_index":731,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["mattoolbarmodul",{"_index":739,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["mattooltipmodul",{"_index":592,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["max",{"_index":1225,"title":{},"body":{"index.html":{}}}],["meal",{"_index":1092,"title":{},"body":{"index.html":{}}}],["mean",{"_index":895,"title":{},"body":{"index.html":{}}}],["medinfo",{"_index":1259,"title":{},"body":{"index.html":{}}}],["medium{width:32px;height:32px;font",{"_index":597,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["merchant",{"_index":1355,"title":{},"body":{"license.html":{}}}],["merg",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["message.servic",{"_index":547,"title":{},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["message.service.t",{"_index":450,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:18",{"_index":461,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:22",{"_index":457,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:26",{"_index":463,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:30",{"_index":458,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:34",{"_index":465,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["message.service.ts:38",{"_index":459,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["metadata",{"_index":185,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["method",{"_index":200,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"interfaces/UsingDynamicTableComponent.html":{}}}],["min",{"_index":1212,"title":{},"body":{"index.html":{}}}],["minheight",{"_index":246,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["mini",{"_index":786,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["minifabbutton",{"_index":788,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["minimum",{"_index":552,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["mit",{"_index":1328,"title":{},"body":{"license.html":{}}}],["modal",{"_index":1089,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":1286,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":44,"title":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"modules.html":{}},"body":{"classes/AbstractDynamicBaseService.html":{},"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moduletocr",{"_index":38,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["modulewithprovid",{"_index":426,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["morn",{"_index":1071,"title":{},"body":{"index.html":{}}}],["mous",{"_index":549,"title":{},"body":{"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["mouse_out_event_hide_drug_packag",{"_index":1046,"title":{},"body":{"index.html":{}}}],["mouse_over_event_show_drug_packag",{"_index":1044,"title":{},"body":{"index.html":{}}}],["mouseev",{"_index":636,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["mouseeventmessag",{"_index":1268,"title":{},"body":{"index.html":{}}}],["mouseeventmessage.getitem()['medinfo']['_paflink",{"_index":1273,"title":{},"body":{"index.html":{}}}],["mouseeventmessage.getmouseev",{"_index":1269,"title":{},"body":{"index.html":{}}}],["mouseeventssubject",{"_index":196,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["mouseout",{"_index":784,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["mouseoutev",{"_index":764,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["mouseov",{"_index":781,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["mouseoverev",{"_index":767,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["multipl",{"_index":531,"title":{},"body":{"components/DynamicTableComponent.html":{},"index.html":{}}}],["n/a",{"_index":990,"title":{},"body":{"index.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["need",{"_index":63,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["ng",{"_index":845,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":112,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"index.html":{}}}],["ngmodul",{"_index":425,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":121,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["ngoninit",{"_index":108,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["ngx",{"_index":400,"title":{},"body":{"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["ngzone",{"_index":84,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["night",{"_index":1074,"title":{},"body":{"index.html":{}}}],["no_errors_schema",{"_index":727,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["node_modul",{"_index":1304,"title":{},"body":{"index.html":{}}}],["node_modules/ngx",{"_index":1199,"title":{},"body":{"index.html":{}}}],["none",{"_index":248,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["noninfring",{"_index":1359,"title":{},"body":{"license.html":{}}}],["noon",{"_index":1072,"title":{},"body":{"index.html":{}}}],["note",{"_index":1316,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1196,"title":{},"body":{"index.html":{},"license.html":{}}}],["now",{"_index":919,"title":{},"body":{"index.html":{}}}],["npm",{"_index":937,"title":{},"body":{"index.html":{}}}],["null",{"_index":52,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["number",{"_index":217,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["object",{"_index":334,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["object.assign",{"_index":1120,"title":{},"body":{"index.html":{}}}],["object.assign(component.inst",{"_index":58,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["observ",{"_index":320,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableActionMessageService.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["obtain",{"_index":1335,"title":{},"body":{"license.html":{}}}],["occur",{"_index":119,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["of(this.expandeddatasourc",{"_index":381,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["of(this.expandeditemtabledata",{"_index":1174,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":81,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["one1",{"_index":372,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["onfilterent",{"_index":201,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["onfilterleav",{"_index":202,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["oninit",{"_index":80,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["onmouseout",{"_index":783,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["onmouseout(mouseev",{"_index":641,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["onmouseov",{"_index":780,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["onmouseover(mouseev",{"_index":637,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["open",{"_index":996,"title":{},"body":{"index.html":{}}}],["oper",{"_index":388,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"index.html":{}}}],["option",{"_index":24,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["option.interfac",{"_index":328,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{}}}],["option.interface.t",{"_index":436,"title":{},"body":{"interfaces/DynamicExpandableTableOptionInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{}}}],["options.push(tableopt",{"_index":398,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["options.push(this.createexpandabletableoption(drugsexpandabletabledataprovider.group_name_1",{"_index":1129,"title":{},"body":{"index.html":{}}}],["options.push(this.createexpandabletableoption(drugsexpandabletabledataprovider.group_name_2",{"_index":1140,"title":{},"body":{"index.html":{}}}],["options.push(this.createexpandabletableoption(drugsexpandabletabledataprovider.group_name_3",{"_index":1144,"title":{},"body":{"index.html":{}}}],["oral",{"_index":1095,"title":{},"body":{"index.html":{}}}],["order",{"_index":574,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{},"index.html":{}}}],["orgcolor",{"_index":986,"title":{},"body":{"index.html":{}}}],["orgcolor['colordesc",{"_index":989,"title":{},"body":{"index.html":{}}}],["other_text_based1",{"_index":141,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["other_text_based2",{"_index":142,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["other_text_based3",{"_index":143,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["other_text_based4",{"_index":144,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["othertextbas",{"_index":1011,"title":{},"body":{"index.html":{}}}],["othertextbased1",{"_index":164,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["othertextbased2",{"_index":166,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["othertextbased3",{"_index":168,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["othertextbased4",{"_index":170,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{}}}],["otherwis",{"_index":1368,"title":{},"body":{"license.html":{}}}],["out",{"_index":414,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":635,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["overflow",{"_index":1214,"title":{},"body":{"index.html":{}}}],["overrid",{"_index":933,"title":{},"body":{"index.html":{}}}],["overriden",{"_index":929,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1372,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":844,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["package.json",{"_index":1321,"title":{},"body":{"index.html":{}}}],["packgr",{"_index":846,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pad",{"_index":1223,"title":{},"body":{"index.html":{}}}],["page",{"_index":575,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{},"index.html":{}}}],["pal",{"_index":1239,"title":{},"body":{"index.html":{}}}],["paldynamictablecolumnscontain",{"_index":526,"title":{},"body":{"directives/DynamicTableColumnsContainerDirective.html":{}}}],["paldynamictablecolumnscontainer]'},{'nam",{"_index":288,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["palexpandabletableexpandeditemcolumn",{"_index":445,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{}}}],["paltableactionscontain",{"_index":474,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{}}}],["paltableactionscontainer]'},{'nam",{"_index":286,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltableadditionalinfocontain",{"_index":300,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["paltableadditionalinfocontainerdirect",{"_index":299,"title":{"directives/PalTableAdditionalInfoContainerDirective.html":{}},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"overview.html":{}}}],["paltablecolumn",{"_index":805,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["paltablecolumn.column",{"_index":806,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["paltablecolumn.nam",{"_index":808,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["paltablecolumncompon",{"_index":629,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["paltablecolumnmodul",{"_index":642,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["paltablecontain",{"_index":560,"title":{},"body":{"directives/DynamicTableContainerDirective.html":{}}}],["paltablecontainer]'},{'nam",{"_index":290,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltablecontentsummarycontain",{"_index":566,"title":{},"body":{"directives/DynamicTableContentSummaryContainerDirective.html":{}}}],["paltablecontentsummarycontainer]'},{'nam",{"_index":292,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltabledataprovid",{"_index":197,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltabledescriptioncontain",{"_index":578,"title":{},"body":{"directives/DynamicTableDescriptionContainerDirective.html":{}}}],["paltabledescriptioncontainer]'},{'nam",{"_index":294,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltableiconcontain",{"_index":681,"title":{},"body":{"directives/DynamicTableIconContainerDirective.html":{}}}],["paltableiconcontainer]'},{'nam",{"_index":296,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paltablemodulewithprovid",{"_index":434,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{}}}],["paltabletitlecontain",{"_index":749,"title":{},"body":{"directives/DynamicTableTitleContainerDirective.html":{}}}],["paltabletitlecontainer]'},{'nam",{"_index":298,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["paracetamol",{"_index":1100,"title":{},"body":{"index.html":{}}}],["param",{"_index":32,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["paramet",{"_index":20,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{}}}],["parseint(flagid",{"_index":982,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1357,"title":{},"body":{"license.html":{}}}],["pass",{"_index":677,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["past",{"_index":1307,"title":{},"body":{"index.html":{}}}],["patient",{"_index":1027,"title":{},"body":{"index.html":{}}}],["patientlistdataprovid",{"_index":1026,"title":{},"body":{"index.html":{}}}],["patientlistdataprovider.action_deactivate_pati",{"_index":1034,"title":{},"body":{"index.html":{}}}],["patientlistdataprovider.action_select_pati",{"_index":1032,"title":{},"body":{"index.html":{}}}],["patientlistdataprovider.action_show_patient_color",{"_index":1036,"title":{},"body":{"index.html":{}}}],["patientslistcompon",{"_index":1025,"title":{},"body":{"index.html":{}}}],["peer",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":1094,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":1330,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1346,"title":{},"body":{"license.html":{}}}],["person",{"_index":949,"title":{},"body":{"index.html":{},"license.html":{}}}],["personapiservic",{"_index":969,"title":{},"body":{"index.html":{}}}],["personslistcompon",{"_index":951,"title":{},"body":{"index.html":{}}}],["personslistdataprovid",{"_index":961,"title":{},"body":{"index.html":{}}}],["physician",{"_index":364,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["physiciandrugadministr",{"_index":1192,"title":{},"body":{"index.html":{}}}],["pic",{"_index":1267,"title":{},"body":{"index.html":{}}}],["pictur",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pill",{"_index":1086,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1185,"title":{},"body":{"index.html":{}}}],["placehold",{"_index":554,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["play",{"_index":1294,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1238,"title":{},"body":{"index.html":{}}}],["portion",{"_index":1351,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":916,"title":{},"body":{"index.html":{}}}],["predefin",{"_index":927,"title":{},"body":{"index.html":{}}}],["predefined/gener",{"_index":934,"title":{},"body":{"index.html":{}}}],["prescrib",{"_index":1038,"title":{},"body":{"index.html":{}}}],["privat",{"_index":344,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"index.html":{}}}],["problem",{"_index":905,"title":{},"body":{"index.html":{}}}],["product",{"_index":355,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["produkt",{"_index":356,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["project",{"_index":945,"title":{},"body":{"index.html":{}}}],["promis",{"_index":42,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["promise>((resolv",{"_index":50,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["properli",{"_index":114,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["properti",{"_index":40,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["properties.actionmessage.setaction(act",{"_index":632,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["properties.actionmessage.setitem(item",{"_index":633,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["properties.actionssubject.next(properties.actionmessag",{"_index":634,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["properties.mouseeventmessage.setitem(item",{"_index":639,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["properties.mouseeventmessage.setmouseevent(mouseev",{"_index":638,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["properties.mouseeventssubject.next(properties.mouseeventmessag",{"_index":640,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["protect",{"_index":31,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{}}}],["provid",{"_index":341,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"modules/DynamicTableModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["provider.t",{"_index":956,"title":{},"body":{"index.html":{}}}],["public",{"_index":176,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["publish",{"_index":466,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{},"license.html":{}}}],["publishact",{"_index":778,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["publishaction(act",{"_index":631,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["publisher.subscrib",{"_index":1029,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":1358,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":226,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["querystr",{"_index":661,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["radius:30%;box",{"_index":616,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["rang",{"_index":360,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["rapidli",{"_index":893,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":729,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["readi",{"_index":1021,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":134,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["reason",{"_index":362,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["recurs",{"_index":1282,"title":{},"body":{"index.html":{}}}],["red[data",{"_index":609,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["red{position:relative}.badg",{"_index":623,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["regist",{"_index":267,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["reject",{"_index":51,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"index.html":{}}}],["reject(new",{"_index":68,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["relas",{"_index":1295,"title":{},"body":{"index.html":{}}}],["relat",{"_index":801,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["render",{"_index":922,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1319,"title":{},"body":{"index.html":{}}}],["repres",{"_index":627,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["request",{"_index":390,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["reserv",{"_index":1054,"title":{},"body":{"index.html":{}}}],["reset",{"_index":413,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["resolve(compon",{"_index":67,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["restrict",{"_index":1339,"title":{},"body":{"license.html":{}}}],["result",{"_index":73,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["retriev",{"_index":810,"title":{},"body":{"classes/DynamicTableUtils.html":{},"index.html":{}}}],["return",{"_index":41,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["right",{"_index":1217,"title":{},"body":{"index.html":{},"license.html":{}}}],["roboto",{"_index":1251,"title":{},"body":{"index.html":{}}}],["rollup",{"_index":861,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["root",{"_index":715,"title":{},"body":{"modules/DynamicTableModule.html":{},"index.html":{}}}],["rout",{"_index":1093,"title":{},"body":{"index.html":{}}}],["row",{"_index":912,"title":{},"body":{"index.html":{}}}],["row/item",{"_index":1004,"title":{},"body":{"index.html":{}}}],["rowindex",{"_index":692,"title":{},"body":{"interfaces/DynamicTableInterface.html":{},"index.html":{}}}],["rule",{"_index":387,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupInterface.html":{}}}],["rule)['oper",{"_index":665,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["rule)['valu",{"_index":666,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{}}}],["run",{"_index":1298,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":326,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"injectables/DynamicTableActionMessageService.html":{},"components/DynamicTableComponent.html":{},"interfaces/DynamicTableDataInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/UsingDynamicTableComponent.html":{},"dependencies.html":{},"index.html":{}}}],["same",{"_index":902,"title":{},"body":{"index.html":{}}}],["sanit",{"_index":91,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{}}}],["sari",{"_index":420,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"contributing.html":{}}}],["sari.com",{"_index":879,"title":{},"body":{"contributing.html":{}}}],["sari@g",{"_index":878,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":938,"title":{},"body":{"index.html":{}}}],["schema",{"_index":726,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["scope",{"_index":723,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["scss",{"_index":1280,"title":{},"body":{"index.html":{}}}],["second",{"_index":995,"title":{},"body":{"index.html":{}}}],["section",{"_index":1017,"title":{},"body":{"index.html":{}}}],["see",{"_index":913,"title":{},"body":{"index.html":{}}}],["select",{"_index":725,"title":{},"body":{"modules/DynamicTableModule.html":{},"index.html":{}}}],["selector",{"_index":186,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["selectpati",{"_index":963,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1345,"title":{},"body":{"license.html":{}}}],["serv",{"_index":1310,"title":{},"body":{"index.html":{}}}],["servic",{"_index":11,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["services/dynam",{"_index":546,"title":{},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["set",{"_index":719,"title":{},"body":{"modules/DynamicTableModule.html":{},"index.html":{}}}],["setact",{"_index":454,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{}}}],["setaction(act",{"_index":460,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{}}}],["setitem",{"_index":455,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setitem(item",{"_index":462,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setmouseev",{"_index":746,"title":{},"body":{"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setmouseevent(mouseev",{"_index":747,"title":{},"body":{"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setpublish",{"_index":456,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setpublisher(publish",{"_index":464,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["setup",{"_index":939,"title":{},"body":{"index.html":{}}}],["seven7",{"_index":378,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["sever",{"_index":840,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["shadow:0",{"_index":617,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["shall",{"_index":1349,"title":{},"body":{"license.html":{}}}],["shared/dynam",{"_index":238,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["show",{"_index":1088,"title":{},"body":{"index.html":{}}}],["showdrugpackageonmouseov",{"_index":1045,"title":{},"body":{"index.html":{}}}],["showfilt",{"_index":204,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["shown",{"_index":940,"title":{},"body":{"index.html":{}}}],["showpatientcolor",{"_index":967,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1009,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":946,"title":{},"body":{"index.html":{}}}],["singl",{"_index":866,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["singleton",{"_index":744,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["six6",{"_index":377,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["size",{"_index":1231,"title":{},"body":{"index.html":{}}}],["size:20px;color:#fff;width:38px;height:38px;text",{"_index":613,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["size:32px}.icon",{"_index":598,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["size:48px}.icon",{"_index":600,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["size:64px}.icon",{"_index":602,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["slab",{"_index":1252,"title":{},"body":{"index.html":{}}}],["slide",{"_index":1115,"title":{},"body":{"index.html":{}}}],["snippet",{"_index":1020,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":1336,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1219,"title":{},"body":{"index.html":{}}}],["solut",{"_index":918,"title":{},"body":{"index.html":{}}}],["sort",{"_index":576,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["splittedflag",{"_index":978,"title":{},"body":{"index.html":{}}}],["src/dynam",{"_index":872,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["src/lib/abstract",{"_index":5,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{}}}],["src/lib/dynam",{"_index":124,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{}}}],["src/main.scss",{"_index":1289,"title":{},"body":{"index.html":{}}}],["stage",{"_index":61,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["start",{"_index":824,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":232,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["state('collaps",{"_index":243,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["state('expand",{"_index":249,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["static",{"_index":133,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"classes/DynamicTableExpressionBuilder.html":{},"modules/DynamicTableModule.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"index.html":{}}}],["step",{"_index":1296,"title":{},"body":{"index.html":{}}}],["still",{"_index":1317,"title":{},"body":{"index.html":{}}}],["string",{"_index":147,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"index.html":{}}}],["stringbuff",{"_index":975,"title":{},"body":{"index.html":{}}}],["stringbuffer.append",{"_index":991,"title":{},"body":{"index.html":{}}}],["stringbuffer.append('do_not_disturb",{"_index":1001,"title":{},"body":{"index.html":{}}}],["stringbuffer.append('edit",{"_index":1118,"title":{},"body":{"index.html":{}}}],["stringbuffer.append('palett",{"_index":998,"title":{},"body":{"index.html":{}}}],["stringbuffer.append('play_arrow",{"_index":994,"title":{},"body":{"index.html":{}}}],["stringbuffer.tostr",{"_index":992,"title":{},"body":{"index.html":{}}}],["structur",{"_index":852,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":233,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"changelog.html":{},"index.html":{}}}],["styles.scss",{"_index":873,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styleurl",{"_index":187,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["subject",{"_index":215,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"license.html":{}}}],["sublicens",{"_index":1343,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":1278,"title":{},"body":{"index.html":{}}}],["substanc",{"_index":1099,"title":{},"body":{"index.html":{}}}],["substances.length",{"_index":1105,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":1350,"title":{},"body":{"license.html":{}}}],["summari",{"_index":565,"title":{},"body":{"directives/DynamicTableContentSummaryContainerDirective.html":{},"modules/DynamicTableModule.html":{},"index.html":{}}}],["super",{"_index":970,"title":{},"body":{"index.html":{}}}],["super(injector",{"_index":260,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["support",{"_index":842,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":1284,"title":{},"body":{"index.html":{}}}],["svg",{"_index":268,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules.html":{}}}],["switch",{"_index":667,"title":{},"body":{"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["t",{"_index":313,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicTableActionMessageService.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["tabl",{"_index":127,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"modules/DynamicExpandableTableModule.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"modules/DynamicTableModule.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"changelog.html":{},"index.html":{}}}],["table'},{'nam",{"_index":281,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["table.compon",{"_index":240,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["table.component.html",{"_index":192,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["table.component.scss",{"_index":241,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["table.component.scss,.dynam",{"_index":188,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["table.component.scss,table/t",{"_index":532,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.t",{"_index":183,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["table.component.ts:33",{"_index":205,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["table.component.ts:37",{"_index":537,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:38",{"_index":538,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:39",{"_index":541,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:40",{"_index":540,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:41",{"_index":536,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:42",{"_index":539,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:43",{"_index":542,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:44",{"_index":533,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:59",{"_index":534,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.component.ts:67",{"_index":535,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["table.direct",{"_index":545,"title":{},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["table.directive.t",{"_index":559,"title":{},"body":{"directives/DynamicTableContainerDirective.html":{}}}],["table.directive.ts:16",{"_index":561,"title":{},"body":{"directives/DynamicTableContainerDirective.html":{}}}],["table.directive.ts:18",{"_index":562,"title":{},"body":{"directives/DynamicTableContainerDirective.html":{}}}],["table.interfac",{"_index":577,"title":{},"body":{"interfaces/DynamicTableDataInterface.html":{}}}],["table.interface.t",{"_index":683,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:10",{"_index":704,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:12",{"_index":706,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:14",{"_index":702,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:16",{"_index":710,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:18",{"_index":696,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:20",{"_index":700,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:22",{"_index":694,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:24",{"_index":698,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.interface.ts:26",{"_index":708,"title":{},"body":{"interfaces/DynamicTableInterface.html":{}}}],["table.modul",{"_index":431,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{}}}],["table.module.t",{"_index":415,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{}}}],["table.utils.t",{"_index":440,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["table.utils.ts:13",{"_index":443,"title":{},"body":{"classes/DynamicExpandableTableUtils.html":{}}}],["table.utils.ts:21",{"_index":793,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["table.utils.ts:39",{"_index":795,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["table.utils.ts:58",{"_index":799,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["table.utils.ts:79",{"_index":797,"title":{},"body":{"classes/DynamicTableUtils.html":{}}}],["table/directives/dynam",{"_index":470,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["table/dynam",{"_index":182,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"modules/DynamicExpandableTableModule.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["table/expand",{"_index":429,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{}}}],["table/interfaces/dynam",{"_index":304,"title":{},"body":{"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"interfaces/DynamicTableColumnInterace.html":{},"interfaces/DynamicTableDataInterface.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"interfaces/DynamicTableInterface.html":{},"interfaces/DynamicTableOptionInterface.html":{},"interfaces/UsingDynamicTableComponent.html":{}}}],["table/services/dynam",{"_index":448,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["table/shared/dynam",{"_index":126,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicExpandableTableUtils.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{}}}],["table/t",{"_index":551,"title":{},"body":{"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{}}}],["table/table/t",{"_index":189,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["table/them",{"_index":1200,"title":{},"body":{"index.html":{}}}],["table2iconcolumnopt",{"_index":1131,"title":{},"body":{"index.html":{}}}],["table2iconcolumnoption['backgroundcolor",{"_index":1132,"title":{},"body":{"index.html":{}}}],["table3iconcolumnopt",{"_index":1141,"title":{},"body":{"index.html":{}}}],["table3iconcolumnoption['backgroundcolor",{"_index":1142,"title":{},"body":{"index.html":{}}}],["tableinstancecompon",{"_index":284,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}],["tableopt",{"_index":198,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"components/DynamicTableComponent.html":{}}}],["tableoption.groupnam",{"_index":274,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["tablesquerylist",{"_index":199,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["task",{"_index":106,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["templat",{"_index":179,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"index.html":{}}}],["templateref",{"_index":478,"title":{},"body":{"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["templateurl",{"_index":191,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["text",{"_index":1012,"title":{},"body":{"index.html":{}}}],["theme",{"_index":841,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["third",{"_index":999,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":467,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{}}}],["this.bottomsheet.dismiss",{"_index":1277,"title":{},"body":{"index.html":{}}}],["this.bottomsheet.open(emedisdrugimagebottomsheetcompon",{"_index":1271,"title":{},"body":{"index.html":{}}}],["this.changedetectorref",{"_index":94,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["this.colorshelperservice.getcolor(colorid",{"_index":985,"title":{},"body":{"index.html":{}}}],["this.colorshelperservice.getorgcolorbyid(colorid",{"_index":987,"title":{},"body":{"index.html":{}}}],["this.compil",{"_index":33,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["this.compiler.compilemoduleandallcomponentssync(moduletocr",{"_index":48,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["this.createdynamiccomponent(contain",{"_index":648,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["this.createexpandeditemcolumn('articl",{"_index":1149,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('com",{"_index":1154,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('daterang",{"_index":1150,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('expandeditemexpandablecolumn",{"_index":1145,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('icon",{"_index":1175,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('physiciandrugadministr",{"_index":1152,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('reason",{"_index":1151,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('unit",{"_index":1146,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemcolumn('unittyp",{"_index":1147,"title":{},"body":{"index.html":{}}}],["this.createexpandeditemdata",{"_index":1059,"title":{},"body":{"index.html":{}}}],["this.creategroupexpression('_usag",{"_index":1136,"title":{},"body":{"index.html":{}}}],["this.creategroupexpression('approv",{"_index":1127,"title":{},"body":{"index.html":{}}}],["this.creategroupexpression('d",{"_index":1139,"title":{},"body":{"index.html":{}}}],["this.createhtmlaction(act",{"_index":779,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["this.createmouseoutevent(mouseoutev",{"_index":785,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["this.createmouseoverevent(mouseoverev",{"_index":782,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["this.deactivateperson(actionmessage.getitem",{"_index":1035,"title":{},"body":{"index.html":{}}}],["this.drugshistoryconverterpipe.transform(drugel",{"_index":1187,"title":{},"body":{"index.html":{}}}],["this.drugsservice.loaddrughistory(drugelementid",{"_index":1182,"title":{},"body":{"index.html":{}}}],["this.drugsservice.loaddrugs('d",{"_index":1079,"title":{},"body":{"index.html":{}}}],["this.emedistranslationsservice.getusagetranslatedtext(expandeditem",{"_index":1163,"title":{},"body":{"index.html":{}}}],["this.emedistranslationsservice.getwhentranslatedtext(item",{"_index":1097,"title":{},"body":{"index.html":{}}}],["this.expandablecolumn",{"_index":1076,"title":{},"body":{"index.html":{}}}],["this.expandeditemdetailstablecolumn",{"_index":382,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["this.expandeditemtablecolumn",{"_index":380,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["this.expandeditemtabledata[0",{"_index":1156,"title":{},"body":{"index.html":{}}}],["this.filterhint",{"_index":558,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["this.handledynamictableactions(this.dynamictableactionmessageservice.getpubish",{"_index":1028,"title":{},"body":{"index.html":{}}}],["this.handledynamictablemouseoutevents(this.dynamictableactionmessageservice.getpubish",{"_index":1264,"title":{},"body":{"index.html":{}}}],["this.handledynamictablemouseoverevents(this.dynamictableactionmessageservice.getpubish",{"_index":1263,"title":{},"body":{"index.html":{}}}],["this.iconcolumndefinit",{"_index":1062,"title":{},"body":{"index.html":{}}}],["this.iconregistri",{"_index":261,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["this.iconregistry.addsvgicon",{"_index":270,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["this.item",{"_index":468,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["this.loaddrughistory(expandeditem['id']['elementid",{"_index":1179,"title":{},"body":{"index.html":{}}}],["this.mouseev",{"_index":748,"title":{},"body":{"injectables/DynamicTableMouseEventMessageService.html":{}}}],["this.openpersoncolorsdialog(actionmessage.getitem",{"_index":1037,"title":{},"body":{"index.html":{}}}],["this.opensidenav(actionmessage.getitem",{"_index":1266,"title":{},"body":{"index.html":{}}}],["this.paltabledataprovid",{"_index":263,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["this.paltabledataprovider.getopt",{"_index":266,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["this.personapiservice.loadpati",{"_index":971,"title":{},"body":{"index.html":{}}}],["this.publish",{"_index":469,"title":{},"body":{"injectables/DynamicTableActionMessageService.html":{},"injectables/DynamicTableMouseEventMessageService.html":{}}}],["this.sanit",{"_index":96,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('assets/ui/images/svg/expand",{"_index":271,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["this.selectperson(actionmessage.getitem",{"_index":1033,"title":{},"body":{"index.html":{}}}],["this.tableopt",{"_index":265,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["this.userconfig.orgid",{"_index":1184,"title":{},"body":{"index.html":{}}}],["this.userconfig.patientid",{"_index":1183,"title":{},"body":{"index.html":{}}}],["this.zon",{"_index":92,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["three3",{"_index":374,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["throw",{"_index":1193,"title":{},"body":{"index.html":{}}}],["timer",{"_index":348,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["titl",{"_index":145,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"modules/DynamicTableModule.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"index.html":{}}}],["toggl",{"_index":1116,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":1211,"title":{},"body":{"index.html":{}}}],["top",{"_index":1241,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1367,"title":{},"body":{"license.html":{}}}],["transit",{"_index":234,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["transition('expand",{"_index":251,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["transpil",{"_index":857,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tree",{"_index":181,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["trigger",{"_index":64,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["trigger('detailexpand",{"_index":242,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{}}}],["true",{"_index":206,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"components/DynamicTableComponent.html":{}}}],["tutori",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["two2",{"_index":373,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"interfaces/DynamicExpandableTableDataInterface.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{},"interfaces/DynamicExpandableTableOptionInterface.html":{},"classes/DynamicExpandableTableUtils.html":{},"injectables/DynamicTableActionMessageService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"interfaces/DynamicTableColumnInterace.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"components/DynamicTableComponent.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"interfaces/DynamicTableDataInterface.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"interfaces/DynamicTableEventDataInterface.html":{},"classes/DynamicTableExpressionBuilder.html":{},"interfaces/DynamicTableGroupExpressionInterface.html":{},"interfaces/DynamicTableGroupInterface.html":{},"directives/DynamicTableIconContainerDirective.html":{},"interfaces/DynamicTableInterface.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/DynamicTableOptionInterface.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"classes/DynamicTableUIUtils.html":{},"classes/DynamicTableUtils.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["typescript",{"_index":858,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ui",{"_index":834,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ui.utils.t",{"_index":752,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:21",{"_index":769,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:32",{"_index":761,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:43",{"_index":776,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:54",{"_index":766,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:65",{"_index":774,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:76",{"_index":763,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["ui.utils.ts:88",{"_index":771,"title":{},"body":{"classes/DynamicTableUIUtils.html":{}}}],["undefin",{"_index":1002,"title":{},"body":{"index.html":{}}}],["unit",{"_index":353,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["unittyp",{"_index":1190,"title":{},"body":{"index.html":{}}}],["unpublish",{"_index":1318,"title":{},"body":{"index.html":{}}}],["until",{"_index":646,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["up",{"_index":924,"title":{},"body":{"index.html":{}}}],["us",{"_index":116,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"modules/DynamicTableModule.html":{},"index.html":{},"license.html":{}}}],["useexist",{"_index":1018,"title":{},"body":{"index.html":{}}}],["user",{"_index":213,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["userservic",{"_index":1061,"title":{},"body":{"index.html":{}}}],["usingdynamictablecompon",{"_index":812,"title":{"interfaces/UsingDynamicTableComponent.html":{}},"body":{"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["usual",{"_index":1309,"title":{},"body":{"index.html":{}}}],["valu",{"_index":149,"title":{},"body":{"classes/DynamicExpandableTableColumnDefinitionConstants.html":{},"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicExpandableTableDataProvider.html":{},"classes/DynamicTableColumnDefinitionConstants.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"classes/DynamicTableExpressionBuilder.html":{},"classes/DynamicTableUIUtils.html":{},"index.html":{}}}],["var",{"_index":279,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["variabl",{"_index":89,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"classes/DynamicTableExpressionBuilder.html":{},"index.html":{}}}],["vendorsourcemap",{"_index":1314,"title":{},"body":{"index.html":{}}}],["veri",{"_index":892,"title":{},"body":{"index.html":{}}}],["verordnet",{"_index":367,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["version",{"_index":1302,"title":{},"body":{"index.html":{}}}],["view",{"_index":111,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["viewchildren",{"_index":228,"title":{},"body":{"components/DynamicExpandableTableComponent.html":{},"components/DynamicTableComponent.html":{}}}],["viewchildren(dynamictablecontainerdirect",{"_index":555,"title":{},"body":{"components/DynamicTableComponent.html":{}}}],["viewcontainerref",{"_index":28,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"directives/DynamicTableActionsContainerDirective.html":{},"directives/DynamicTableColumnsContainerDirective.html":{},"directives/DynamicTableContainerDirective.html":{},"directives/DynamicTableContentSummaryContainerDirective.html":{},"directives/DynamicTableDescriptionContainerDirective.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"directives/DynamicTableIconContainerDirective.html":{},"directives/DynamicTableTitleContainerDirective.html":{},"directives/PalTableAdditionalInfoContainerDirective.html":{}}}],["void",{"_index":107,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicExpandableTableComponent.html":{},"injectables/DynamicTableActionMessageService.html":{},"components/DynamicTableComponent.html":{},"injectables/DynamicTableDynamicCellBuilder.html":{},"injectables/DynamicTableMouseEventMessageService.html":{},"interfaces/UsingDynamicTableComponent.html":{},"index.html":{}}}],["von",{"_index":1165,"title":{},"body":{"index.html":{}}}],["wait",{"_index":645,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["want",{"_index":12,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{},"index.html":{}}}],["warn",{"_index":1315,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":1352,"title":{},"body":{"license.html":{}}}],["we'r",{"_index":955,"title":{},"body":{"index.html":{}}}],["web",{"_index":76,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{},"components/DynamicTableComponent.html":{},"index.html":{}}}],["weight",{"_index":1233,"title":{},"body":{"index.html":{}}}],["well",{"_index":1195,"title":{},"body":{"index.html":{}}}],["went",{"_index":70,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["whether",{"_index":1365,"title":{},"body":{"license.html":{}}}],["white{color:#fff",{"_index":604,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["whose",{"_index":722,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["widget",{"_index":898,"title":{},"body":{"index.html":{}}}],["width",{"_index":1224,"title":{},"body":{"index.html":{}}}],["window",{"_index":1090,"title":{},"body":{"index.html":{}}}],["wirkzeitraum",{"_index":361,"title":{},"body":{"injectables/DynamicExpandableTableDataProvider.html":{},"index.html":{}}}],["without",{"_index":896,"title":{},"body":{"index.html":{},"license.html":{}}}],["word",{"_index":914,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":718,"title":{},"body":{"modules/DynamicTableModule.html":{}}}],["wrap",{"_index":1203,"title":{},"body":{"index.html":{}}}],["wrond",{"_index":71,"title":{},"body":{"classes/AbstractDynamicBaseService.html":{}}}],["yellow[data",{"_index":610,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["yellow{position:relative}.badg",{"_index":625,"title":{},"body":{"injectables/DynamicTableDynamicCellBuilder.html":{}}}],["you'r",{"_index":958,"title":{},"body":{"index.html":{}}}],["yourmodul",{"_index":942,"title":{},"body":{"index.html":{}}}],["zone",{"_index":90,"title":{},"body":{"classes/AbstractWebLibraryComponent.html":{}}}],["zone.j",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":412,"title":{},"body":{"modules/DynamicExpandableTableModule.html":{},"modules/DynamicTableModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDynamicBaseService.html":{"url":"classes/AbstractDynamicBaseService.html","title":"class - AbstractDynamicBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDynamicBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/abstract-dynamic-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for all services that want to create components dynamically.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/abstract-dynamic-base.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Compiler, ComponentRef, Injector, ViewContainerRef, Type } from '@angular/core';\n\n/**\n * Abstract base class for all services that want to create components dynamically.\n */\nexport abstract class AbstractDynamicBaseService {\n\n    protected compiler: Compiler;\n\n    /**\n     * @param injector\n     */\n    constructor(injector: Injector) {\n        this.compiler = injector.get(Compiler);\n    }\n\n    /**\n     * Creates an angular component dynamically by the given parameters.\n     *\n     * @param container\n     * @param moduleToCreate\n     * @param componentToCreate\n     * @param properties\n     * @returns Promise\n     */\n    protected createDynamicComponent(\n        container: ViewContainerRef,\n        moduleToCreate: Type,\n        componentToCreate: Type,\n        properties: any = {}\n    ): Promise> {\n        // Compile module and components async\n        const compiledModule = this.compiler.compileModuleAndAllComponentsSync(moduleToCreate);\n        return new Promise>((resolve, reject) => {\n            if (compiledModule != null) {\n                // Get the factory\n                const factory = compiledModule.componentFactories.find((comp) => comp.componentType === componentToCreate);\n                // Create the component\n                const component = container.createComponent(factory);\n                // Assign properties\n                Object.assign(component.instance, properties);\n                // If properties are changed at a later stage, the change detection\n                // may need to be triggered manually:\n                component.changeDetectorRef.detectChanges();\n                // Return promise\n                resolve(component);\n            } else {\n                reject(new Error('Something went wrond during the compilation of the dynamic module'));\n            }\n        });\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractWebLibraryComponent.html":{"url":"classes/AbstractWebLibraryComponent.html","title":"class - AbstractWebLibraryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractWebLibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/abstract-web-library.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base library component for all other library components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n                        AfterViewInit\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/abstract-web-library.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit, NgZone, ChangeDetectorRef, Injector, AfterViewInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Abstract base library component for all other library components.\n */\nexport abstract class AbstractWebLibraryComponent implements OnInit, OnDestroy, AfterViewInit {\n\n    // Variables\n    protected zone: NgZone;\n    protected changeDetectorRef: ChangeDetectorRef;\n    protected sanitizer: DomSanitizer;\n\n    /**\n     * @param injector\n     */\n    constructor(injector: Injector) {\n        this.zone = injector.get(NgZone);\n        this.changeDetectorRef = injector.get(ChangeDetectorRef);\n        this.sanitizer = injector.get(DomSanitizer);\n    }\n\n    /**\n     * A lifecycle hook that is called after Angular has initialized all data-bound properties.\n     * Handles any additional initialization tasks.\n     *\n     * @returns void\n     */\n    ngOnInit(): void { }\n\n    /**\n     * A lifecycle hook that is called after Angular has fully initialized a component's view.\n     * Handles any additional initialization tasks.\n     *\n     * @returns void\n     */\n    ngAfterViewInit(): void {\n        console.log('AbstractWebLibraryComponent:ngAfterViewInit() called properly!');\n    }\n\n    /**\n     * A lifecycle hook that is called when the component is destroyed.\n     * Used for any custom cleanup that needs to occur when the instance is destroyed.\n     *\n     * @returns void\n     */\n    ngOnDestroy(): void {\n        console.log('Component destroyed properly!');\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicExpandableTableColumnDefinitionConstants.html":{"url":"classes/DynamicExpandableTableColumnDefinitionConstants.html","title":"class - DynamicExpandableTableColumnDefinitionConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicExpandableTableColumnDefinitionConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/shared/dynamic-expandable-table-column-definition.constants.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DynamicTableColumnDefinitionConstants\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                EXPANDABLE_COLUMN\n                            \n                            \n                                    Static\n                                    Readonly\n                                ADDITIONAL_INFO\n                            \n                            \n                                    Static\n                                    Readonly\n                                DESCRIPTION\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_ACTIONS\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_CONTENT_SUMMARY\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_ICON\n                            \n                            \n                                    Static\n                                    Readonly\n                                INDICATOR_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED1\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED2\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED3\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED4\n                            \n                            \n                                    Static\n                                    Readonly\n                                TITLE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EXPANDABLE_COLUMN\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            EXPANDABLE_COLUMN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EXPANDABLE_COLUMN:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expandableColumn'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-table-column-definition.constants.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ADDITIONAL_INFO\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ADDITIONAL_INFO:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'additionalInfo'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DESCRIPTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DESCRIPTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'description'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_ACTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_ACTIONS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlActions'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_CONTENT_SUMMARY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_CONTENT_SUMMARY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlContentSummary'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_ICON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_ICON:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlIcon'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            INDICATOR_COLOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INDICATOR_COLOR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'indicatorColor'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased1'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased2'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased3'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased4'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TITLE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'title'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableColumnDefinitionConstants\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableColumnDefinitionConstants:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EXPANDABLE_COLUMN\n                    \n                \n\n                \n                    \n                        getEXPANDABLE_COLUMN()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-table-column-definition.constants.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DynamicTableColumnDefinitionConstants } from '../../dynamic-table/shared/dynamic-table-column-definition.constants';\n\nexport class DynamicExpandableTableColumnDefinitionConstants extends DynamicTableColumnDefinitionConstants {\n\n    public static readonly EXPANDABLE_COLUMN = 'expandableColumn';\n\n    get EXPANDABLE_COLUMN() {\n        return DynamicExpandableTableColumnDefinitionConstants.EXPANDABLE_COLUMN;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicExpandableTableComponent.html":{"url":"components/DynamicExpandableTableComponent.html","title":"component - DynamicExpandableTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicExpandableTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/dynamic-expandable-table/dynamic-expandable-table.component.ts\n\n\n\n    \n        Extends\n    \n    \n            DynamicTableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dynamic-expandable-table\n            \n\n            \n                styleUrls\n                dynamic-expandable-table.component.scss,.dynamic-table/table/table-instance.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dynamic-expandable-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSubject\n                            \n                            \n                                    Static\n                                    Readonly\n                                FILTER_MIN_VALUE\n                            \n                            \n                                    Public\n                                filterHint\n                            \n                            \n                                    Public\n                                mouseEventsSubject\n                            \n                            \n                                    Public\n                                palTableDataProvider\n                            \n                            \n                                    Public\n                                tableOptions\n                            \n                            \n                                tablesQueryList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onFilterEnter\n                            \n                            \n                                    Public\n                                onFilterLeave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showFilter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-expandable-table/dynamic-expandable-table.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showFilter\n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFilterEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onFilterEnter()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:59\n                            \n                        \n\n\n                \n                    \n                            Triggered when on the filter input field is clicked.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFilterLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onFilterLeave()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:67\n                            \n                        \n\n\n                \n                    \n                            Triggered when the user defocusses the filter input field.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            FILTER_MIN_VALUE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FILTER_MIN_VALUE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterHint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterHint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Filter'\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mouseEventsSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mouseEventsSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            palTableDataProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        palTableDataProvider:     DynamicTableDataProvider\n\n                    \n                \n                    \n                        \n                            Type :     DynamicTableDataProvider\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tablesQueryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tablesQueryList:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicTableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicTableComponent:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DynamicExpandableTableDataProvider } from './shared/dynamic-expandable-data.provider';\nimport { DynamicTableComponent } from '../dynamic-table/dynamic-table.component';\n\n@Component({\n    selector: 'dynamic-expandable-table',\n    templateUrl: './dynamic-expandable-table.component.html',\n    styleUrls: [\n        './dynamic-expandable-table.component.scss',\n        '../dynamic-table/table/table-instance.component.scss'\n    ],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({ height: '0px', minHeight: '0px', display: 'none' })),\n            state('expanded', style({ display: 'inline', height: '*' })),\n            transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ],\n})\nexport class DynamicExpandableTableComponent extends DynamicTableComponent {\n\n    protected iconRegistry: MatIconRegistry;\n    protected sanitizer: DomSanitizer;\n\n    constructor(injector: Injector) {\n        super(injector);\n        this.iconRegistry = injector.get(MatIconRegistry);\n        this.sanitizer = injector.get(DomSanitizer);\n        this.palTableDataProvider = injector.get(DynamicExpandableTableDataProvider);\n        this.tableOptions = this.palTableDataProvider.getOptions();\n        // Register SVG icons\n        this.iconRegistry.addSvgIcon(\n            'expand',\n            this.sanitizer.bypassSecurityTrustResourceUrl('assets/ui/images/svg/expand-icon.svg')\n        );\n    }\n\n\n}\n\n\n    \n\n    \n        \n\n    \n        \n            \n            \n        \n    \n\n    \n     0\">\n        \n            {{tableOption.groupName}} \n            \n        \n    \n\n    \n    \n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         0\">                    {{tableOption.groupName}}                                 '\n    var COMPONENTS = [{'name': 'DynamicExpandableTableComponent', 'selector': 'dynamic-expandable-table'},{'name': 'DynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ExpandableTableInstanceComponent', 'selector': 'expandable-table-instance'},{'name': 'TableInstanceComponent', 'selector': 'table-instance-component'}];\n    var DIRECTIVES = [{'name': 'DynamicTableActionsContainerDirective', 'selector': '[palTableActionsContainer]'},{'name': 'DynamicTableColumnsContainerDirective', 'selector': '[palDynamicTableColumnsContainer]'},{'name': 'DynamicTableContainerDirective', 'selector': '[palTableContainer]'},{'name': 'DynamicTableContentSummaryContainerDirective', 'selector': '[palTableContentSummaryContainer]'},{'name': 'DynamicTableDescriptionContainerDirective', 'selector': '[palTableDescriptionContainer]'},{'name': 'DynamicTableIconContainerDirective', 'selector': '[palTableIconContainer]'},{'name': 'DynamicTableTitleContainerDirective', 'selector': '[palTableTitleContainer]'},{'name': 'PalTableAdditionalInfoContainerDirective', 'selector': '[palTableAdditionalInfoContainer]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicExpandableTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicExpandableTableDataInterface.html":{"url":"interfaces/DynamicExpandableTableDataInterface.html","title":"interface - DynamicExpandableTableDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicExpandableTableDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DynamicTableDataInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExpandedItemDetailsTableColumns\n                                \n                                \n                                    getExpandedItemDetailsTableData\n                                \n                                \n                                    getExpandedItemTableColumns\n                                \n                                \n                                    getExpandedItemTableData\n                                \n                                \n                                    getOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemDetailsTableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemDetailsTableColumns(expandedItemDetails: T, expandedItem: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItemDetails\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expandedItem\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicExpandableTableExpandedItemColumnInterace[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemDetailsTableData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemDetailsTableData(expandedItemDetails: T, expandedItem: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItemDetails\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expandedItem\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemTableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemTableColumns(expandedItem: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItem\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicExpandableTableExpandedItemColumnInterace[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemTableData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemTableData(expandedItem: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItem\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-data.interface.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { DynamicExpandableTableOptionInterface } from './dynamic-expandable-table-option.interface';\nimport { DynamicExpandableTableExpandedItemColumnInterace } from './dynamic-expandable-table-expanded-item-column.interface';\nimport { DynamicTableDataInterface } from '../../dynamic-table/interfaces/dynamic-table-data.interface';\n\nexport interface DynamicExpandableTableDataInterface extends DynamicTableDataInterface {\n\n    getOptions(): Array;\n\n    getExpandedItemTableColumns(expandedItem: T): DynamicExpandableTableExpandedItemColumnInterace[];\n\n    getExpandedItemTableData(expandedItem: T): Observable;\n\n    getExpandedItemDetailsTableColumns(expandedItemDetails: T, expandedItem: T): DynamicExpandableTableExpandedItemColumnInterace[];\n\n    getExpandedItemDetailsTableData(expandedItemDetails: T, expandedItem: T): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicExpandableTableDataProvider.html":{"url":"injectables/DynamicExpandableTableDataProvider.html","title":"injectable - DynamicExpandableTableDataProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicExpandableTableDataProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExpandedItemDetailsTableColumns\n                            \n                            \n                                getExpandedItemDetailsTableData\n                            \n                            \n                                getExpandedItemTableColumns\n                            \n                            \n                                getExpandedItemTableData\n                            \n                            \n                                getOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemDetailsTableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemDetailsTableColumns(expandedItemDetails: object, expandedItem: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItemDetails\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expandedItem\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicExpandableTableExpandedItemColumnInterace[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemDetailsTableData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemDetailsTableData(expandedItemDetails: object, expandedItem: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItemDetails\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expandedItem\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemTableColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemTableColumns(expandedItem: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItem\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicExpandableTableExpandedItemColumnInterace[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpandedItemTableData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpandedItemTableData(expandedItem: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expandedItem\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-data.provider.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DynamicExpandableTableOptionInterface[]\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DynamicExpandableTableDataInterface } from '../interfaces/dynamic-expandable-table-data.interface';\nimport { Observable, of } from 'rxjs';\nimport { DynamicExpandableTableOptionInterface } from '../interfaces/dynamic-expandable-table-option.interface';\nimport { DynamicExpandableTableExpandedItemColumnInterace } from '../interfaces/dynamic-expandable-table-expanded-item-column.interface';\nimport { DynamicTableDataProvider } from '../../dynamic-table/shared/dynamic-table-data-provider';\nimport { DynamicTableGroupInterface } from '../../dynamic-table/interfaces/dynamic-table-group.interface';\n\n@Injectable()\nexport class DynamicExpandableTableDataProvider extends DynamicTableDataProvider implements DynamicExpandableTableDataInterface {\n\n    private expandedItemTableColumns: DynamicExpandableTableExpandedItemColumnInterace[] = [\n        { columnId: 'expandedItemExpandableColumn', column: '', icon: 'timer', backgroundColor: '#494949', color: '#ffffff' },\n        { columnId: 'icon', column: 'Icon', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'unit', column: 'Einheit', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'product', column: 'Produkt', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'article', column: 'Art', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'date-range', column: 'Wirkzeitraum', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'reason', column: 'Grund', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'physician-drug-administrator', column: 'Verordnet', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'comment', column: 'Bemerkung', icon: '', backgroundColor: '', color: '' },\n    ];\n    private expandedItemDetailsTableColumns: DynamicExpandableTableExpandedItemColumnInterace[] = [\n        { columnId: 'icon', column: 'Icon', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'unit', column: 'Einheit', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'product', column: 'Produkt', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'article', column: 'Art', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'date-range', column: 'Wirkzeitraum', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'reason', column: 'Grund', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'physician-drug-administrator', column: 'Verordnet', icon: '', backgroundColor: '', color: '' },\n        { columnId: 'comment', column: 'Bemerkung', icon: '', backgroundColor: '', color: '' },\n    ];\n    private expandedDataSource: Object[] = ['one1', 'two2', 'three3', 'four4', 'five5', 'six6', 'seven7', 'eight8'];\n\n    getExpandedItemTableColumns(expandedItem: object): DynamicExpandableTableExpandedItemColumnInterace[] {\n        return this.expandedItemTableColumns;\n    }\n\n    getExpandedItemTableData(expandedItem: object): Observable {\n        return of(this.expandedDataSource);\n    }\n\n    getExpandedItemDetailsTableColumns(expandedItemDetails: object, expandedItem: Object): DynamicExpandableTableExpandedItemColumnInterace[] {\n        return this.expandedItemDetailsTableColumns;\n    }\n\n    getExpandedItemDetailsTableData(expandedItemDetails: object, expandedItem: Object): Observable {\n        return of(this.expandedDataSource);\n    }\n\n    getOptions(): DynamicExpandableTableOptionInterface[] {\n        const options: DynamicExpandableTableOptionInterface[] = [];\n        const groupBy: DynamicTableGroupInterface = {\n            groupByField: 'approval',\n            fieldType: 'string',\n            rules: [\n                {\n                    'operator': '>',\n                    'value': 1\n                }\n            ]\n        };\n        const tableOptions: DynamicExpandableTableOptionInterface = {\n            groupName: 'Requested',\n            groupExpressions: [\n                {\n                    group: groupBy,\n                    operator: ''\n                }\n            ],\n            groupItemRowColor: '',\n            hideColumns: true,\n            hideColumnsOfExpandedItems: true,\n            hideColumnsOfExpandedItemDetails: true,\n            columnOptions: []\n        };\n        options.push(tableOptions);\n        return options;\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html":{"url":"interfaces/DynamicExpandableTableExpandedItemColumnInterace.html","title":"interface - DynamicExpandableTableExpandedItemColumnInterace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicExpandableTableExpandedItemColumnInterace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-expanded-item-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                       *\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backgroundColor\n                                \n                                \n                                        color\n                                \n                                \n                                        column\n                                \n                                \n                                        columnId\n                                \n                                \n                                        icon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                    \n                                \n                                \n                                    \n                                        backgroundColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        column\n                                    \n                                \n                                \n                                    \n                                        column:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnId\n                                    \n                                \n                                \n                                    \n                                        columnId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DynamicExpandableTableExpandedItemColumnInterace {\n\n    columnId: string;\n    column: string;\n    backgroundColor: string;\n    color: string;\n    icon: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicExpandableTableModule.html":{"url":"modules/DynamicExpandableTableModule.html","title":"module - DynamicExpandableTableModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicExpandableTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicExpandableTableModule\n\n\n\ncluster_DynamicExpandableTableModule_declarations\n\n\n\ncluster_DynamicExpandableTableModule_imports\n\n\n\ncluster_DynamicExpandableTableModule_exports\n\n\n\ncluster_DynamicExpandableTableModule_providers\n\n\n\n\nDynamicExpandableTableComponent\n\nDynamicExpandableTableComponent\n\n\n\nDynamicExpandableTableModule\n\nDynamicExpandableTableModule\n\nDynamicExpandableTableModule -->\n\nDynamicExpandableTableComponent->DynamicExpandableTableModule\n\n\n\n\n\nExpandableTableInstanceComponent\n\nExpandableTableInstanceComponent\n\nDynamicExpandableTableModule -->\n\nExpandableTableInstanceComponent->DynamicExpandableTableModule\n\n\n\n\n\nDynamicExpandableTableComponent \n\nDynamicExpandableTableComponent \n\nDynamicExpandableTableComponent  -->\n\nDynamicExpandableTableModule->DynamicExpandableTableComponent \n\n\n\n\n\nExpandableTableInstanceComponent \n\nExpandableTableInstanceComponent \n\nExpandableTableInstanceComponent  -->\n\nDynamicExpandableTableModule->ExpandableTableInstanceComponent \n\n\n\n\n\nDynamicTableModule\n\nDynamicTableModule\n\nDynamicExpandableTableModule -->\n\nDynamicTableModule->DynamicExpandableTableModule\n\n\n\nDynamicExpandableTableModule -->\n\nDynamicTableModule->DynamicExpandableTableModule\n\n\n\n\n\nDynamicExpandableTableDataProvider\n\nDynamicExpandableTableDataProvider\n\nDynamicExpandableTableModule -->\n\nDynamicExpandableTableDataProvider->DynamicExpandableTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/dynamic-expandable-table.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicExpandableTableComponent\n                            \n                            \n                                ExpandableTableInstanceComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicExpandableTableDataProvider\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DynamicTableModule\n                            \n                            \n                                    DynamicTableModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicExpandableTableComponent\n                            \n                            \n                                    ExpandableTableInstanceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*******************************************************************\n * NGX-DYNAMIC-MATERIAL-TABLE                                      *\n * @description Create fancy and complex tables dynamically        *\n * @file dynamic-expandable-table.module.ts                        *\n * @author Gökhan Sari -                   *\n * @copyright Arpage AG, 2018                                      *\n *******************************************************************/\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicExpandableTableComponent } from './dynamic-expandable-table.component';\nimport { ExpandableTableInstanceComponent } from './expandable-table/expandable-table-instance.component';\nimport { DynamicExpandableTableDataProvider } from './shared/dynamic-expandable-data.provider';\nimport { DynamicTableModule } from '../dynamic-table/dynamic-table.module';\n\n@NgModule(\n    {\n        imports: [\n            CommonModule,\n            DynamicTableModule,\n            DynamicTableModule.forRoot()\n        ],\n        exports: [\n            ExpandableTableInstanceComponent,\n            DynamicExpandableTableComponent\n        ],\n        declarations: [\n            ExpandableTableInstanceComponent,\n            DynamicExpandableTableComponent\n        ],\n        providers: [\n            DynamicExpandableTableDataProvider\n        ]\n    }\n)\nexport class DynamicExpandableTableModule {\n\n    static forRoot(): ModuleWithProviders {\n        //const palTableModuleWithProviders: ModuleWithProviders = DynamicTableModule.forRoot();\n        //.concat(palTableModuleWithProviders.providers)\n        return {\n            ngModule: DynamicExpandableTableModule,\n            providers: [\n\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicExpandableTableOptionInterface.html":{"url":"interfaces/DynamicExpandableTableOptionInterface.html","title":"interface - DynamicExpandableTableOptionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicExpandableTableOptionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/interfaces/dynamic-expandable-table-option.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DynamicTableOptionInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideColumnsOfExpandedItemDetails\n                                \n                                \n                                        hideColumnsOfExpandedItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideColumnsOfExpandedItemDetails\n                                    \n                                \n                                \n                                    \n                                        hideColumnsOfExpandedItemDetails:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideColumnsOfExpandedItems\n                                    \n                                \n                                \n                                    \n                                        hideColumnsOfExpandedItems:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicTableOptionInterface } from '../../dynamic-table/interfaces/dynamic-table-option.interface';\n\nexport interface DynamicExpandableTableOptionInterface extends DynamicTableOptionInterface {\n\n    hideColumnsOfExpandedItems: boolean;\n\n    hideColumnsOfExpandedItemDetails: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicExpandableTableUtils.html":{"url":"classes/DynamicExpandableTableUtils.html","title":"class - DynamicExpandableTableUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicExpandableTableUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-expandable-table/shared/dynamic-expandable-table.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertToColumnIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            convertToColumnIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToColumnIds(columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-expandable-table/shared/dynamic-expandable-table.utils.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicExpandableTableExpandedItemColumnInterace } from '../interfaces/dynamic-expandable-table-expanded-item-column.interface';\n\nexport class DynamicExpandableTableUtils {\n\n\n    public static convertToColumnIds(columns: Array): string[] {\n        const columnNames: string[] = [];\n        if (columns != null) {\n            for (const palExpandableTableExpandedItemColumn of columns) {\n                columnNames.push(palExpandableTableExpandedItemColumn.columnId);\n            }\n        }\n        return columnNames;\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableActionMessageService.html":{"url":"injectables/DynamicTableActionMessageService.html","title":"injectable - DynamicTableActionMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableActionMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/services/dynamic-table-action-message.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAction\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                getPubisher\n                            \n                            \n                                    Public\n                                setAction\n                            \n                            \n                                    Public\n                                setItem\n                            \n                            \n                                    Public\n                                setPublisher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPubisher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPubisher()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAction(action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItem(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setPublisher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setPublisher(publisher: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-action-message.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class DynamicTableActionMessageService {\n\n    private action: string;\n    private item: T;\n    private publisher: Observable;\n\n    public setAction(action: string): void {\n        this.action = action;\n    }\n\n    public getAction(): string {\n        return this.action;\n    }\n\n    public setItem(item: T): void {\n        this.item = item;\n    }\n\n    public getItem(): T {\n        return this.item;\n    }\n\n    public setPublisher(publisher: Observable) {\n        this.publisher = publisher;\n    }\n\n    public getPubisher() {\n        return this.publisher;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableActionsContainerDirective.html":{"url":"directives/DynamicTableActionsContainerDirective.html","title":"directive - DynamicTableActionsContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableActionsContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-actions-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableActionsContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableActionsContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-actions-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableActionsContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-actions-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-actions-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableActionsContainer]' })\nexport class DynamicTableActionsContainerDirective {\n\n    @Input('palTableActionsContainer') palTableActionsContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicTableColumnDefinitionConstants.html":{"url":"classes/DynamicTableColumnDefinitionConstants.html","title":"class - DynamicTableColumnDefinitionConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicTableColumnDefinitionConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADDITIONAL_INFO\n                            \n                            \n                                    Static\n                                    Readonly\n                                DESCRIPTION\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_ACTIONS\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_CONTENT_SUMMARY\n                            \n                            \n                                    Static\n                                    Readonly\n                                HTML_ICON\n                            \n                            \n                                    Static\n                                    Readonly\n                                INDICATOR_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED1\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED2\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED3\n                            \n                            \n                                    Static\n                                    Readonly\n                                OTHER_TEXT_BASED4\n                            \n                            \n                                    Static\n                                    Readonly\n                                TITLE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    INDICATOR_COLOR\n                                \n                                \n                                    HTML_ICON\n                                \n                                \n                                    TITLE\n                                \n                                \n                                    ADDITIONAL_INFO\n                                \n                                \n                                    DESCRIPTION\n                                \n                                \n                                    HTML_CONTENT_SUMMARY\n                                \n                                \n                                    HTML_ACTIONS\n                                \n                                \n                                    OTHER_TEXT_BASED1\n                                \n                                \n                                    OTHER_TEXT_BASED2\n                                \n                                \n                                    OTHER_TEXT_BASED3\n                                \n                                \n                                    OTHER_TEXT_BASED4\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ADDITIONAL_INFO\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ADDITIONAL_INFO:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'additionalInfo'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DESCRIPTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DESCRIPTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'description'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_ACTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_ACTIONS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlActions'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_CONTENT_SUMMARY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_CONTENT_SUMMARY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlContentSummary'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HTML_ICON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTML_ICON:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'htmlIcon'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            INDICATOR_COLOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INDICATOR_COLOR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'indicatorColor'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased1'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased2'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased3'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OTHER_TEXT_BASED4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OTHER_TEXT_BASED4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'otherTextBased4'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TITLE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'title'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        INDICATOR_COLOR\n                    \n                \n\n                \n                    \n                        getINDICATOR_COLOR()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        HTML_ICON\n                    \n                \n\n                \n                    \n                        getHTML_ICON()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        TITLE\n                    \n                \n\n                \n                    \n                        getTITLE()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ADDITIONAL_INFO\n                    \n                \n\n                \n                    \n                        getADDITIONAL_INFO()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        DESCRIPTION\n                    \n                \n\n                \n                    \n                        getDESCRIPTION()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        HTML_CONTENT_SUMMARY\n                    \n                \n\n                \n                    \n                        getHTML_CONTENT_SUMMARY()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        HTML_ACTIONS\n                    \n                \n\n                \n                    \n                        getHTML_ACTIONS()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        OTHER_TEXT_BASED1\n                    \n                \n\n                \n                    \n                        getOTHER_TEXT_BASED1()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:50\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        OTHER_TEXT_BASED2\n                    \n                \n\n                \n                    \n                        getOTHER_TEXT_BASED2()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        OTHER_TEXT_BASED3\n                    \n                \n\n                \n                    \n                        getOTHER_TEXT_BASED3()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        OTHER_TEXT_BASED4\n                    \n                \n\n                \n                    \n                        getOTHER_TEXT_BASED4()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-column-definition.constants.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class DynamicTableColumnDefinitionConstants {\n\n    public static readonly INDICATOR_COLOR = 'indicatorColor';\n    public static readonly HTML_ICON = 'htmlIcon';\n    public static readonly TITLE = 'title';\n    public static readonly ADDITIONAL_INFO = 'additionalInfo';\n    public static readonly DESCRIPTION = 'description';\n    public static readonly HTML_CONTENT_SUMMARY = 'htmlContentSummary';\n    public static readonly HTML_ACTIONS = 'htmlActions';\n    public static readonly OTHER_TEXT_BASED1 = 'otherTextBased1';\n    public static readonly OTHER_TEXT_BASED2 = 'otherTextBased2';\n    public static readonly OTHER_TEXT_BASED3 = 'otherTextBased3';\n    public static readonly OTHER_TEXT_BASED4 = 'otherTextBased4';\n\n    get INDICATOR_COLOR() {\n        return DynamicTableColumnDefinitionConstants.INDICATOR_COLOR;\n    }\n\n    get HTML_ICON() {\n        return DynamicTableColumnDefinitionConstants.HTML_ICON;\n    }\n\n    get TITLE() {\n        return DynamicTableColumnDefinitionConstants.TITLE;\n    }\n\n    get ADDITIONAL_INFO() {\n        return DynamicTableColumnDefinitionConstants.ADDITIONAL_INFO;\n    }\n\n    get DESCRIPTION() {\n        return DynamicTableColumnDefinitionConstants.DESCRIPTION;\n    }\n\n    get HTML_CONTENT_SUMMARY() {\n        return DynamicTableColumnDefinitionConstants.HTML_CONTENT_SUMMARY;\n    }\n\n    get HTML_ACTIONS() {\n        return DynamicTableColumnDefinitionConstants.HTML_ACTIONS;\n    }\n\n    get OTHER_TEXT_BASED1() {\n        return DynamicTableColumnDefinitionConstants.OTHER_TEXT_BASED1;\n    }\n\n    get OTHER_TEXT_BASED2() {\n        return DynamicTableColumnDefinitionConstants.OTHER_TEXT_BASED2;\n    }\n\n    get OTHER_TEXT_BASED3() {\n        return DynamicTableColumnDefinitionConstants.OTHER_TEXT_BASED3;\n    }\n\n    get OTHER_TEXT_BASED4() {\n        return DynamicTableColumnDefinitionConstants.OTHER_TEXT_BASED4;\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableColumnInterace.html":{"url":"interfaces/DynamicTableColumnInterace.html","title":"interface - DynamicTableColumnInterace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableColumnInterace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backgroundColor\n                                \n                                \n                                        columns\n                                \n                                \n                                        names\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                    \n                                \n                                \n                                    \n                                        backgroundColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        names\n                                    \n                                \n                                \n                                    \n                                        names:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DynamicTableColumnInterace {\n\n    columns: string[];\n    names: string[];\n    backgroundColor: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableColumnsContainerDirective.html":{"url":"directives/DynamicTableColumnsContainerDirective.html","title":"directive - DynamicTableColumnsContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableColumnsContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-columns.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palDynamicTableColumnsContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palDynamicTableColumnsContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-columns.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palDynamicTableColumnsContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-columns.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-columns.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palDynamicTableColumnsContainer]' })\nexport class DynamicTableColumnsContainerDirective {\n\n    @Input('palDynamicTableColumnsContainer') palDynamicTableColumnsContainer: string;\n\n    constructor(\n        public viewContainerRef: ViewContainerRef,\n    ) {\n        \n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicTableComponent.html":{"url":"components/DynamicTableComponent.html","title":"component - DynamicTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/dynamic-table/dynamic-table.component.ts\n\n\n    \n        Description\n    \n    \n        Container component which can contain and control multiple table instances.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractWebLibraryComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dynamic-table\n            \n\n            \n                styleUrls\n                dynamic-table.component.scss,table/table-instance.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dynamic-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSubject\n                            \n                            \n                                    Static\n                                    Readonly\n                                FILTER_MIN_VALUE\n                            \n                            \n                                    Public\n                                filterHint\n                            \n                            \n                                    Public\n                                mouseEventsSubject\n                            \n                            \n                                    Public\n                                palTableDataProvider\n                            \n                            \n                                    Public\n                                tableOptions\n                            \n                            \n                                tablesQueryList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onFilterEnter\n                            \n                            \n                                    Public\n                                onFilterLeave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showFilter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/dynamic-table.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showFilter\n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFilterEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onFilterEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Triggered when on the filter input field is clicked.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFilterLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onFilterLeave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Triggered when the user defocusses the filter input field.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            FILTER_MIN_VALUE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FILTER_MIN_VALUE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterHint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterHint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Filter'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mouseEventsSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mouseEventsSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            palTableDataProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        palTableDataProvider:     DynamicTableDataProvider\n\n                    \n                \n                    \n                        \n                            Type :     DynamicTableDataProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tablesQueryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tablesQueryList:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/dynamic-table.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, Input, ViewChildren, QueryList } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AbstractWebLibraryComponent } from '../abstract-web-library.component';\nimport { DynamicTableDataProvider } from './shared/dynamic-table-data-provider';\nimport { DynamicTableContainerDirective } from './directives/dynamic-table.directive';\nimport { DynamicTableOptionInterface } from './interfaces/dynamic-table-option.interface';\nimport { DynamicTableActionMessageService } from './services/dynamic-table-action-message.service';\nimport { DynamicTableMouseEventMessageService } from './services/dynamic-table-mouse-event-message.service';\n\n\n/**\n * Container component which can contain and control multiple table instances.\n *\n * @param selector\n * @param templateUrl\n * @param styleUrls\n * @param animations\n */\n@Component({\n    selector: 'dynamic-table',\n    templateUrl: './dynamic-table.component.html',\n    styleUrls: [\n        './dynamic-table.component.scss',\n        './table/table-instance.component.scss'\n    ],\n    animations: []\n})\nexport class DynamicTableComponent extends AbstractWebLibraryComponent {\n\n    public static readonly FILTER_MIN_VALUE = 3; // minimum value to be entered to trigger the filter.\n    public filterHint = 'Filter'; // Placeholder for the filter input field.\n    public tableOptions: Array;\n    public palTableDataProvider: DynamicTableDataProvider;\n    public actionsSubject = new Subject>();\n    public mouseEventsSubject = new Subject>();\n    @ViewChildren(DynamicTableContainerDirective) tablesQueryList: QueryList;\n    @Input() public showFilter = true;\n\n    /**\n     * @inheritdoc\n     */\n    constructor(injector: Injector) {\n        super(injector);\n        this.palTableDataProvider = injector.get(DynamicTableDataProvider); // inject defined dynamic table data provider\n        this.tableOptions = this.palTableDataProvider.getOptions(); // get defined table options by the table data provider\n    }\n\n    /**\n     * Triggered when on the filter input field is clicked.\n     * @returns void\n     */\n    public onFilterEnter(): void {\n        this.filterHint = '';\n    }\n\n    /**\n     * Triggered when the user defocusses the filter input field.\n     * @returns void\n     */\n    public onFilterLeave(): void {\n        this.filterHint = 'Filter';\n    }\n\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n       \n    \n  \n\n  \n   0\">\n    \n      {{tableOption.groupName}} \n      \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        0\">          {{tableOption.groupName}}                 '\n    var COMPONENTS = [{'name': 'DynamicExpandableTableComponent', 'selector': 'dynamic-expandable-table'},{'name': 'DynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ExpandableTableInstanceComponent', 'selector': 'expandable-table-instance'},{'name': 'TableInstanceComponent', 'selector': 'table-instance-component'}];\n    var DIRECTIVES = [{'name': 'DynamicTableActionsContainerDirective', 'selector': '[palTableActionsContainer]'},{'name': 'DynamicTableColumnsContainerDirective', 'selector': '[palDynamicTableColumnsContainer]'},{'name': 'DynamicTableContainerDirective', 'selector': '[palTableContainer]'},{'name': 'DynamicTableContentSummaryContainerDirective', 'selector': '[palTableContentSummaryContainer]'},{'name': 'DynamicTableDescriptionContainerDirective', 'selector': '[palTableDescriptionContainer]'},{'name': 'DynamicTableIconContainerDirective', 'selector': '[palTableIconContainer]'},{'name': 'DynamicTableTitleContainerDirective', 'selector': '[palTableTitleContainer]'},{'name': 'PalTableAdditionalInfoContainerDirective', 'selector': '[palTableAdditionalInfoContainer]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableContainerDirective.html":{"url":"directives/DynamicTableContainerDirective.html","title":"directive - DynamicTableContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableContainer]' })\nexport class DynamicTableContainerDirective {\n\n    @Input('palTableContainer') palTableContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableContentSummaryContainerDirective.html":{"url":"directives/DynamicTableContentSummaryContainerDirective.html","title":"directive - DynamicTableContentSummaryContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableContentSummaryContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-content-summary-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableContentSummaryContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableContentSummaryContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-content-summary-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableContentSummaryContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-content-summary-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-content-summary-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableContentSummaryContainer]' })\nexport class DynamicTableContentSummaryContainerDirective {\n\n    @Input('palTableContentSummaryContainer') palTableContentSummaryContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableDataInterface.html":{"url":"interfaces/DynamicTableDataInterface.html","title":"interface - DynamicTableDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DynamicTableInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getColumns\n                                \n                                \n                                    getColumnsStyleUrl\n                                \n                                \n                                    getData\n                                \n                                \n                                    getEventPublisher\n                                \n                                \n                                    getOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnsStyleUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumnsStyleUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData(sort: string, order: string, page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sort\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        order\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEventPublisher\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEventPublisher()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-data.interface.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Array\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { DynamicTableInterface } from './dynamic-table.interface';\nimport { DynamicTableOptionInterface } from './dynamic-table-option.interface';\nimport { DynamicTableColumnInterace } from './dynamic-table-column.interface';\n\nexport interface DynamicTableDataInterface extends DynamicTableInterface {\n\n    getColumns(): Array;\n\n    getColumnsStyleUrl(): string;\n\n    getData(sort: string, order: string, page: number): Observable;\n\n    getEventPublisher(): Observable;\n\n    getOptions(): Array;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableDescriptionContainerDirective.html":{"url":"directives/DynamicTableDescriptionContainerDirective.html","title":"directive - DynamicTableDescriptionContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableDescriptionContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-description-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableDescriptionContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableDescriptionContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-description-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableDescriptionContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-description-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-description-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableDescriptionContainer]' })\nexport class DynamicTableDescriptionContainerDirective {\n\n    @Input('palTableDescriptionContainer') palTableDescriptionContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableDynamicCellBuilder.html":{"url":"injectables/DynamicTableDynamicCellBuilder.html","title":"injectable - DynamicTableDynamicCellBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableDynamicCellBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/shared/dynamic-table-dynamic-cell-builder.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/shared/dynamic-table-dynamic-cell-builder.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createColumn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createColumn(container: ViewContainerRef, htmlTemplate: string, columnsStyleUrl: string, properties: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-dynamic-cell-builder.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        htmlTemplate\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        columnsStyleUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        properties\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    Promise\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Injector, ViewContainerRef, Component, ComponentRef, OnInit, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatIconModule, MatDividerModule, MatTooltipModule, MatSlideToggleModule } from '@angular/material';\nimport { AbstractDynamicBaseService } from '../../abstract-dynamic-base.service';\n\n\n@Injectable()\nexport class DynamicTableDynamicCellBuilder extends AbstractDynamicBaseService {\n\n    constructor(private injector: Injector) {\n        super(injector);\n    }\n\n    /**\n     * @description Creates a column cell dynamically by the given parameters.\n     *\n     * @param container\n     * @param htmlTemplate\n     * @param columnsStyleUrl\n     * @param properties\n     * @returns Promise\n     */\n    public createColumn(container: ViewContainerRef, htmlTemplate: string, columnsStyleUrl: string, properties: any = {}): Promise> {\n\n        const componentOptions = {\n            selector: 'column',\n            template: htmlTemplate,\n            styles: [\n                '.icon-medium{width:32px;height:32px;font-size:32px}.icon-large{width:48px;height:48px;font-size:48px}.icon-big{width:64px;height:64px;font-size:64px}.icon-color-grey{color:#929292}.icon-color-white{color:#fff} ',\n                '// BUTTONS .button-big{height:70px}.badge-green[data-badge]:after,.badge-red[data-badge]:after,.badge-yellow[data-badge]:after{content:attr(data-badge);font-size:20px;color:#fff;width:38px;height:38px;text-align:center;line-height:38px;border-radius:30%;box-shadow:0 0 10px #333}// BADGES .badge-green{position:relative}.badge-green[data-badge]:after{position:absolute;background:green}.badge-red{position:relative}.badge-red[data-badge]:after{position:absolute;background:red}.badge-yellow{position:relative}.badge-yellow[data-badge]:after{position:absolute;background:#ff0}'\n            ]\n        };\n\n        /**\n         * @description Represents a compiled cell as a component.\n         *\n         * @param componentOptions\n         */\n        @Component(componentOptions)\n        class PalTableColumnComponent implements OnInit {\n\n            constructor() { }\n\n            ngOnInit() { }\n\n            /**\n             * @description Publishes an action to the caller component.\n             *\n             * @param action\n             * @param item\n             */\n            publishAction(action: string, item: object) {\n                properties.actionMessage.setAction(action);\n                properties.actionMessage.setItem(item);\n                properties.actionsSubject.next(properties.actionMessage);\n            }\n\n            /**\n             * @description Publishes a mouse over event to the caller component.\n             *\n             * @param mouseEvent\n             * @param  item\n             * @returns void\n             */\n            onMouseOver(mouseEvent: string, item: object): void {\n                properties.mouseEventMessage.setMouseEvent(mouseEvent);\n                properties.mouseEventMessage.setItem(item);\n                properties.mouseEventsSubject.next(properties.mouseEventMessage);\n            }\n\n            /**\n             * @description Publishes a mouse out event to the caller component.\n             *\n             * @param mouseEvent\n             * @param item\n             * @returns void\n             */\n            onMouseOut(mouseEvent: string, item: object): void {\n                properties.mouseEventMessage.setMouseEvent(mouseEvent);\n                properties.mouseEventMessage.setItem(item);\n                properties.mouseEventsSubject.next(properties.mouseEventMessage);\n            }\n        }\n        /**\n         * Module for the compiled cell.\n         */\n        @NgModule({\n            imports: [\n                CommonModule,\n                MatButtonModule,\n                MatIconModule,\n                MatDividerModule,\n                MatTooltipModule,\n                MatSlideToggleModule,\n            ],\n            declarations: [\n                PalTableColumnComponent\n            ],\n            providers: []\n        })\n        class PalTableColumnModule { }\n\n        // Create the component when the container is empty\n        if (container.length === 0) {\n            // Wait until the observable is finished\n            return this.createDynamicComponent(container, PalTableColumnModule, PalTableColumnComponent, properties);\n        }\n        return null;\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableEventDataInterface.html":{"url":"interfaces/DynamicTableEventDataInterface.html","title":"interface - DynamicTableEventDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableEventDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-event-data.interface.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        item\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DynamicTableEventDataInterface {\n\n    event: string;\n    item: object;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicTableExpressionBuilder.html":{"url":"classes/DynamicTableExpressionBuilder.html","title":"class - DynamicTableExpressionBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicTableExpressionBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/shared/dynamic-table-expression-builder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                buildGroupExpression\n                            \n                            \n                                    Static\n                                buildGroupExpressions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            buildGroupExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildGroupExpression(groupExpression: DynamicTableGroupExpressionInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-expression-builder.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupExpression\n                                                        \n                                                                    DynamicTableGroupExpressionInterface\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the build expression as a string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            buildGroupExpressions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildGroupExpressions(groupExpressions: DynamicTableGroupExpressionInterface[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-expression-builder.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupExpressions\n                                                        \n                                                                    DynamicTableGroupExpressionInterface[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Function\n\n                            \n                                \n                                    Function\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicTableGroupExpressionInterface } from '../interfaces/dynamic-table-group-expression.interface';\nimport { DynamicTableGroupInterface } from '../interfaces/dynamic-table-group.interface';\n\nexport class DynamicTableExpressionBuilder {\n\n    /**\n     * @description Builds the group expression as a string by the defined given expressions.\n     *\n     * @param groupExpression\n     * @returns the build expression as a string\n     */\n    public static buildGroupExpression(groupExpression: DynamicTableGroupExpressionInterface): string {\n        let queryString = '';\n        const group: DynamicTableGroupInterface = groupExpression.group;\n        const rules = group.rules;\n        const fieldType: string = group.fieldType;\n        queryString += '(';\n        for (const rule of rules) {\n            const operator: string = (rule)['operator'];\n            const value: string = (rule)['value'];\n            switch (operator) {\n                case '&&':\n                    queryString += ' && ';\n                    break;\n                case '||':\n                    queryString += ' || ';\n                    break;\n                case '!=':\n                    queryString += 'item[\"' + group.groupByField + '\"]' + ' != ' + value;\n                    break;\n                case '':\n                    queryString += 'item[\"' + group.groupByField + '\"]';\n                    if (fieldType === 'Date') {\n                        queryString += '.getTime()';\n                    }\n                    queryString += ' > ' + value;\n                    break;\n                case '>=':\n                    queryString += 'item[\"' + group.groupByField + '\"]';\n                    if (fieldType === 'Date') {\n                        queryString += '.getTime()';\n                    }\n                    queryString += ' >= ' + value;\n                    break;\n                case '==':\n                    queryString += 'item[\"' + group.groupByField + '\"]' + ' == ' + value;\n                    break;\n            }\n        }\n        queryString += ')';\n        return queryString;\n    }\n\n    /**\n     * @description Builds the group expression as a function by the defined given expressions.\n     *\n     * @param groupExpressions\n     * @returns Function\n     */\n    public static buildGroupExpressions(groupExpressions: DynamicTableGroupExpressionInterface[]): Function {\n        let queryString = 'return ';\n        for (let i = 0; i  0 && ((i + 1) !== groupExpressions.length)) {\n                queryString += ' ' + groupExpression.operator + ' '; // combine group expressions\n            }\n        }\n        // The first argument is the variable name which is passed to the function\n        return new Function('item', queryString);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableGroupExpressionInterface.html":{"url":"interfaces/DynamicTableGroupExpressionInterface.html","title":"interface - DynamicTableGroupExpressionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableGroupExpressionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-group-expression.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        operator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     DynamicTableGroupInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DynamicTableGroupInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicTableGroupInterface } from './dynamic-table-group.interface';\n\nexport interface DynamicTableGroupExpressionInterface {\n\n    group: DynamicTableGroupInterface;\n    operator: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableGroupInterface.html":{"url":"interfaces/DynamicTableGroupInterface.html","title":"interface - DynamicTableGroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableGroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-group.interface.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fieldType\n                                \n                                \n                                        groupByField\n                                \n                                \n                                        rules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldType\n                                    \n                                \n                                \n                                    \n                                        fieldType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupByField\n                                    \n                                \n                                \n                                    \n                                        groupByField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DynamicTableGroupInterface {\n\n    groupByField: string;\n    fieldType: string;\n    rules: Object[];\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableIconContainerDirective.html":{"url":"directives/DynamicTableIconContainerDirective.html","title":"directive - DynamicTableIconContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableIconContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-icon-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableIconContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableIconContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-icon-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableIconContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-icon-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-icon-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableIconContainer]' })\nexport class DynamicTableIconContainerDirective {\n\n    @Input('palTableIconContainer') palTableIconContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableInterface.html":{"url":"interfaces/DynamicTableInterface.html","title":"interface - DynamicTableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table.interface.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAdditionalInfo\n                                \n                                \n                                    getDescription\n                                \n                                \n                                    getHTMLAction\n                                \n                                \n                                    getHTMLContentSummary\n                                \n                                \n                                    getHTMLIcon\n                                \n                                \n                                    getIndicatorColor\n                                \n                                \n                                    getIndicatorSign\n                                \n                                \n                                    getOtherTextBased\n                                \n                                \n                                    getTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAdditionalInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAdditionalInfo(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDescription(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHTMLAction\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHTMLAction(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHTMLContentSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHTMLContentSummary(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHTMLIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHTMLIcon(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIndicatorColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIndicatorColor(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIndicatorSign\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIndicatorSign(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOtherTextBased\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOtherTextBased(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitle(item: T, rowIndex: number, groupIndex: number, groupName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table.interface.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rowIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        groupName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export interface DynamicTableInterface {\n\n    getIndicatorColor(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getIndicatorSign(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getHTMLIcon(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getTitle(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getDescription(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getHTMLContentSummary(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getAdditionalInfo(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getHTMLAction(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n    getOtherTextBased(item: T, rowIndex: number, groupIndex: number, groupName: string): string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicTableModule.html":{"url":"modules/DynamicTableModule.html","title":"module - DynamicTableModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicTableModule\n\n\n\ncluster_DynamicTableModule_declarations\n\n\n\ncluster_DynamicTableModule_exports\n\n\n\ncluster_DynamicTableModule_providers\n\n\n\n\nDynamicTableActionsContainerDirective\n\nDynamicTableActionsContainerDirective\n\n\n\nDynamicTableModule\n\nDynamicTableModule\n\nDynamicTableModule -->\n\nDynamicTableActionsContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableColumnsContainerDirective\n\nDynamicTableColumnsContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableColumnsContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableComponent\n\nDynamicTableComponent\n\nDynamicTableModule -->\n\nDynamicTableComponent->DynamicTableModule\n\n\n\n\n\nDynamicTableContainerDirective\n\nDynamicTableContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableContentSummaryContainerDirective\n\nDynamicTableContentSummaryContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableContentSummaryContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableDescriptionContainerDirective\n\nDynamicTableDescriptionContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableDescriptionContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableIconContainerDirective\n\nDynamicTableIconContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableIconContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableTitleContainerDirective\n\nDynamicTableTitleContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableTitleContainerDirective->DynamicTableModule\n\n\n\n\n\nPalTableAdditionalInfoContainerDirective\n\nPalTableAdditionalInfoContainerDirective\n\nDynamicTableModule -->\n\nPalTableAdditionalInfoContainerDirective->DynamicTableModule\n\n\n\n\n\nTableInstanceComponent\n\nTableInstanceComponent\n\nDynamicTableModule -->\n\nTableInstanceComponent->DynamicTableModule\n\n\n\n\n\nDynamicTableActionsContainerDirective \n\nDynamicTableActionsContainerDirective \n\nDynamicTableActionsContainerDirective  -->\n\nDynamicTableModule->DynamicTableActionsContainerDirective \n\n\n\n\n\nDynamicTableComponent \n\nDynamicTableComponent \n\nDynamicTableComponent  -->\n\nDynamicTableModule->DynamicTableComponent \n\n\n\n\n\nDynamicTableContainerDirective \n\nDynamicTableContainerDirective \n\nDynamicTableContainerDirective  -->\n\nDynamicTableModule->DynamicTableContainerDirective \n\n\n\n\n\nDynamicTableContentSummaryContainerDirective \n\nDynamicTableContentSummaryContainerDirective \n\nDynamicTableContentSummaryContainerDirective  -->\n\nDynamicTableModule->DynamicTableContentSummaryContainerDirective \n\n\n\n\n\nDynamicTableDescriptionContainerDirective \n\nDynamicTableDescriptionContainerDirective \n\nDynamicTableDescriptionContainerDirective  -->\n\nDynamicTableModule->DynamicTableDescriptionContainerDirective \n\n\n\n\n\nDynamicTableIconContainerDirective \n\nDynamicTableIconContainerDirective \n\nDynamicTableIconContainerDirective  -->\n\nDynamicTableModule->DynamicTableIconContainerDirective \n\n\n\n\n\nDynamicTableTitleContainerDirective \n\nDynamicTableTitleContainerDirective \n\nDynamicTableTitleContainerDirective  -->\n\nDynamicTableModule->DynamicTableTitleContainerDirective \n\n\n\n\n\nPalTableAdditionalInfoContainerDirective \n\nPalTableAdditionalInfoContainerDirective \n\nPalTableAdditionalInfoContainerDirective  -->\n\nDynamicTableModule->PalTableAdditionalInfoContainerDirective \n\n\n\n\n\nTableInstanceComponent \n\nTableInstanceComponent \n\nTableInstanceComponent  -->\n\nDynamicTableModule->TableInstanceComponent \n\n\n\n\n\nDynamicTableDataProvider\n\nDynamicTableDataProvider\n\nDynamicTableModule -->\n\nDynamicTableDataProvider->DynamicTableModule\n\n\n\n\n\nDynamicTableDynamicCellBuilder\n\nDynamicTableDynamicCellBuilder\n\nDynamicTableModule -->\n\nDynamicTableDynamicCellBuilder->DynamicTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/dynamic-table/dynamic-table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Root module container dedicated to the dynamic table domain, workflow and a set of capabilities.\nIt contains components, service providers, and other code files whose scope is defined by the DynamicTableModule.\nAdditionally it imports functionality that is exported from other modules, and exports selected functionality for use by other modules.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicTableActionsContainerDirective\n                            \n                            \n                                DynamicTableColumnsContainerDirective\n                            \n                            \n                                DynamicTableComponent\n                            \n                            \n                                DynamicTableContainerDirective\n                            \n                            \n                                DynamicTableContentSummaryContainerDirective\n                            \n                            \n                                DynamicTableDescriptionContainerDirective\n                            \n                            \n                                DynamicTableIconContainerDirective\n                            \n                            \n                                DynamicTableTitleContainerDirective\n                            \n                            \n                                PalTableAdditionalInfoContainerDirective\n                            \n                            \n                                TableInstanceComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicTableDataProvider\n                            \n                            \n                                     DynamicTableDynamicCellBuilder\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicTableActionsContainerDirective\n                            \n                            \n                                    DynamicTableComponent\n                            \n                            \n                                    DynamicTableContainerDirective\n                            \n                            \n                                    DynamicTableContentSummaryContainerDirective\n                            \n                            \n                                    DynamicTableDescriptionContainerDirective\n                            \n                            \n                                    DynamicTableIconContainerDirective\n                            \n                            \n                                    DynamicTableTitleContainerDirective\n                            \n                            \n                                    PalTableAdditionalInfoContainerDirective\n                            \n                            \n                                    TableInstanceComponent\n                            \n                    \n                \n                \n                    Schemas\n                    \n                            \n                                NO_ERRORS_SCHEMA\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*******************************************************************\n * NGX-DYNAMIC-MATERIAL-TABLE                                      *\n * @description Create fancy and complex tables dynamically        *\n * @file DynamicTableModule                                        *\n * @author Gökhan Sari -                   *\n * @copyright Arpage AG, 2018                                      *\n *******************************************************************/\nimport { NgModule, NO_ERRORS_SCHEMA, ModuleWithProviders, } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport {\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatSortModule, MatButtonModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n} from '@angular/material';\nimport { DynamicTableDataProvider } from './shared/dynamic-table-data-provider';\nimport { DynamicTableActionsContainerDirective } from './directives/dynamic-table-actions-container.directive';\nimport { DynamicTableIconContainerDirective } from './directives/dynamic-table-icon-container.directive';\nimport { DynamicTableContentSummaryContainerDirective } from './directives/dynamic-table-content-summary-container.directive';\nimport { DynamicTableActionMessageService } from './services/dynamic-table-action-message.service';\nimport { PalTableAdditionalInfoContainerDirective } from './directives/dynamic-table-additional-info-container.directive';\nimport { DynamicTableDescriptionContainerDirective } from './directives/dynamic-table-description-container.directive';\nimport { DynamicTableColumnsContainerDirective } from './directives/dynamic-table-columns.directive';\nimport { DynamicTableContainerDirective } from './directives/dynamic-table.directive';\nimport { DynamicTableTitleContainerDirective } from './directives/dynamic-table-title-container.directive';\nimport { DynamicTableDynamicCellBuilder } from './shared/dynamic-table-dynamic-cell-builder';\nimport { TableInstanceComponent } from './table/table-instance.component';\nimport { DynamicTableComponent } from './dynamic-table.component';\nimport { DynamicTableMouseEventMessageService } from './services/dynamic-table-mouse-event-message.service';\n\n/**\n * Root module container dedicated to the dynamic table domain, workflow and a set of capabilities.\n * It contains components, service providers, and other code files whose scope is defined by the DynamicTableModule.\n * Additionally it imports functionality that is exported from other modules, and exports selected functionality for use by other modules.\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCardModule,\n        MatToolbarModule,\n        MatSlideToggleModule\n    ],\n    schemas: [NO_ERRORS_SCHEMA],\n    declarations: [\n        TableInstanceComponent,\n        DynamicTableComponent,\n        DynamicTableColumnsContainerDirective,\n        DynamicTableIconContainerDirective,\n        DynamicTableContainerDirective,\n        DynamicTableActionsContainerDirective,\n        DynamicTableContentSummaryContainerDirective,\n        PalTableAdditionalInfoContainerDirective,\n        DynamicTableDescriptionContainerDirective,\n        DynamicTableTitleContainerDirective\n    ],\n    exports: [\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCardModule,\n        MatToolbarModule,\n        MatSlideToggleModule,\n        TableInstanceComponent,\n        DynamicTableComponent,\n        DynamicTableContainerDirective,\n        DynamicTableIconContainerDirective,\n        DynamicTableActionsContainerDirective,\n        DynamicTableContentSummaryContainerDirective,\n        PalTableAdditionalInfoContainerDirective,\n        DynamicTableDescriptionContainerDirective,\n        DynamicTableTitleContainerDirective,\n    ],\n    entryComponents: [],\n    providers: [\n        DynamicTableDataProvider,\n        DynamicTableDynamicCellBuilder,\n    ],\n\n})\nexport class DynamicTableModule {\n\n    /**\n     * Singleton services\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DynamicTableModule,\n            providers: [\n                DynamicTableActionMessageService,\n                DynamicTableMouseEventMessageService\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableMouseEventMessageService.html":{"url":"injectables/DynamicTableMouseEventMessageService.html","title":"injectable - DynamicTableMouseEventMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableMouseEventMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                getMouseEvent\n                            \n                            \n                                    Public\n                                getPubisher\n                            \n                            \n                                    Public\n                                setItem\n                            \n                            \n                                    Public\n                                setMouseEvent\n                            \n                            \n                                    Public\n                                setPublisher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMouseEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMouseEvent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPubisher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPubisher()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItem(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setMouseEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setMouseEvent(mouseEvent: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mouseEvent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setPublisher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setPublisher(publisher: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/services/dynamic-table-mouse-event-message.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class DynamicTableMouseEventMessageService {\n\n    private mouseEvent: string;\n    private item: T;\n    private publisher: Observable;\n\n    public setMouseEvent(mouseEvent: string): void {\n        this.mouseEvent = mouseEvent;\n    }\n\n    public getMouseEvent(): string {\n        return this.mouseEvent;\n    }\n\n    public setItem(item: T): void {\n        this.item = item;\n    }\n\n    public getItem(): T {\n        return this.item;\n    }\n\n    public setPublisher(publisher: Observable) {\n        this.publisher = publisher;\n    }\n\n    public getPubisher() {\n        return this.publisher;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicTableOptionInterface.html":{"url":"interfaces/DynamicTableOptionInterface.html","title":"interface - DynamicTableOptionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicTableOptionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-option.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columnOptions\n                                \n                                \n                                        groupExpressions\n                                \n                                \n                                        groupItemRowColor\n                                \n                                \n                                        groupName\n                                \n                                \n                                        hideColumns\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnOptions\n                                    \n                                \n                                \n                                    \n                                        columnOptions:     DynamicTableColumnInterace[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DynamicTableColumnInterace[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupExpressions\n                                    \n                                \n                                \n                                    \n                                        groupExpressions:     DynamicTableGroupExpressionInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DynamicTableGroupExpressionInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupItemRowColor\n                                    \n                                \n                                \n                                    \n                                        groupItemRowColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                    \n                                \n                                \n                                    \n                                        groupName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideColumns\n                                    \n                                \n                                \n                                    \n                                        hideColumns:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicTableGroupExpressionInterface } from './dynamic-table-group-expression.interface';\nimport { DynamicTableColumnInterace } from './dynamic-table-column.interface';\n\nexport interface DynamicTableOptionInterface {\n\n    groupName: string;\n    groupExpressions: DynamicTableGroupExpressionInterface[];\n    groupItemRowColor: string;\n    hideColumns: boolean;\n    columnOptions: DynamicTableColumnInterace[];\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTableTitleContainerDirective.html":{"url":"directives/DynamicTableTitleContainerDirective.html","title":"directive - DynamicTableTitleContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicTableTitleContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-title-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableTitleContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableTitleContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-title-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableTitleContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-title-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-title-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableTitleContainer]' })\nexport class DynamicTableTitleContainerDirective {\n\n    @Input('palTableTitleContainer') palTableTitleContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicTableUIUtils.html":{"url":"classes/DynamicTableUIUtils.html","title":"class - DynamicTableUIUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicTableUIUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts\n        \n\n            \n                Description\n            \n            \n                \nNGX-DYNAMIC-MATERIAL-TABLE                                      *\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createAngularAction\n                            \n                            \n                                    Static\n                                createAngularMouseOutEvent\n                            \n                            \n                                    Static\n                                createAngularMouseOverEvent\n                            \n                            \n                                    Static\n                                createHTMLAction\n                            \n                            \n                                    Static\n                                createMiniFabButton\n                            \n                            \n                                    Static\n                                createMouseOutEvent\n                            \n                            \n                                    Static\n                                createMouseOverEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createAngularAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAngularAction(action: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createAngularMouseOutEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAngularMouseOutEvent(mouseOutEvent: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mouseOutEvent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createAngularMouseOverEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAngularMouseOverEvent(mouseOverEvent: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mouseOverEvent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createHTMLAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createHTMLAction(action: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createMiniFabButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMiniFabButton(matColor: string, value: string, backgroundColor: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        matColor\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        backgroundColor\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createMouseOutEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMouseOutEvent(mouseOutEvent: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mouseOutEvent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createMouseOverEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMouseOverEvent(mouseOverEvent: string, item: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table-ui.utils.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mouseOverEvent\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class DynamicTableUIUtils {\n\n    /**\n     * @description Creates a dynamic table conform action.\n     *\n     * @param action\n     * @param item\n     * @returns string\n     */\n    public static createHTMLAction(action: string, item: object): string {\n        return 'publishAction(\\'' + action + '\\', item)';\n    }\n\n    /**\n     * @description Creates an angular and dynamic table conform action.\n     *\n     * @param action\n     * @param item\n     * @returns string\n     */\n    public static createAngularAction(action: string, item: object): string {\n        return '(click)=\"' + this.createHTMLAction(action, item) + '\"';\n    }\n\n    /**\n     * @description Creates a dynamic table conform mouse over event.\n     *\n     * @param  mouseOverEvent\n     * @param  item\n     * @returns string\n     */\n    public static createMouseOverEvent(mouseOverEvent: string, item: object): string {\n        return 'onMouseOver(\\'' + mouseOverEvent + '\\', item)';\n    }\n\n    /**\n     * @description Creates an angular and dynamic table conform mouse over event.\n     *\n     * @param  mouseOverEvent\n     * @param  item\n     * @returns string\n     */\n    public static createAngularMouseOverEvent(mouseOverEvent: string, item: object): string {\n        return '(mouseover)=\"' + this.createMouseOverEvent(mouseOverEvent, item) + '\"';\n    }\n\n    /**\n     * @description Creates a dynamic table conform mouse out event.\n     *\n     * @param mouseOutEvent\n     * @param item\n     * @returns string\n     */\n    public static createMouseOutEvent(mouseOutEvent: string, item: object): string {\n        return 'onMouseOut(\\'' + mouseOutEvent + '\\', item)';\n    }\n\n    /**\n     * @description Creates an angular and dynamic table conform mouse out event.\n     *\n     * @param mouseOutEvent\n     * @param item\n     * @returns string\n     */\n    public static createAngularMouseOutEvent(mouseOutEvent: string, item: object): string {\n        return '(mouseout)=\"' + this.createMouseOutEvent(mouseOutEvent, item) + '\"';\n    }\n\n    /**\n     * @description Creates a dynamic table conform mini fab button.\n     *\n     * @param matColor\n     * @param value\n     * @param backgroundColor\n     * @returns string\n     */\n    public static createMiniFabButton(matColor: string, value: string, backgroundColor: string = null): string {\n        let miniFabButton: string;\n        miniFabButton = '' + value + ' ';\n        return miniFabButton;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicTableUtils.html":{"url":"classes/DynamicTableUtils.html","title":"class - DynamicTableUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicTableUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/shared/dynamic-table.utils.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertToColumnIds\n                            \n                            \n                                    Static\n                                convertToColumnNames\n                            \n                            \n                                    Static\n                                getColumnById\n                            \n                            \n                                    Static\n                                getColumnNameById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            convertToColumnIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToColumnIds(columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table.utils.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            convertToColumnNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToColumnNames(columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table.utils.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getColumnById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColumnById(columnId: string, columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table.utils.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicTableColumnInterace\n\n                            \n                                \n                                    DynamicTableColumnInterace\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getColumnNameById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColumnNameById(columnId: string, columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/shared/dynamic-table.utils.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicTableColumnInterace } from '../interfaces/dynamic-table-column.interface';\n\n/**\n * @description Contains common functions related to the dynamic table.\n */\nexport class DynamicTableUtils {\n\n    /**\n     * @description Converts columns to a list of column ids.\n     *\n     * @param columns\n     * @returns string\n     */\n    public static convertToColumnIds(columns: Array): string[] {\n        const columnIds: string[] = [];\n        if (columns != null) {\n            for (const palTableColumn of columns) {\n                for (const column of palTableColumn.columns) {\n                    columnIds.push(column);\n                }\n            }\n        }\n        return columnIds;\n    }\n\n    /**\n     * @description Converts columns to a list of column names.\n     *\n     * @param columns\n     * @returns string\n     */\n    public static convertToColumnNames(columns: Array): string[] {\n        const columnNames: string[] = [];\n        if (columns != null) {\n            for (const palTableColumn of columns) {\n                for (const name of palTableColumn.names) {\n                    columnNames.push(name);\n                }\n            }\n        }\n        return columnNames;\n    }\n\n    /**\n     * @description Retrieves the column name by the given columnId.\n     *\n     * @param  columnId\n     * @param  columns\n     * @returns string\n     */\n    public static getColumnNameById(columnId: string, columns: Array): string {\n        if (columns != null) {\n            for (const palTableColumn of columns) {\n                for (let i = 0; i ): DynamicTableColumnInterace {\n        if (columns != null) {\n            for (const palTableColumn of columns) {\n                for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PalTableAdditionalInfoContainerDirective.html":{"url":"directives/PalTableAdditionalInfoContainerDirective.html","title":"directive - PalTableAdditionalInfoContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PalTableAdditionalInfoContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/directives/dynamic-table-additional-info-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                Indicates the container name where the generated HTML will be injected.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [palTableAdditionalInfoContainer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palTableAdditionalInfoContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/dynamic-table/directives/dynamic-table-additional-info-container.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        palTableAdditionalInfoContainer\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-additional-info-container.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/dynamic-table/directives/dynamic-table-additional-info-container.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n/**\n * Indicates the container name where the generated HTML will be injected.\n */\n@Directive({ selector: '[palTableAdditionalInfoContainer]' })\nexport class PalTableAdditionalInfoContainerDirective {\n\n    @Input('palTableAdditionalInfoContainer') palTableAdditionalInfoContainer: string;\n\n    constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsingDynamicTableComponent.html":{"url":"interfaces/UsingDynamicTableComponent.html","title":"interface - UsingDynamicTableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsingDynamicTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dynamic-table/interfaces/dynamic-table-component.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handleDynamicTableActions\n                                \n                                \n                                    handleDynamicTableMouseOutEvents\n                                \n                                \n                                    handleDynamicTableMouseOverEvents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleDynamicTableActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleDynamicTableActions(publisher: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-component.interface.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleDynamicTableMouseOutEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleDynamicTableMouseOutEvents(publisher: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-component.interface.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleDynamicTableMouseOverEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleDynamicTableMouseOverEvents(publisher: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/dynamic-table/interfaces/dynamic-table-component.interface.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface UsingDynamicTableComponent {\n\n    handleDynamicTableActions(publisher: Observable): void;\n\n    handleDynamicTableMouseOverEvents(publisher: Observable): void;\n\n    handleDynamicTableMouseOutEvents(publisher: Observable): void;\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.2.5\n\nAdded tutorial pictures\n\n0.2.4\n\nDocumented the library and added tutorials\nAdded DynamicTableExpressionBuilder, an expression builder for table groups\nAdded DynamicTableUIUtils class for easily creation of dynamic table conform UI components.\n\n0.2.3\n\nfixed data loading bug\n\n0.2.2\n\nfixed several bugs and added theming support\n\n0.2.1\n\nchanged packaging to ng-packgr provided by the angular cli\n\n0.2.0\n\nfurther enhancements on generated folder structure\n\n0.1.9\n\nfurther enhancements on generated folder structure\n\n0.1.8\n\nenhanced generated file folder structure\n\n0.1.7\n\nadded declaration file for module\n\n0.1.6\n\nchanged transpile to typescript\n\n0.1.5\n\nexcluded dependencies from rollup\n\n0.1.4\n\nchanged rollup configs\n\n0.1.3\n\nmerged all index files to a single index.ts file\n\n0.1.2\n\nadapted index.ts files\n\n0.1.1\n\nadded styles which can be found in src/dynamic-table-styles.scss\n\n0.1.0\n\ndraft implementation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nGökhan Sari\ng-sari@g-sari.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : >=6.1.9\n        \n            @angular/common : >=6.1.9\n        \n            @angular/compiler : >=6.1.9\n        \n            @angular/core : >=6.1.9\n        \n            @angular/forms : >=6.1.9\n        \n            @angular/http : >=6.1.9\n        \n            @angular/platform-browser : >=6.1.9\n        \n            @angular/platform-browser-dynamic : >=6.1.9\n        \n            @angular/material : >=6.4.7\n        \n            @angular/router : >=6.1.9\n        \n            core-js : >=2.5.7\n        \n            rxjs : >=6.3.3\n        \n            zone.js : >=0.8.26\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-dynamic-material-table\nCreate fancy and complex tables dynamically and very rapidly.\nTable of Contents\nWhat is it?FeaturesInstallationSetupTutorialsDevelopment\n\nWhat is it?\n\nWhy: The table is a core element, and used almost on every page to display a list of data, which means without having a library or widget, you will have multiple tables and duplicate implementations. Actually the table functionalities are always the same, it defers only in design and content.\nProblem: If you have ever used the angular material table, you already faced to the problem, that only strings can be displayed dynamically inside of a cell. Of course you can add a component inside of your template, but this component will be displayed for each row, which means you will always see the same component in the cell for each data row. In other words it's not possible to display different components for each data row in a cell. \nSolution: With the dynamic material table, it's now very easy to create complex dynamic tables.\n\n\n\nFeatures\n\nAdd dynamically rendered components/html to the cells for each data row.\nExpandable rows up to 3 levels.\nDefine column names and customized column ids.\nPass data as an array into the table.\n8 predefined common cells/columns, which can be overriden.\nAutomatically group data by the given groups.\nPossibility to define table options for each defined group.\nEvents based communication with the host component.\nCustomize table style by overriding predefined/generated css classes.\n\n\nInstallation\nnpm install ngx-dynamic-material-table --save\nSetup\nImport DynamicTableModule and forRoot() to your module as shown below, where you want to use the table.\nimport { NgModule } from '@angular/core';\nimport { DynamicTableModule, DynamicTableDataProvider } from 'ngx-dynamic-material-table';\n\n@NgModule({\n    imports: [\n        DynamicTableModule,\n        DynamicTableModule.forRoot()\n    ],\n    declarations: [],\n})\nexport class YourModule { }Tutorials\nFollow the tutorials below to learn how to use the dynamic table in your project.\n\nDynamic table\n(simple basic table example)\n\nIn our example we are going to create a table, where we can display a list of persons, with some actions, icons and some additional data, see the picture below:\n\n\nCreate a new angular component i.e. PersonsListComponent or if you already have created a component, go to your component folder. Example component code:\n\n@Component({\n    selector: 'persons-list-component',\n    templateUrl: './persons-list.component.html',\n    styleUrls: ['./persons-list.component.scss']\n})\nexport class PersonsListComponent {\n    // your component's logic\n}\nCreate inside the folder a new injectable angular service i.e in our example we're going to name it persons-list-data-provider.ts.\nExtend your created data provider service by the class AbstractDynamicTableDataProvider.\nChange the generic  to your data type, you're using in your data array i.e.  or a general .\nImplement all inherited abstract functions from AbstractDynamicTableDataProvider i.e. see the code below for an example and descriptions:\nAt the end our example persons list data provider should look like in the code below:\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n    DynamicTableOptionInterface,\n    DynamicTableColumnDefinitionConstants,\n    DynamicTableColumnInterace,\n    AbstractDynamicTableDataProvider,\n    DynamicTableUIUtils\n} from 'ngx-dynamic-material-table';\n\n@Injectable()\nexport class PersonsListDataProvider extends AbstractDynamicTableDataProvider {\n\n    public static readonly ACTION_SELECT_PATIENT = 'selectPatient';\n    public static readonly ACTION_DEACTIVATE_PATIENT = 'deactivatePatient';\n    public static readonly ACTION_SHOW_PATIENT_COLORS = 'showPatientColors';\n\n    constructor(private colorsHelperService: ColorsHelperService, private personAPIService: PersonAPIService) { super(); }\n\n     // Defines and gets the columns displayed in the persons list table.\n    getColumns(): DynamicTableColumnInterace[] {\n        const columns = [\n            { columns: [DynamicTableColumnDefinitionConstants.HTML_ICON], names: ['Icon'], backgroundColor: null },\n            { columns: [DynamicTableColumnDefinitionConstants.TITLE], names: ['Person name'], backgroundColor: null },\n            { columns: [DynamicTableColumnDefinitionConstants.HTML_CONTENT_SUMMARY], names: ['Colors'], backgroundColor: null },\n            { columns: [DynamicTableColumnDefinitionConstants.HTML_ACTIONS], names: ['Actions'], backgroundColor: null }\n        ];\n        return columns;\n    }\n\n    // Retrieves the persons data displayed as row items inside of the table.\n    getData(sort: string, order: string, page: number): Observable {\n        return this.personAPIService.loadPatients();\n    }\n\n    // Retrieves the icon displayed for each person item.\n    getHTMLIcon(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return 'person';\n    }\n\n    // Retrieves the first and lastname for each person item.\n    getTitle(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return item['lastName'] + ' ' + item['firstName'];\n    }\n\n    // Retrieves assigned person colors as material fab buttons.\n    getHTMLContentSummary(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        const stringBuffer = new StringBuffer();\n        const flags = item['flags'];\n        const splittedFlags = (flags != null && flags !== '') ? flags.split(',') : [];\n        for (const flagId of splittedFlags) {\n            const colorId = parseInt(flagId, 10);\n            const mappedColor: Color = this.colorsHelperService.getColor(colorId);\n            const orgColor: OrgColor = this.colorsHelperService.getOrgColorById(colorId);\n            const colorDescription = (orgColor !== null) ? orgColor['colorDesc'] : 'N/A';\n            stringBuffer.append(\n                ' '\n            );\n        }\n        return stringBuffer.toString();\n    }\n\n    // Retrieves the actions for each person item in the table.\n    getHTMLAction(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        const stringBuffer = new StringBuffer();\n        // First action: Go to person details\n        stringBuffer.append('');\n        stringBuffer.append('play_arrow');\n        stringBuffer.append('');\n        stringBuffer.append(' ');\n        // Second action: Open colors dialog/modal\n        stringBuffer.append('');\n        stringBuffer.append('palette');\n        stringBuffer.append('');\n        stringBuffer.append(' ');\n        // Third action: Deactivate/delete person\n        stringBuffer.append('');\n        stringBuffer.append('do_not_disturb');\n        stringBuffer.append('');\n        return stringBuffer.toString();\n    }\n\n    /////////////////////// Undefined columns/cells ///////////////////////\n\n    // Predefined column IndicatorColor: Retrieves the color for each data row/item, where i.e. an enumeration can be displayed like 1. row, 2. row, 3. row etc.\n    getIndicatorColor(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return null;\n    }\n\n    // Predefined column IndicatorSign: Retrieves the sign for each data row/item, where i.e. an enumeration can be displayed. This sign could be i.e. a number or a letter.\n    getIndicatorSign(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return null;\n    }\n\n    // Predefined column AdditionalInfo: Retrieves the additional info for each data row/item.\n    getAdditionalInfo(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return null;\n    }\n\n    // Predefined column Description: Retrieves the description for each data row/item.\n    getDescription(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return null;\n    }\n\n    // Predefined column OtherTextBased: Retrieves an other text based cell for each data row/item.\n    getOtherTextBased(item: Object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return null;\n    }\n\n    // Retrieves table options incl. grouping of data. Return null, if you don't want to group data.\n    getOptions(): DynamicTableOptionInterface[] {\n        return null;\n    }\n}\nAs you can see each predefined column can be overriden and the UI logic can be defined inside of the predefined columns.\nOur persons list is almost done, we now need to provide our PersonsListDataProvider as a data provider for our table.\nGo to your module where your component is declared, and define the PersonsListDataProvider like in the code below, see especially the providers[] section:\n\nimport { NgModule } from '@angular/core';\nimport { DynamicTableModule, DynamicTableDataProvider } from 'ngx-dynamic-material-table';\n\n@NgModule({\n    imports: [\n        DynamicTableModule,\n        DynamicTableModule.forRoot()\n    ],\n    declarations: [\n        PersonsListComponent\n    ],\n    providers: [\n        PersonsListDataProvider,\n        { provide: DynamicTableDataProvider, useExisting: PersonsListDataProvider },\n    ],\n})\nexport class YourModule { }\nFinally add to your component html template in our case persons-list.component.html the following code snippet:\n\n\nSo we are done, our table is now ready to be displayed using our defined data provider.\nHandle actions: What should happen, when we click on an action inside of a row. Handling of actions belongs to the list component and not to the data provider, hence implement in your component i.e. in our example  PatientsListComponent the generic interface UsingDynamicTableComponent like in the code below:\n\nimport { Component, AfterViewInit } from '@angular/core';\nimport { PatientListDataProvider } from './patient-list-data-provider';\nimport { UsingDynamicTableComponent, DynamicTableActionMessageService } from 'ngx-dynamic-material-table';\n\n@Component({\n    selector: 'persons-list-component',\n    templateUrl: './persons-list.component.html',\n    styleUrls: ['./persons-list.component.scss']\n})\nexport class PersonsListComponent implements AfterViewInit, UsingDynamicTableComponent { \n\n    constructor(\n        private dynamicTableActionMessageService: DynamicTableActionMessageService,\n        private patientListDataProvider: PatientListDataProvider,\n    ) {}\n\n    ngAfterViewInit() {\n        this.handleDynamicTableActions(this.dynamicTableActionMessageService.getPubisher());\n    }\n\n    // Handles actions published by the dynamic table\n    handleDynamicTableActions(publisher: Observable): void {\n        publisher.subscribe(\n            (actionMessage: DynamicTableActionMessageService) => {\n                switch (actionMessage.getAction()) {\n                    case PatientListDataProvider.ACTION_SELECT_PATIENT:\n                        this.selectPerson(actionMessage.getItem());\n                        break;\n                    case PatientListDataProvider.ACTION_DEACTIVATE_PATIENT:\n                        this.deactivatePerson(actionMessage.getItem());\n                        break;\n                    case PatientListDataProvider.ACTION_SHOW_PATIENT_COLORS:\n                        this.openPersonColorsDialog(actionMessage.getItem());\n                        break;\n                }\n            }\n        );\n    }\n\n}\nDynamic expandable table\n(extended complex table example)\n\nIn this example we are going to create a complex table, where we can display a list of prescribed drugs, with a lot of columns, several groups, up to 3 levels expandable rows, several actions, different colors for several rows and cells, a customized style and several group options, see the picture below:\n\n\nCreate a new angular component i.e. DrugsListComponent or if you already have created a component, go to your component folder. Example component code:\n\n@Component({\n    selector: 'drugs-list-component',\n    templateUrl: './drugs-list.component.html',\n    styleUrls: ['./drugs-list.component.scss']\n})\nexport class DrugsListComponent {\n    // your component's logic\n}\nCreate inside the folder a new injectable angular service i.e in our example we're going to name it drugs-expandable-table-data-provider.ts.\nExtend your created data provider service by the class AbstractDynamicExpandableTableDataProvider.\nChange the generic  to your data type, you're using in your data array i.e.  or a general .\nImplement all inherited abstract functions from AbstractDynamicExpandableTableDataProvider i.e. see the code below for descriptions and explanations:\nAt the end our example drugs expandable table data provider should look like in the code below:\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n    AbstractDynamicExpandableTableDataProvider,\n    DynamicExpandableTableColumnDefinitionConstants,\n    DynamicExpandableTableExpandedItemColumnInterace,\n    DynamicTableColumnInterace,\n    DynamicExpandableTableOptionInterface,\n    DynamicTableGroupInterface,\n    DynamicTableUIUtils\n} from 'ngx-dynamic-material-table';\n\n@Injectable()\nexport class DrugsExpandableTableDataProvider extends AbstractDynamicExpandableTableDataProvider {\n\n    public static readonly MOUSE_OVER_EVENT_SHOW_DRUG_PACKAGE = 'showDrugPackageOnMouseOver';\n    public static readonly MOUSE_OUT_EVENT_HIDE_DRUG_PACKAGE = 'hideDrugPackageOnMouseOut';\n    public static readonly ACTION_EDIT_DRUG = 'editSelectedDrug';\n    private static readonly GROUP_NAME_1 = 'Requested drugs';\n    private static readonly GROUP_NAME_2 = 'Active drugs';\n    private static readonly GROUP_NAME_3 = 'Reserved drugs';\n    private static readonly GROUP_NAME_4 = 'Rejected drugs';\n    private static readonly GROUP_NAME_5 = 'Expired drugs';\n    private expandedItemTableData: Object[] = this.createExpandedItemData(); // 1. level expanded row data\n\n    constructor(private drugsService: DrugsService, private userService: UserService) { super(); }\n\n    // Defines and gets the columns displayed in the drugs list table.\n    getColumns(): DynamicTableColumnInterace[] {\n        return [\n            this.iconColumnDefinition,\n            { columns: [DynamicExpandableTableColumnDefinitionConstants.DESCRIPTION], names: ['ATC Code'], backgroundColor: null },\n            { columns: [DynamicExpandableTableColumnDefinitionConstants.HTML_CONTENT_SUMMARY], names: ['Drug Name'], backgroundColor: null },\n            { columns: [DynamicExpandableTableColumnDefinitionConstants.HTML_ICON], names: ['Drug Icon'], backgroundColor: null },\n            {\n                columns:\n                    [\n                        DynamicExpandableTableColumnDefinitionConstants.OTHER_TEXT_BASED1,\n                        DynamicExpandableTableColumnDefinitionConstants.OTHER_TEXT_BASED2,\n                        DynamicExpandableTableColumnDefinitionConstants.OTHER_TEXT_BASED3,\n                        DynamicExpandableTableColumnDefinitionConstants.OTHER_TEXT_BASED4,\n                    ],\n                names: ['Morning', 'Noon', 'Evening', 'Night'], backgroundColor: null\n            },\n            { columns: [DynamicExpandableTableColumnDefinitionConstants.TITLE], names: ['Drug Administration'], backgroundColor: null },\n            this.expandableColumn,\n            { columns: [DynamicExpandableTableColumnDefinitionConstants.HTML_ACTIONS], names: ['Actions'], backgroundColor: '#4AC3FC' }\n        ];\n    }\n\n    // Retrieves the drugs data displayed as row items inside of the table.\n    getData(sort: string, order: string, page: number): Observable {\n        return this.drugsService.loadDrugs('de');\n    }\n\n    // Retrieves an individual icon for each groups icon cell\n    getAdditionalInfo(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        const stringBuffer = new StringBuffer();\n        if (groupName === EMedisExpandableTableDataProvider.GROUP_NAME_1 && groupIndex === 0) {\n            stringBuffer.append('');\n        } else if (groupName === EMedisExpandableTableDataProvider.GROUP_NAME_2 && groupIndex === 1) {\n            stringBuffer.append('');\n        } else if (groupName === EMedisExpandableTableDataProvider.GROUP_NAME_3 && groupIndex === 2) {\n            stringBuffer.append('');\n        } else if (groupName === EMedisExpandableTableDataProvider.GROUP_NAME_4 && groupIndex === 3) {\n            stringBuffer.append('');\n        }\n        return stringBuffer.toString();\n    }\n\n    // Retrieves the drug's pill image and a functionality to show the drug package inside a modal window on mouse over\n    getHTMLIcon(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        const stringBuffer = new StringBuffer();\n        stringBuffer.append('');\n        return stringBuffer.toString();\n    }\n\n    // Retrieves the intake direction (after the meal) and drugs administrator route (per oral) information\n    getTitle(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        let title = '' + this.eMedisTranslationsService.getWhenTranslatedText(item) + '';\n        title += '' + item['_medicationAdministrationDescription'] + '';\n        return title;\n    }\n\n    // Retrieves the substances of a drug (i.e. paracetamol)\n    getDescription(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        return '' + DrugsUtils.getAtcDescriptionByCode(this.atcCodes, item['medinfo']['_atc']) + '';\n    }\n\n    // Retrieves the substances of a drug (i.e. paracetamol) \n    getHTMLContentSummary(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        let description = '' + item['medinfo']['dscr'] + '';\n        const substances = item['medinfo']['subst'];\n        if (substances != null && substances.length > 0) {\n            description += '' + EMedisUtils.convertSubstancesToString(substances) + '';\n        }\n        return description;\n    }\n\n    // Retrieves additional text based columns\n    getOtherTextBased(item: object, columnIndex: number, groupIndex: number, groupName: string): string {\n        const unit = item['medinfo']['_qtyu'];\n        if (columnIndex === 1) {\n            return item['_morning'];\n        } else if (columnIndex === 2) {\n            return item['_noon'];\n        } else if (columnIndex === 3) {\n            return item['_evening'];\n        } else if (columnIndex === 4) {\n            return item['_night'];\n        }\n        return '';\n    }\n\n    // Retrieves the actions for each drug itemn and group. (i.e. for the first group we return a slide toggle button)\n    getHTMLAction(item: object, rowIndex: number, groupIndex: number, groupName: string): string {\n        const stringBuffer = new StringBuffer();\n        if (groupName === DrugsListDataProvider.GROUP_NAME_1 && groupIndex === 0) {\n            stringBuffer.append('');\n        } else {\n            stringBuffer.append('');\n            stringBuffer.append('edit');\n            stringBuffer.append('');\n        }\n        return stringBuffer.toString();\n    }\n\n    // Defines and retrieves options for several table groups \n    getOptions(): DynamicExpandableTableOptionInterface[] {\n        const options: DynamicExpandableTableOptionInterface[] = [];\n        // General column options\n        const expandableColumnOption = Object.assign({}, this.expandableColumn);\n        expandableColumnOption['hoverBackgroundColor'] = '#494949'; // Change hover background color\n        const actionsColumnOption = { columns: [DynamicExpandableTableColumnDefinitionConstants.HTML_ACTIONS], names: ['Actions'], backgroundColor: '#4AC3FC' };\n        actionsColumnOption['backgroundColor'] = '#FFFFFF'; // Change background color of the actions column\n        // 1. table group options: Requested drugs\n        const groupByRequested: DynamicTableGroupInterface = this.createGroupExpression('approval', [{ 'operator': '==', 'value': DrugApprovalConstants.PENDING }]);\n        options.push(this.createExpandableTableOption(DrugsExpandableTableDataProvider.GROUP_NAME_1, [{ group: groupByRequested, operator: '' }], [expandableColumnOption, actionsColumnOption], '#F2E70A'));\n        // 2. table group options: Active drugs\n        const table2IconColumnOption = Object.assign({}, this.iconColumnDefinition);\n        table2IconColumnOption['backgroundColor'] = '#4AC3FC';\n        const groupByApproved: DynamicTableGroupInterface = this.createGroupExpression('approval', [{ 'operator': '==', 'value': DrugApprovalConstants.APPROVED }]);\n        const groupByWithoutReserved: DynamicTableGroupInterface = this.createGroupExpression('_usage', [{ 'operator': '!=', 'value': DrugUsageConstants.RESERVED }], 'Number');\n        const groupByDate: DynamicTableGroupInterface = this.createGroupExpression('date-to', [{ 'operator': '==', 'value': 'null' }, { 'operator': '||', 'value': '' }, { 'operator': '!=', 'value': null }], 'Date');\n        options.push(this.createExpandableTableOption(DrugsExpandableTableDataProvider.GROUP_NAME_2, [{ group: groupByApproved, operator: '&&' }, { group: groupByWithoutReserved, operator: '&&' }, { group: groupByDate, operator: '' }], [expandableColumnOption, table2IconColumnOption]));\n        // 3. table group options: Reserved drugs\n        const table3IconColumnOption = Object.assign({}, this.iconColumnDefinition);\n        table3IconColumnOption['backgroundColor'] = '#4AC3FC';\n        const groupByReserved: DynamicTableGroupInterface = this.createGroupExpression('_usage', [{ 'operator': '==', 'value': DrugUsageConstants.RESERVED }], 'Number');\n        options.push(this.createExpandableTableOption(DrugsExpandableTableDataProvider.GROUP_NAME_3, [{ group: groupByReserved, operator: '' }], [expandableColumnOption, table3IconColumnOption]));\n        // return table options\n        return options;\n    }\n\n    // Retrieves the 1. level expanded row columns\n    getExpandedItemTableColumns(expandedItem: object): DynamicExpandableTableExpandedItemColumnInterace[] {\n        return [\n            this.createExpandedItemColumn('expandedItemExpandableColumn', '', '#494949', '#ffffff', 'timer'),\n            this.createExpandedItemColumn('unit', 'Einheit', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('unittype', 'Form', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('article', 'Art', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('dateRange', 'Wirkzeitraum', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('reason', 'Grund', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('physicianDrugAdministrator', 'Verordnet durch', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('comment', 'Bemerkung', '#494949', '#ffffff')\n        ];\n    }\n\n    // Retrieves the data that should be displayed for the 1. expanded row\n    getExpandedItemTableData(expandedItem: object): Observable {\n        const itemDetails: Object = this.expandedItemTableData[0];\n        itemDetails['unit'] = expandedItem['medinfo']['_qty'] + ' ' + expandedItem['medinfo']['_qtyu'];\n        itemDetails['unittype'] = expandedItem['medinfo']['_form'];\n        itemDetails['article'] = this.eMedisTranslationsService.getUsageTranslatedText(expandedItem);\n        itemDetails['dateRange'] = 'Von: ' + expandedItem['date-from'];\n        if (expandedItem['date-to'] != null) {\n            itemDetails['dateRange'] += '' + 'Bis: ' + expandedItem['date-to'];\n        }\n        itemDetails['reason'] = 'Infektion';\n        itemDetails['physicianDrugAdministrator'] = expandedItem['physician-drug-administrator-name'];\n        itemDetails['comment'] = expandedItem['comment'];\n        return of(this.expandedItemTableData);\n    }\n\n    // Retrieves the 2. level expanded row columns\n    getExpandedItemDetailsTableColumns(expandedItemDetails: object, expandedItem: object): DynamicExpandableTableExpandedItemColumnInterace[] {\n        return [\n            this.createExpandedItemColumn('icon', '', '#494949', '#ffffff', 'history-icon'),\n            this.createExpandedItemColumn('unit', 'Einheit', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('unittype', 'Einheitstyp', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('article', 'Art', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('dateRange', 'Wirkzeitraum', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('reason', 'Indikation', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('physicianDrugAdministrator', 'Verordnet durch', '#494949', '#ffffff'),\n            this.createExpandedItemColumn('comment', 'Bemerkung', '#494949', '#ffffff')\n        ];\n    }\n\n    // Retrieves the data that should be displayed for the 2. expanded row\n    getExpandedItemDetailsTableData(expandedItemDetails: object, expandedItem: object): Observable {\n        return this.loadDrugHistory(expandedItem['id']['elementId']);\n    }\n\n    // Loads the durgs history\n    private loadDrugHistory(drugElementId: number): Observable {\n        return this.drugsService.loadDrugHistory(drugElementId, this.UserConfig.patientId, this.UserConfig.orgId)\n            .pipe(\n                map((drugElements: Object[]) => {\n                    return this.drugsHistoryConverterPipe.transform(drugElements);\n                })\n            );\n    }\n\n    // Create an key value based object as an expanded item\n    private createExpandedItemData(): Object[] {\n        return [\n            {\n                'expandedItemExpandableColumn': '',\n                'unit': '',\n                'unittype': '',\n                'article': '',\n                'dateRange': '',\n                'reason': '',\n                'physicianDrugAdministrator': '',\n                'comment': ''\n            },\n        ];\n    }\n\n    /////////////////////// Undefined columns/cells ///////////////////////\n    getIndicatorColor(item: object): string {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    getIndicatorSign(item: object): string {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}\nAs you can see all groups are created inside of the table options and the logic how to group the data is defined there as well. i.e. in the first group we want to group all approved drugs, so we defined the following group expression: Group by the property 'approval' and it's {'operator': '==', 'value': DrugApprovalConstants.PENDING }\nNotice that we defined different column background colors for expanded rows and additional in the table options individual cell background colors can also be defined.\nGo to your module where your drugs list component is declared, and define the DrugsExpandableTableDataProvider like in the code below, see especially the providers[] section:\n\nimport { NgModule } from '@angular/core';\nimport { DynamicExpandableTableDataProvider, DynamicExpandableTableDataProvider } from 'ngx-dynamic-material-table';\n\n@NgModule({\n    imports: [\n        DynamicExpandableTableModule,\n        DynamicExpandableTableModule.forRoot()\n    ],\n    declarations: [\n        DrugsListComponent\n    ],\n    providers: [\n        DrugsExpandableTableDataProvider,\n        { provide: DynamicExpandableTableDataProvider, useExisting: DrugsExpandableTableDataProvider },\n    ],\n})\nexport class YourModule { }\nAdd to your component html template in our case drugs-list.component.html the following code snippet, notice that you can show or hide the filter:\n\n\nTheming: see the following code example how to use a customized style for your table. For our tutorial example open your drugs-list.component.scss file and add:\n\n@import '../../../../../node_modules/ngx-dynamic-material-table/theming';\n\n///////////////////////////////////// VARIABLES /////////////////////////////////////\n$row-height: 80px;\n\n///////////////////////////////////// GENERAL STYLES /////////////////////////////////////\n.flex-column {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    align-content: center;\n    margin-left: 0px !important;\n}\n\n.text-color {\n    color: #494949;\n}\n\n:host ::ng-deep .mat-toolbar {\n    min-height: 50px;\n    height: 50px;\n}\n\n:host ::ng-deep .mat-row {\n    overflow: hidden;\n}\n\n:host ::ng-deep .mat-cell {\n    @extend .text-color;\n    border-right: 0.5px solid #e0e0e0;\n}\n\n:host ::ng-deep .mat-cell:first-child {\n    padding-left: 0px !important;\n}\n\n///////////////////////////////////// OVERRIDE PREDEFINED COLUMNS /////////////////////////////////////\n.drugs-column {\n    justify-content: center;\n}\n\n:host ::ng-deep .color-column {\n    @extend .drugs-column;\n    width: 0%;\n    min-width: 0%;\n    max-width: 0%;\n}\n\n:host ::ng-deep .html-content-summary-column {\n    @extend .drugs-column;\n    justify-content: flex-start;\n    padding-left: 5px;\n    width: 30% !important;\n    min-width: 30% !important;\n    max-width: 30% !important;\n}\n\n:host ::ng-deep .description-column {\n    @extend .drugs-column;\n    justify-content: flex-start;\n    padding-left: 5px;\n    width: 15%;\n    min-width: 15%;\n    max-width: 15%;\n}\n\n:host ::ng-deep .title-column {\n    @extend .drugs-column;\n    justify-content: flex-start;\n    padding-left: 5px;\n    width: 15%;\n    min-width: 15%;\n    max-width: 15%;\n}\n\n:host ::ng-deep .icon-column {\n    @extend .drugs-column;\n    width: 5%;\n    min-width: 5%;\n    max-width: 5%;\n}\n\n:host ::ng-deep .additional-info-column {\n    @extend .drugs-column;\n    width: 5% !important;\n    min-width: 5% !important;\n    max-width: 5% !important;\n}\n\n:host ::ng-deep .other-text-based-column {\n    @extend .drugs-column;\n    width: 5%;\n    min-width: 5%;\n    max-width: 5%;\n    font-size: 18px;\n    font-weight: 400;\n    line-height: 24px;\n}\n\n:host ::ng-deep .expandable-row-column {\n    @extend .drugs-column;\n    cursor: pointer;\n    width: 5%;\n    min-width: 5%;\n    max-width: 5%;\n}\n\n:host ::ng-deep .actions-column {\n    @extend .drugs-column;\n    justify-content: flex-end;\n    min-width: 5% !important;\n}\n\n///////////////////////////////////// (1. LEVEL) EXPANDED ITEM TABLE COLUMNS /////////////////////////////////////\n:host ::ng-deep .pal-expandable-table-grouped-container {\n    width: 85%\n}\n\n:host ::ng-deep .pal-expandable-table-grouped {\n    margin-top: 25px;\n}\n\n.expanded-item-columns {\n    @extend .flex-column;\n    background-color: #5D5D5D;\n    color: #ffffff;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 16px;\n}\n\n:host ::ng-deep .expanded-item-column-expandedItemExpandableColumn {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 5%;\n    min-width: 5%;\n    max-width: 5%;\n    background-color: #40C4FF;\n    cursor: pointer;\n}\n\n:host ::ng-deep .expanded-item-column-unit {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 10%;\n    min-width: 10%;\n    max-width: 10%;\n}\n\n:host ::ng-deep .expanded-item-column-unittype {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 10%;\n    min-width: 10%;\n    max-width: 10%;\n}\n\n:host ::ng-deep .expanded-item-column-article {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 10%;\n    min-width: 10%;\n    max-width: 10%;\n}\n\n:host ::ng-deep .expanded-item-column-dateRange {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 15%;\n    min-width: 15%;\n    max-width: 15%;\n}\n\n:host ::ng-deep .expanded-item-column-reason {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 10%;\n    min-width: 10%;\n    max-width: 10%;\n}\n\n:host ::ng-deep .expanded-item-column-physicianDrugAdministrator {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 10%;\n    min-width: 10%;\n    max-width: 10%;\n}\n\n:host ::ng-deep .expanded-item-column-comment {\n    @extend .expanded-item-columns;\n    justify-content: center;\n    width: 30%;\n    min-width: 30%;\n    max-width: 30%;\n}\n\n///////////////////////////////////// (2. LEVEL) EXPANDED ITEM DETAIL TABLE COLUMNS /////////////////////////////////////\n.expanded-item-detail-columns {\n    @extend .expanded-item-columns;\n    background-color: #EAEAEA;\n    color: #5D5D5D;\n}\n\n:host ::ng-deep .expanded-item-detail-column-icon {\n    @extend .expanded-item-column-expandedItemExpandableColumn;\n    background-color: #FFFFFF;\n    color: #000000;\n    cursor: default;\n}\n\n:host ::ng-deep .expanded-item-detail-column-unit {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-unit;\n}\n\n:host ::ng-deep .expanded-item-detail-column-unittype {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-unittype;\n}\n\n:host ::ng-deep .expanded-item-detail-column-article {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-article;\n}\n\n:host ::ng-deep .expanded-item-detail-column-dateRange {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-dateRange;\n}\n\n:host ::ng-deep .expanded-item-detail-column-reason {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-reason;\n}\n\n:host ::ng-deep .expanded-item-detail-column-physicianDrugAdministrator {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-physicianDrugAdministrator;\n}\n\n:host ::ng-deep .expanded-item-detail-column-comment {\n    @extend .expanded-item-detail-columns,\n    .expanded-item-column-comment;\n}\n\n///////////////////////////////////// STYLE THE CONTENT INSIDE OF COLUMNS USED BY DrugsExpandableTableDataProvider /////////////////////////////////////\n:host ::ng-deep .active-ingredient {\n    // font-family: \"Roboto Slab\";\n    font-size: 14px; // 1vw\n    font-weight: 300;\n    line-height: 19px;\n}\n\n:host ::ng-deep .drug-name {\n    // font-family: \"Roboto Slab\";\n    font-size: 18px;\n    font-weight: 500; // bold\n    line-height: 24px;\n}\n\n:host ::ng-deep .drug-image {\n    width: 50px;\n    height: 50px;\n}\n\n:host ::ng-deep .drug-when {\n    @extend .text-color;\n    font-size: 18px;\n    font-weight: 500;\n}\n\n:host ::ng-deep .drug-administration {\n    @extend .text-color;\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 21px;\n}\n\n:host ::ng-deep .medinfo-atc {\n    @extend .text-color;\n    font-size: 16px;\n    font-weight: 300;\n    line-height: 21px;\n}\n\n:host ::ng-deep .mat-slide-toggle-bar {\n    background-color: #40C4FF;\n}\n\n:host ::ng-deep .edit-drug {\n    cursor: pointer;\n}\nTo override the style you need to import the theming file: @import '../../../../../node_modules/ngx-dynamic-material-table/theming';\nAs you can see above you can easily override predefined columns for a row and set the column widths.\nNotice that for each defined expanded table columnId in the DrugsExpandableTableDataProvider, automatically a css class is generated, which you can override. See i.e. .expanded-item-column-unittype or .expanded-item-detail-column-reason classes above are generated and can be overriden for a customized style.\nTo handle actions or mouse events implement in your component i.e. in our example  DrugsListComponent the generic interface UsingDynamicTableComponent like in the code below:\n\nimport { Component, AfterViewInit } from '@angular/core';\nimport { DrugsExpandableTableDataProvider } from './drugs-expandable-table-data.provider';\nimport { UsingDynamicTableComponent, DynamicTableActionMessageService } from 'ngx-dynamic-material-table';\n\n@Component({\n    selector: 'drugs-list-component',\n    templateUrl: './drugs-list.component.html',\n    styleUrls: ['./drugs-list.component.scss']\n})\nexport class DrugsListComponent implements AfterViewInit, UsingDynamicTableComponent { \n\n    constructor(\n        private dynamicTableActionMessageService: DynamicTableActionMessageService,\n        private drugsExpandableTableDataProvider: DrugsExpandableTableDataProvider,\n    ) {}\n\n    ngAfterViewInit() {\n        this.handleDynamicTableActions(this.dynamicTableActionMessageService.getPubisher());\n        this.handleDynamicTableMouseOverEvents(this.dynamicTableActionMessageService.getPubisher());\n        this.handleDynamicTableMouseOutEvents(this.dynamicTableActionMessageService.getPubisher());\n    }\n\n    // Handles actions published by the dynamic table i.e. edit the selected drug\n    handleDynamicTableActions(publisher: Observable): void {\n        if (publisher != null) {\n            publisher.subscribe(\n                (actionMessage: DynamicTableActionMessageService) => {\n                    switch (actionMessage.getAction()) {\n                        case DrugsExpandableTableDataProvider.ACTION_EDIT_DRUG:\n                            this.openSideNav(actionMessage.getItem());\n                            break;\n                    }\n                }\n            );\n        }\n    }\n\n    // Handles mouse over events published by the dynamic table i.e. show drug's package pic in a modal window\n    handleDynamicTableMouseOverEvents(publisher: Observable): void {\n        if (publisher != null) {\n            publisher.subscribe(\n                (mouseEventMessage: DynamicTableMouseEventMessageService) => {\n                    switch (mouseEventMessage.getMouseEvent()) {\n                        case DrugsExpandableTableDataProvider.MOUSE_OVER_EVENT_SHOW_DRUG_PACKAGE:\n                            this.bottomSheet.open(EMedisDrugImageBottomSheetComponent, {\n                                data: {\n                                    imageUrl: mouseEventMessage.getItem()['medinfo']['_pafLink'],\n                                    imageWidth: 400,\n                                    imageHeight: 400\n                                },\n                            });\n                            break;\n                    }\n                }\n            );\n        }\n    }\n\n    // Handles mouse out events published by the dynamic table i.e. hide drug's package pic\n    handleDynamicTableMouseOutEvents(publisher: Observable): void {\n        if (publisher != null) {\n            publisher.subscribe(\n                (mouseEventMessage: DynamicTableMouseEventMessageService) => {\n                    switch (mouseEventMessage.getMouseEvent()) {\n                        case DrugsExpandableTableDataProvider.MOUSE_OUT_EVENT_HIDE_DRUG_PACKAGE:\n                            this.bottomSheet.dismiss();\n                            break;\n                    }\n                }\n            );\n        }\n    }\n\n}\nNotice that action, mouse over and out events are defined in the DrugsExpandableTableDataProvider using the DynamicTableUIUtils class.\nThe actions and mouse events are published by the dynamic table and you can subscribe to the published events and handle them like in the code above.\n\nDevelopment\nscss-bundle\n\nBundles all SCSS imports into a single file recursively.\n\n\nMake sure scss-bundle is installed globally: npm i -g scss-bundle\nModify the scss-bundle.config.json file.\n\n{\n    \"entry\": \"./src/main.scss\",\n    \"dest\": \"bundled.scss\"\n}entry *    string:    Main entry file where to start bundling.\ndest *    string    Destination file when bundling is done.\nDevelopment of the library\n\nIf you want to play and develop the library without a relase, follow the following steps.\n\n\nAdd or modify your code in ng-libraries/ngx-dynamic-material-table/\nMake sure you're on the project root and run: ng build ngx-dynamic-material-table\nGo to the library folder by running cd ng-libraries/ngx-dynamic-material-table and run inside: npm run bundle-styles to bundle all styles as _theming.scss file.\nMake sure that the current version is deleted from the node_modules.\nCopy dist/ngx-dynamic-material-table and paste it to the node_modules\nNow you can start your angular application as usual by running ng serve\nIf you want to debug the library you need to publish the source maps, for that just start the application by running the command ng serve --vendorSourceMap\n\n:warning: but note that your changes are still unpublished to the npm repository.\nPublish a new version to the NPM repository\n\nFollow the following steps to publish the library to the npm repository.\n\n\nIncrease the version in package.json in ng-libraries/ngx-dynamic-material-table/\nInside of the root project web/ run: ng build ngx-dynamic-material-table\nGo to dist/ngx-dynamic-material-table\nLogin to the npm repository by running: npm login\nPublish to the npm repository by running: npm publish\n\nChangelog\n\nBelow you can find the list of changelogs.\n\n0.2.6\n\nFixed several design issues (flex layout)\n\n0.2.5\n\nAdded tutorial pictures\n\n0.2.4\n\nDocumented the library and added tutorials\nAdded DynamicTableExpressionBuilder, an expression builder for table groups\nAdded DynamicTableUIUtils class for easily creation of dynamic table conform UI components.\n\n0.2.3\n\nfixed data loading bug\n\n0.2.2\n\nfixed several bugs and added theming support\n\n0.2.1\n\nchanged packaging to ng-packgr provided by the angular cli\n\n0.2.0\n\nfurther enhancements on generated folder structure\n\n0.1.9\n\nfurther enhancements on generated folder structure\n\n0.1.8\n\nenhanced generated file folder structure\n\n0.1.7\n\nadded declaration file for module\n\n0.1.6\n\nchanged transpile to typescript\n\n0.1.5\n\nexcluded dependencies from rollup\n\n0.1.4\n\nchanged rollup configs\n\n0.1.3\n\nmerged all index files to a single index.ts file\n\n0.1.2\n\nadapted index.ts files\n\n0.1.1\n\nadded styles which can be found in src/dynamic-table-styles.scss\n\n0.1.0\n\ndraft implementation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DynamicExpandableTableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicTableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicExpandableTableModule\n\n\n\ncluster_DynamicExpandableTableModule_declarations\n\n\n\ncluster_DynamicExpandableTableModule_imports\n\n\n\ncluster_DynamicExpandableTableModule_exports\n\n\n\ncluster_DynamicExpandableTableModule_providers\n\n\n\ncluster_DynamicTableModule\n\n\n\ncluster_DynamicTableModule_declarations\n\n\n\ncluster_DynamicTableModule_exports\n\n\n\ncluster_DynamicTableModule_providers\n\n\n\n\nDynamicExpandableTableComponent\n\nDynamicExpandableTableComponent\n\n\n\nDynamicExpandableTableModule\n\nDynamicExpandableTableModule\n\nDynamicExpandableTableModule -->\n\nDynamicExpandableTableComponent->DynamicExpandableTableModule\n\n\n\n\n\nExpandableTableInstanceComponent\n\nExpandableTableInstanceComponent\n\nDynamicExpandableTableModule -->\n\nExpandableTableInstanceComponent->DynamicExpandableTableModule\n\n\n\n\n\nDynamicExpandableTableComponent \n\nDynamicExpandableTableComponent \n\nDynamicExpandableTableComponent  -->\n\nDynamicExpandableTableModule->DynamicExpandableTableComponent \n\n\n\n\n\nExpandableTableInstanceComponent \n\nExpandableTableInstanceComponent \n\nExpandableTableInstanceComponent  -->\n\nDynamicExpandableTableModule->ExpandableTableInstanceComponent \n\n\n\n\n\nDynamicTableModule\n\nDynamicTableModule\n\nDynamicExpandableTableModule -->\n\nDynamicTableModule->DynamicExpandableTableModule\n\n\n\nDynamicExpandableTableModule -->\n\nDynamicTableModule->DynamicExpandableTableModule\n\n\n\n\n\nDynamicTableActionsContainerDirective \n\nDynamicTableActionsContainerDirective \n\nDynamicTableActionsContainerDirective  -->\n\nDynamicTableModule->DynamicTableActionsContainerDirective \n\n\n\n\n\nDynamicTableComponent \n\nDynamicTableComponent \n\nDynamicTableComponent  -->\n\nDynamicTableModule->DynamicTableComponent \n\n\n\n\n\nDynamicTableContainerDirective \n\nDynamicTableContainerDirective \n\nDynamicTableContainerDirective  -->\n\nDynamicTableModule->DynamicTableContainerDirective \n\n\n\n\n\nDynamicTableContentSummaryContainerDirective \n\nDynamicTableContentSummaryContainerDirective \n\nDynamicTableContentSummaryContainerDirective  -->\n\nDynamicTableModule->DynamicTableContentSummaryContainerDirective \n\n\n\n\n\nDynamicTableDescriptionContainerDirective \n\nDynamicTableDescriptionContainerDirective \n\nDynamicTableDescriptionContainerDirective  -->\n\nDynamicTableModule->DynamicTableDescriptionContainerDirective \n\n\n\n\n\nDynamicTableIconContainerDirective \n\nDynamicTableIconContainerDirective \n\nDynamicTableIconContainerDirective  -->\n\nDynamicTableModule->DynamicTableIconContainerDirective \n\n\n\n\n\nDynamicTableTitleContainerDirective \n\nDynamicTableTitleContainerDirective \n\nDynamicTableTitleContainerDirective  -->\n\nDynamicTableModule->DynamicTableTitleContainerDirective \n\n\n\n\n\nPalTableAdditionalInfoContainerDirective \n\nPalTableAdditionalInfoContainerDirective \n\nPalTableAdditionalInfoContainerDirective  -->\n\nDynamicTableModule->PalTableAdditionalInfoContainerDirective \n\n\n\n\n\nTableInstanceComponent \n\nTableInstanceComponent \n\nTableInstanceComponent  -->\n\nDynamicTableModule->TableInstanceComponent \n\n\n\n\n\nDynamicExpandableTableDataProvider\n\nDynamicExpandableTableDataProvider\n\nDynamicExpandableTableModule -->\n\nDynamicExpandableTableDataProvider->DynamicExpandableTableModule\n\n\n\n\n\nDynamicTableActionsContainerDirective\n\nDynamicTableActionsContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableActionsContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableColumnsContainerDirective\n\nDynamicTableColumnsContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableColumnsContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableComponent\n\nDynamicTableComponent\n\nDynamicTableModule -->\n\nDynamicTableComponent->DynamicTableModule\n\n\n\n\n\nDynamicTableContainerDirective\n\nDynamicTableContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableContentSummaryContainerDirective\n\nDynamicTableContentSummaryContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableContentSummaryContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableDescriptionContainerDirective\n\nDynamicTableDescriptionContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableDescriptionContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableIconContainerDirective\n\nDynamicTableIconContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableIconContainerDirective->DynamicTableModule\n\n\n\n\n\nDynamicTableTitleContainerDirective\n\nDynamicTableTitleContainerDirective\n\nDynamicTableModule -->\n\nDynamicTableTitleContainerDirective->DynamicTableModule\n\n\n\n\n\nPalTableAdditionalInfoContainerDirective\n\nPalTableAdditionalInfoContainerDirective\n\nDynamicTableModule -->\n\nPalTableAdditionalInfoContainerDirective->DynamicTableModule\n\n\n\n\n\nTableInstanceComponent\n\nTableInstanceComponent\n\nDynamicTableModule -->\n\nTableInstanceComponent->DynamicTableModule\n\n\n\n\n\nDynamicTableDataProvider\n\nDynamicTableDataProvider\n\nDynamicTableModule -->\n\nDynamicTableDataProvider->DynamicTableModule\n\n\n\n\n\nDynamicTableDynamicCellBuilder\n\nDynamicTableDynamicCellBuilder\n\nDynamicTableModule -->\n\nDynamicTableDynamicCellBuilder->DynamicTableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
